
T.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000031d8  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000080  08003298  08003298  00013298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003318  08003318  00020104  2**0
                  CONTENTS
  4 .ARM          00000000  08003318  08003318  00020104  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003318  08003318  00020104  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003318  08003318  00013318  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800331c  0800331c  0001331c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000104  20000000  08003320  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000006c  20000104  08003424  00020104  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000170  08003424  00020170  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020104  2**0
                  CONTENTS, READONLY
 12 .debug_info   00004059  00000000  00000000  0002012c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000766  00000000  00000000  00024185  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000450  00000000  00000000  000248f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000418  00000000  00000000  00024d40  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00009357  00000000  00000000  00025158  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001f55  00000000  00000000  0002e4af  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00031270  00000000  00000000  00030404  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00061674  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001348  00000000  00000000  000616f0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000104 	.word	0x20000104
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08003280 	.word	0x08003280

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000108 	.word	0x20000108
 8000104:	08003280 	.word	0x08003280

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	; 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f806 	bl	800021c <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			; (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__aeabi_idiv0>:
 800021c:	4770      	bx	lr
 800021e:	46c0      	nop			; (mov r8, r8)

08000220 <__aeabi_d2uiz>:
 8000220:	b570      	push	{r4, r5, r6, lr}
 8000222:	2200      	movs	r2, #0
 8000224:	4b0c      	ldr	r3, [pc, #48]	; (8000258 <__aeabi_d2uiz+0x38>)
 8000226:	0004      	movs	r4, r0
 8000228:	000d      	movs	r5, r1
 800022a:	f001 fcc5 	bl	8001bb8 <__aeabi_dcmpge>
 800022e:	2800      	cmp	r0, #0
 8000230:	d104      	bne.n	800023c <__aeabi_d2uiz+0x1c>
 8000232:	0020      	movs	r0, r4
 8000234:	0029      	movs	r1, r5
 8000236:	f001 fbe9 	bl	8001a0c <__aeabi_d2iz>
 800023a:	bd70      	pop	{r4, r5, r6, pc}
 800023c:	4b06      	ldr	r3, [pc, #24]	; (8000258 <__aeabi_d2uiz+0x38>)
 800023e:	2200      	movs	r2, #0
 8000240:	0020      	movs	r0, r4
 8000242:	0029      	movs	r1, r5
 8000244:	f001 f89a 	bl	800137c <__aeabi_dsub>
 8000248:	f001 fbe0 	bl	8001a0c <__aeabi_d2iz>
 800024c:	2380      	movs	r3, #128	; 0x80
 800024e:	061b      	lsls	r3, r3, #24
 8000250:	469c      	mov	ip, r3
 8000252:	4460      	add	r0, ip
 8000254:	e7f1      	b.n	800023a <__aeabi_d2uiz+0x1a>
 8000256:	46c0      	nop			; (mov r8, r8)
 8000258:	41e00000 	.word	0x41e00000

0800025c <__aeabi_dadd>:
 800025c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800025e:	464f      	mov	r7, r9
 8000260:	4646      	mov	r6, r8
 8000262:	46d6      	mov	lr, sl
 8000264:	000c      	movs	r4, r1
 8000266:	0309      	lsls	r1, r1, #12
 8000268:	b5c0      	push	{r6, r7, lr}
 800026a:	0a49      	lsrs	r1, r1, #9
 800026c:	0f47      	lsrs	r7, r0, #29
 800026e:	005e      	lsls	r6, r3, #1
 8000270:	4339      	orrs	r1, r7
 8000272:	031f      	lsls	r7, r3, #12
 8000274:	0fdb      	lsrs	r3, r3, #31
 8000276:	469c      	mov	ip, r3
 8000278:	0065      	lsls	r5, r4, #1
 800027a:	0a7b      	lsrs	r3, r7, #9
 800027c:	0f57      	lsrs	r7, r2, #29
 800027e:	431f      	orrs	r7, r3
 8000280:	0d6d      	lsrs	r5, r5, #21
 8000282:	0fe4      	lsrs	r4, r4, #31
 8000284:	0d76      	lsrs	r6, r6, #21
 8000286:	46a1      	mov	r9, r4
 8000288:	00c0      	lsls	r0, r0, #3
 800028a:	46b8      	mov	r8, r7
 800028c:	00d2      	lsls	r2, r2, #3
 800028e:	1bab      	subs	r3, r5, r6
 8000290:	4564      	cmp	r4, ip
 8000292:	d07b      	beq.n	800038c <__aeabi_dadd+0x130>
 8000294:	2b00      	cmp	r3, #0
 8000296:	dd5f      	ble.n	8000358 <__aeabi_dadd+0xfc>
 8000298:	2e00      	cmp	r6, #0
 800029a:	d000      	beq.n	800029e <__aeabi_dadd+0x42>
 800029c:	e0a4      	b.n	80003e8 <__aeabi_dadd+0x18c>
 800029e:	003e      	movs	r6, r7
 80002a0:	4316      	orrs	r6, r2
 80002a2:	d100      	bne.n	80002a6 <__aeabi_dadd+0x4a>
 80002a4:	e112      	b.n	80004cc <__aeabi_dadd+0x270>
 80002a6:	1e5e      	subs	r6, r3, #1
 80002a8:	2e00      	cmp	r6, #0
 80002aa:	d000      	beq.n	80002ae <__aeabi_dadd+0x52>
 80002ac:	e19e      	b.n	80005ec <__aeabi_dadd+0x390>
 80002ae:	1a87      	subs	r7, r0, r2
 80002b0:	4643      	mov	r3, r8
 80002b2:	42b8      	cmp	r0, r7
 80002b4:	4180      	sbcs	r0, r0
 80002b6:	2501      	movs	r5, #1
 80002b8:	1ac9      	subs	r1, r1, r3
 80002ba:	4240      	negs	r0, r0
 80002bc:	1a09      	subs	r1, r1, r0
 80002be:	020b      	lsls	r3, r1, #8
 80002c0:	d400      	bmi.n	80002c4 <__aeabi_dadd+0x68>
 80002c2:	e131      	b.n	8000528 <__aeabi_dadd+0x2cc>
 80002c4:	0249      	lsls	r1, r1, #9
 80002c6:	0a4e      	lsrs	r6, r1, #9
 80002c8:	2e00      	cmp	r6, #0
 80002ca:	d100      	bne.n	80002ce <__aeabi_dadd+0x72>
 80002cc:	e16e      	b.n	80005ac <__aeabi_dadd+0x350>
 80002ce:	0030      	movs	r0, r6
 80002d0:	f001 fc7c 	bl	8001bcc <__clzsi2>
 80002d4:	0003      	movs	r3, r0
 80002d6:	3b08      	subs	r3, #8
 80002d8:	2b1f      	cmp	r3, #31
 80002da:	dd00      	ble.n	80002de <__aeabi_dadd+0x82>
 80002dc:	e161      	b.n	80005a2 <__aeabi_dadd+0x346>
 80002de:	2220      	movs	r2, #32
 80002e0:	0039      	movs	r1, r7
 80002e2:	1ad2      	subs	r2, r2, r3
 80002e4:	409e      	lsls	r6, r3
 80002e6:	40d1      	lsrs	r1, r2
 80002e8:	409f      	lsls	r7, r3
 80002ea:	430e      	orrs	r6, r1
 80002ec:	429d      	cmp	r5, r3
 80002ee:	dd00      	ble.n	80002f2 <__aeabi_dadd+0x96>
 80002f0:	e151      	b.n	8000596 <__aeabi_dadd+0x33a>
 80002f2:	1b5d      	subs	r5, r3, r5
 80002f4:	1c6b      	adds	r3, r5, #1
 80002f6:	2b1f      	cmp	r3, #31
 80002f8:	dd00      	ble.n	80002fc <__aeabi_dadd+0xa0>
 80002fa:	e17c      	b.n	80005f6 <__aeabi_dadd+0x39a>
 80002fc:	2120      	movs	r1, #32
 80002fe:	1ac9      	subs	r1, r1, r3
 8000300:	003d      	movs	r5, r7
 8000302:	0030      	movs	r0, r6
 8000304:	408f      	lsls	r7, r1
 8000306:	4088      	lsls	r0, r1
 8000308:	40dd      	lsrs	r5, r3
 800030a:	1e79      	subs	r1, r7, #1
 800030c:	418f      	sbcs	r7, r1
 800030e:	0031      	movs	r1, r6
 8000310:	2207      	movs	r2, #7
 8000312:	4328      	orrs	r0, r5
 8000314:	40d9      	lsrs	r1, r3
 8000316:	2500      	movs	r5, #0
 8000318:	4307      	orrs	r7, r0
 800031a:	403a      	ands	r2, r7
 800031c:	2a00      	cmp	r2, #0
 800031e:	d009      	beq.n	8000334 <__aeabi_dadd+0xd8>
 8000320:	230f      	movs	r3, #15
 8000322:	403b      	ands	r3, r7
 8000324:	2b04      	cmp	r3, #4
 8000326:	d005      	beq.n	8000334 <__aeabi_dadd+0xd8>
 8000328:	1d3b      	adds	r3, r7, #4
 800032a:	42bb      	cmp	r3, r7
 800032c:	41bf      	sbcs	r7, r7
 800032e:	427f      	negs	r7, r7
 8000330:	19c9      	adds	r1, r1, r7
 8000332:	001f      	movs	r7, r3
 8000334:	020b      	lsls	r3, r1, #8
 8000336:	d400      	bmi.n	800033a <__aeabi_dadd+0xde>
 8000338:	e226      	b.n	8000788 <__aeabi_dadd+0x52c>
 800033a:	1c6a      	adds	r2, r5, #1
 800033c:	4bc6      	ldr	r3, [pc, #792]	; (8000658 <__aeabi_dadd+0x3fc>)
 800033e:	0555      	lsls	r5, r2, #21
 8000340:	0d6d      	lsrs	r5, r5, #21
 8000342:	429a      	cmp	r2, r3
 8000344:	d100      	bne.n	8000348 <__aeabi_dadd+0xec>
 8000346:	e106      	b.n	8000556 <__aeabi_dadd+0x2fa>
 8000348:	4ac4      	ldr	r2, [pc, #784]	; (800065c <__aeabi_dadd+0x400>)
 800034a:	08ff      	lsrs	r7, r7, #3
 800034c:	400a      	ands	r2, r1
 800034e:	0753      	lsls	r3, r2, #29
 8000350:	0252      	lsls	r2, r2, #9
 8000352:	433b      	orrs	r3, r7
 8000354:	0b12      	lsrs	r2, r2, #12
 8000356:	e08e      	b.n	8000476 <__aeabi_dadd+0x21a>
 8000358:	2b00      	cmp	r3, #0
 800035a:	d000      	beq.n	800035e <__aeabi_dadd+0x102>
 800035c:	e0b8      	b.n	80004d0 <__aeabi_dadd+0x274>
 800035e:	1c6b      	adds	r3, r5, #1
 8000360:	055b      	lsls	r3, r3, #21
 8000362:	0d5b      	lsrs	r3, r3, #21
 8000364:	2b01      	cmp	r3, #1
 8000366:	dc00      	bgt.n	800036a <__aeabi_dadd+0x10e>
 8000368:	e130      	b.n	80005cc <__aeabi_dadd+0x370>
 800036a:	1a87      	subs	r7, r0, r2
 800036c:	4643      	mov	r3, r8
 800036e:	42b8      	cmp	r0, r7
 8000370:	41b6      	sbcs	r6, r6
 8000372:	1acb      	subs	r3, r1, r3
 8000374:	4276      	negs	r6, r6
 8000376:	1b9e      	subs	r6, r3, r6
 8000378:	0233      	lsls	r3, r6, #8
 800037a:	d500      	bpl.n	800037e <__aeabi_dadd+0x122>
 800037c:	e14c      	b.n	8000618 <__aeabi_dadd+0x3bc>
 800037e:	003b      	movs	r3, r7
 8000380:	4333      	orrs	r3, r6
 8000382:	d1a1      	bne.n	80002c8 <__aeabi_dadd+0x6c>
 8000384:	2200      	movs	r2, #0
 8000386:	2400      	movs	r4, #0
 8000388:	2500      	movs	r5, #0
 800038a:	e070      	b.n	800046e <__aeabi_dadd+0x212>
 800038c:	2b00      	cmp	r3, #0
 800038e:	dc00      	bgt.n	8000392 <__aeabi_dadd+0x136>
 8000390:	e0e5      	b.n	800055e <__aeabi_dadd+0x302>
 8000392:	2e00      	cmp	r6, #0
 8000394:	d100      	bne.n	8000398 <__aeabi_dadd+0x13c>
 8000396:	e083      	b.n	80004a0 <__aeabi_dadd+0x244>
 8000398:	4eaf      	ldr	r6, [pc, #700]	; (8000658 <__aeabi_dadd+0x3fc>)
 800039a:	42b5      	cmp	r5, r6
 800039c:	d060      	beq.n	8000460 <__aeabi_dadd+0x204>
 800039e:	2680      	movs	r6, #128	; 0x80
 80003a0:	0436      	lsls	r6, r6, #16
 80003a2:	4337      	orrs	r7, r6
 80003a4:	46b8      	mov	r8, r7
 80003a6:	2b38      	cmp	r3, #56	; 0x38
 80003a8:	dc00      	bgt.n	80003ac <__aeabi_dadd+0x150>
 80003aa:	e13e      	b.n	800062a <__aeabi_dadd+0x3ce>
 80003ac:	4643      	mov	r3, r8
 80003ae:	4313      	orrs	r3, r2
 80003b0:	001f      	movs	r7, r3
 80003b2:	1e7a      	subs	r2, r7, #1
 80003b4:	4197      	sbcs	r7, r2
 80003b6:	183f      	adds	r7, r7, r0
 80003b8:	4287      	cmp	r7, r0
 80003ba:	4180      	sbcs	r0, r0
 80003bc:	4240      	negs	r0, r0
 80003be:	1809      	adds	r1, r1, r0
 80003c0:	020b      	lsls	r3, r1, #8
 80003c2:	d400      	bmi.n	80003c6 <__aeabi_dadd+0x16a>
 80003c4:	e0b0      	b.n	8000528 <__aeabi_dadd+0x2cc>
 80003c6:	4ba4      	ldr	r3, [pc, #656]	; (8000658 <__aeabi_dadd+0x3fc>)
 80003c8:	3501      	adds	r5, #1
 80003ca:	429d      	cmp	r5, r3
 80003cc:	d100      	bne.n	80003d0 <__aeabi_dadd+0x174>
 80003ce:	e0c3      	b.n	8000558 <__aeabi_dadd+0x2fc>
 80003d0:	4aa2      	ldr	r2, [pc, #648]	; (800065c <__aeabi_dadd+0x400>)
 80003d2:	087b      	lsrs	r3, r7, #1
 80003d4:	400a      	ands	r2, r1
 80003d6:	2101      	movs	r1, #1
 80003d8:	400f      	ands	r7, r1
 80003da:	431f      	orrs	r7, r3
 80003dc:	0851      	lsrs	r1, r2, #1
 80003de:	07d3      	lsls	r3, r2, #31
 80003e0:	2207      	movs	r2, #7
 80003e2:	431f      	orrs	r7, r3
 80003e4:	403a      	ands	r2, r7
 80003e6:	e799      	b.n	800031c <__aeabi_dadd+0xc0>
 80003e8:	4e9b      	ldr	r6, [pc, #620]	; (8000658 <__aeabi_dadd+0x3fc>)
 80003ea:	42b5      	cmp	r5, r6
 80003ec:	d038      	beq.n	8000460 <__aeabi_dadd+0x204>
 80003ee:	2680      	movs	r6, #128	; 0x80
 80003f0:	0436      	lsls	r6, r6, #16
 80003f2:	4337      	orrs	r7, r6
 80003f4:	46b8      	mov	r8, r7
 80003f6:	2b38      	cmp	r3, #56	; 0x38
 80003f8:	dd00      	ble.n	80003fc <__aeabi_dadd+0x1a0>
 80003fa:	e0dc      	b.n	80005b6 <__aeabi_dadd+0x35a>
 80003fc:	2b1f      	cmp	r3, #31
 80003fe:	dc00      	bgt.n	8000402 <__aeabi_dadd+0x1a6>
 8000400:	e130      	b.n	8000664 <__aeabi_dadd+0x408>
 8000402:	001e      	movs	r6, r3
 8000404:	4647      	mov	r7, r8
 8000406:	3e20      	subs	r6, #32
 8000408:	40f7      	lsrs	r7, r6
 800040a:	46bc      	mov	ip, r7
 800040c:	2b20      	cmp	r3, #32
 800040e:	d004      	beq.n	800041a <__aeabi_dadd+0x1be>
 8000410:	2640      	movs	r6, #64	; 0x40
 8000412:	1af3      	subs	r3, r6, r3
 8000414:	4646      	mov	r6, r8
 8000416:	409e      	lsls	r6, r3
 8000418:	4332      	orrs	r2, r6
 800041a:	0017      	movs	r7, r2
 800041c:	4663      	mov	r3, ip
 800041e:	1e7a      	subs	r2, r7, #1
 8000420:	4197      	sbcs	r7, r2
 8000422:	431f      	orrs	r7, r3
 8000424:	e0cc      	b.n	80005c0 <__aeabi_dadd+0x364>
 8000426:	2b00      	cmp	r3, #0
 8000428:	d100      	bne.n	800042c <__aeabi_dadd+0x1d0>
 800042a:	e204      	b.n	8000836 <__aeabi_dadd+0x5da>
 800042c:	4643      	mov	r3, r8
 800042e:	4313      	orrs	r3, r2
 8000430:	d100      	bne.n	8000434 <__aeabi_dadd+0x1d8>
 8000432:	e159      	b.n	80006e8 <__aeabi_dadd+0x48c>
 8000434:	074b      	lsls	r3, r1, #29
 8000436:	08c0      	lsrs	r0, r0, #3
 8000438:	4318      	orrs	r0, r3
 800043a:	2380      	movs	r3, #128	; 0x80
 800043c:	08c9      	lsrs	r1, r1, #3
 800043e:	031b      	lsls	r3, r3, #12
 8000440:	4219      	tst	r1, r3
 8000442:	d008      	beq.n	8000456 <__aeabi_dadd+0x1fa>
 8000444:	4645      	mov	r5, r8
 8000446:	08ed      	lsrs	r5, r5, #3
 8000448:	421d      	tst	r5, r3
 800044a:	d104      	bne.n	8000456 <__aeabi_dadd+0x1fa>
 800044c:	4643      	mov	r3, r8
 800044e:	08d0      	lsrs	r0, r2, #3
 8000450:	0759      	lsls	r1, r3, #29
 8000452:	4308      	orrs	r0, r1
 8000454:	0029      	movs	r1, r5
 8000456:	0f42      	lsrs	r2, r0, #29
 8000458:	00c9      	lsls	r1, r1, #3
 800045a:	4d7f      	ldr	r5, [pc, #508]	; (8000658 <__aeabi_dadd+0x3fc>)
 800045c:	4311      	orrs	r1, r2
 800045e:	00c0      	lsls	r0, r0, #3
 8000460:	074b      	lsls	r3, r1, #29
 8000462:	08ca      	lsrs	r2, r1, #3
 8000464:	497c      	ldr	r1, [pc, #496]	; (8000658 <__aeabi_dadd+0x3fc>)
 8000466:	08c0      	lsrs	r0, r0, #3
 8000468:	4303      	orrs	r3, r0
 800046a:	428d      	cmp	r5, r1
 800046c:	d068      	beq.n	8000540 <__aeabi_dadd+0x2e4>
 800046e:	0312      	lsls	r2, r2, #12
 8000470:	056d      	lsls	r5, r5, #21
 8000472:	0b12      	lsrs	r2, r2, #12
 8000474:	0d6d      	lsrs	r5, r5, #21
 8000476:	2100      	movs	r1, #0
 8000478:	0312      	lsls	r2, r2, #12
 800047a:	0018      	movs	r0, r3
 800047c:	0b13      	lsrs	r3, r2, #12
 800047e:	0d0a      	lsrs	r2, r1, #20
 8000480:	0512      	lsls	r2, r2, #20
 8000482:	431a      	orrs	r2, r3
 8000484:	4b76      	ldr	r3, [pc, #472]	; (8000660 <__aeabi_dadd+0x404>)
 8000486:	052d      	lsls	r5, r5, #20
 8000488:	4013      	ands	r3, r2
 800048a:	432b      	orrs	r3, r5
 800048c:	005b      	lsls	r3, r3, #1
 800048e:	07e4      	lsls	r4, r4, #31
 8000490:	085b      	lsrs	r3, r3, #1
 8000492:	4323      	orrs	r3, r4
 8000494:	0019      	movs	r1, r3
 8000496:	bc1c      	pop	{r2, r3, r4}
 8000498:	4690      	mov	r8, r2
 800049a:	4699      	mov	r9, r3
 800049c:	46a2      	mov	sl, r4
 800049e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80004a0:	003e      	movs	r6, r7
 80004a2:	4316      	orrs	r6, r2
 80004a4:	d012      	beq.n	80004cc <__aeabi_dadd+0x270>
 80004a6:	1e5e      	subs	r6, r3, #1
 80004a8:	2e00      	cmp	r6, #0
 80004aa:	d000      	beq.n	80004ae <__aeabi_dadd+0x252>
 80004ac:	e100      	b.n	80006b0 <__aeabi_dadd+0x454>
 80004ae:	1887      	adds	r7, r0, r2
 80004b0:	4287      	cmp	r7, r0
 80004b2:	4180      	sbcs	r0, r0
 80004b4:	4441      	add	r1, r8
 80004b6:	4240      	negs	r0, r0
 80004b8:	1809      	adds	r1, r1, r0
 80004ba:	2501      	movs	r5, #1
 80004bc:	020b      	lsls	r3, r1, #8
 80004be:	d533      	bpl.n	8000528 <__aeabi_dadd+0x2cc>
 80004c0:	2502      	movs	r5, #2
 80004c2:	e785      	b.n	80003d0 <__aeabi_dadd+0x174>
 80004c4:	4664      	mov	r4, ip
 80004c6:	0033      	movs	r3, r6
 80004c8:	4641      	mov	r1, r8
 80004ca:	0010      	movs	r0, r2
 80004cc:	001d      	movs	r5, r3
 80004ce:	e7c7      	b.n	8000460 <__aeabi_dadd+0x204>
 80004d0:	2d00      	cmp	r5, #0
 80004d2:	d000      	beq.n	80004d6 <__aeabi_dadd+0x27a>
 80004d4:	e0da      	b.n	800068c <__aeabi_dadd+0x430>
 80004d6:	000c      	movs	r4, r1
 80004d8:	4304      	orrs	r4, r0
 80004da:	d0f3      	beq.n	80004c4 <__aeabi_dadd+0x268>
 80004dc:	1c5c      	adds	r4, r3, #1
 80004de:	d100      	bne.n	80004e2 <__aeabi_dadd+0x286>
 80004e0:	e19f      	b.n	8000822 <__aeabi_dadd+0x5c6>
 80004e2:	4c5d      	ldr	r4, [pc, #372]	; (8000658 <__aeabi_dadd+0x3fc>)
 80004e4:	42a6      	cmp	r6, r4
 80004e6:	d100      	bne.n	80004ea <__aeabi_dadd+0x28e>
 80004e8:	e12f      	b.n	800074a <__aeabi_dadd+0x4ee>
 80004ea:	43db      	mvns	r3, r3
 80004ec:	2b38      	cmp	r3, #56	; 0x38
 80004ee:	dd00      	ble.n	80004f2 <__aeabi_dadd+0x296>
 80004f0:	e166      	b.n	80007c0 <__aeabi_dadd+0x564>
 80004f2:	2b1f      	cmp	r3, #31
 80004f4:	dd00      	ble.n	80004f8 <__aeabi_dadd+0x29c>
 80004f6:	e183      	b.n	8000800 <__aeabi_dadd+0x5a4>
 80004f8:	2420      	movs	r4, #32
 80004fa:	0005      	movs	r5, r0
 80004fc:	1ae4      	subs	r4, r4, r3
 80004fe:	000f      	movs	r7, r1
 8000500:	40dd      	lsrs	r5, r3
 8000502:	40d9      	lsrs	r1, r3
 8000504:	40a0      	lsls	r0, r4
 8000506:	4643      	mov	r3, r8
 8000508:	40a7      	lsls	r7, r4
 800050a:	1a5b      	subs	r3, r3, r1
 800050c:	1e44      	subs	r4, r0, #1
 800050e:	41a0      	sbcs	r0, r4
 8000510:	4698      	mov	r8, r3
 8000512:	432f      	orrs	r7, r5
 8000514:	4338      	orrs	r0, r7
 8000516:	1a17      	subs	r7, r2, r0
 8000518:	42ba      	cmp	r2, r7
 800051a:	4192      	sbcs	r2, r2
 800051c:	4643      	mov	r3, r8
 800051e:	4252      	negs	r2, r2
 8000520:	1a99      	subs	r1, r3, r2
 8000522:	4664      	mov	r4, ip
 8000524:	0035      	movs	r5, r6
 8000526:	e6ca      	b.n	80002be <__aeabi_dadd+0x62>
 8000528:	2207      	movs	r2, #7
 800052a:	403a      	ands	r2, r7
 800052c:	2a00      	cmp	r2, #0
 800052e:	d000      	beq.n	8000532 <__aeabi_dadd+0x2d6>
 8000530:	e6f6      	b.n	8000320 <__aeabi_dadd+0xc4>
 8000532:	074b      	lsls	r3, r1, #29
 8000534:	08ca      	lsrs	r2, r1, #3
 8000536:	4948      	ldr	r1, [pc, #288]	; (8000658 <__aeabi_dadd+0x3fc>)
 8000538:	08ff      	lsrs	r7, r7, #3
 800053a:	433b      	orrs	r3, r7
 800053c:	428d      	cmp	r5, r1
 800053e:	d196      	bne.n	800046e <__aeabi_dadd+0x212>
 8000540:	0019      	movs	r1, r3
 8000542:	4311      	orrs	r1, r2
 8000544:	d100      	bne.n	8000548 <__aeabi_dadd+0x2ec>
 8000546:	e19e      	b.n	8000886 <__aeabi_dadd+0x62a>
 8000548:	2180      	movs	r1, #128	; 0x80
 800054a:	0309      	lsls	r1, r1, #12
 800054c:	430a      	orrs	r2, r1
 800054e:	0312      	lsls	r2, r2, #12
 8000550:	0b12      	lsrs	r2, r2, #12
 8000552:	4d41      	ldr	r5, [pc, #260]	; (8000658 <__aeabi_dadd+0x3fc>)
 8000554:	e78f      	b.n	8000476 <__aeabi_dadd+0x21a>
 8000556:	0015      	movs	r5, r2
 8000558:	2200      	movs	r2, #0
 800055a:	2300      	movs	r3, #0
 800055c:	e78b      	b.n	8000476 <__aeabi_dadd+0x21a>
 800055e:	2b00      	cmp	r3, #0
 8000560:	d000      	beq.n	8000564 <__aeabi_dadd+0x308>
 8000562:	e0c7      	b.n	80006f4 <__aeabi_dadd+0x498>
 8000564:	1c6b      	adds	r3, r5, #1
 8000566:	055f      	lsls	r7, r3, #21
 8000568:	0d7f      	lsrs	r7, r7, #21
 800056a:	2f01      	cmp	r7, #1
 800056c:	dc00      	bgt.n	8000570 <__aeabi_dadd+0x314>
 800056e:	e0f1      	b.n	8000754 <__aeabi_dadd+0x4f8>
 8000570:	4d39      	ldr	r5, [pc, #228]	; (8000658 <__aeabi_dadd+0x3fc>)
 8000572:	42ab      	cmp	r3, r5
 8000574:	d100      	bne.n	8000578 <__aeabi_dadd+0x31c>
 8000576:	e0b9      	b.n	80006ec <__aeabi_dadd+0x490>
 8000578:	1885      	adds	r5, r0, r2
 800057a:	000a      	movs	r2, r1
 800057c:	4285      	cmp	r5, r0
 800057e:	4189      	sbcs	r1, r1
 8000580:	4442      	add	r2, r8
 8000582:	4249      	negs	r1, r1
 8000584:	1851      	adds	r1, r2, r1
 8000586:	2207      	movs	r2, #7
 8000588:	07cf      	lsls	r7, r1, #31
 800058a:	086d      	lsrs	r5, r5, #1
 800058c:	432f      	orrs	r7, r5
 800058e:	0849      	lsrs	r1, r1, #1
 8000590:	403a      	ands	r2, r7
 8000592:	001d      	movs	r5, r3
 8000594:	e6c2      	b.n	800031c <__aeabi_dadd+0xc0>
 8000596:	2207      	movs	r2, #7
 8000598:	4930      	ldr	r1, [pc, #192]	; (800065c <__aeabi_dadd+0x400>)
 800059a:	1aed      	subs	r5, r5, r3
 800059c:	4031      	ands	r1, r6
 800059e:	403a      	ands	r2, r7
 80005a0:	e6bc      	b.n	800031c <__aeabi_dadd+0xc0>
 80005a2:	003e      	movs	r6, r7
 80005a4:	3828      	subs	r0, #40	; 0x28
 80005a6:	4086      	lsls	r6, r0
 80005a8:	2700      	movs	r7, #0
 80005aa:	e69f      	b.n	80002ec <__aeabi_dadd+0x90>
 80005ac:	0038      	movs	r0, r7
 80005ae:	f001 fb0d 	bl	8001bcc <__clzsi2>
 80005b2:	3020      	adds	r0, #32
 80005b4:	e68e      	b.n	80002d4 <__aeabi_dadd+0x78>
 80005b6:	4643      	mov	r3, r8
 80005b8:	4313      	orrs	r3, r2
 80005ba:	001f      	movs	r7, r3
 80005bc:	1e7a      	subs	r2, r7, #1
 80005be:	4197      	sbcs	r7, r2
 80005c0:	1bc7      	subs	r7, r0, r7
 80005c2:	42b8      	cmp	r0, r7
 80005c4:	4180      	sbcs	r0, r0
 80005c6:	4240      	negs	r0, r0
 80005c8:	1a09      	subs	r1, r1, r0
 80005ca:	e678      	b.n	80002be <__aeabi_dadd+0x62>
 80005cc:	000e      	movs	r6, r1
 80005ce:	003b      	movs	r3, r7
 80005d0:	4306      	orrs	r6, r0
 80005d2:	4313      	orrs	r3, r2
 80005d4:	2d00      	cmp	r5, #0
 80005d6:	d161      	bne.n	800069c <__aeabi_dadd+0x440>
 80005d8:	2e00      	cmp	r6, #0
 80005da:	d000      	beq.n	80005de <__aeabi_dadd+0x382>
 80005dc:	e0f4      	b.n	80007c8 <__aeabi_dadd+0x56c>
 80005de:	2b00      	cmp	r3, #0
 80005e0:	d100      	bne.n	80005e4 <__aeabi_dadd+0x388>
 80005e2:	e11b      	b.n	800081c <__aeabi_dadd+0x5c0>
 80005e4:	4664      	mov	r4, ip
 80005e6:	0039      	movs	r1, r7
 80005e8:	0010      	movs	r0, r2
 80005ea:	e739      	b.n	8000460 <__aeabi_dadd+0x204>
 80005ec:	4f1a      	ldr	r7, [pc, #104]	; (8000658 <__aeabi_dadd+0x3fc>)
 80005ee:	42bb      	cmp	r3, r7
 80005f0:	d07a      	beq.n	80006e8 <__aeabi_dadd+0x48c>
 80005f2:	0033      	movs	r3, r6
 80005f4:	e6ff      	b.n	80003f6 <__aeabi_dadd+0x19a>
 80005f6:	0030      	movs	r0, r6
 80005f8:	3d1f      	subs	r5, #31
 80005fa:	40e8      	lsrs	r0, r5
 80005fc:	2b20      	cmp	r3, #32
 80005fe:	d003      	beq.n	8000608 <__aeabi_dadd+0x3ac>
 8000600:	2140      	movs	r1, #64	; 0x40
 8000602:	1acb      	subs	r3, r1, r3
 8000604:	409e      	lsls	r6, r3
 8000606:	4337      	orrs	r7, r6
 8000608:	1e7b      	subs	r3, r7, #1
 800060a:	419f      	sbcs	r7, r3
 800060c:	2207      	movs	r2, #7
 800060e:	4307      	orrs	r7, r0
 8000610:	403a      	ands	r2, r7
 8000612:	2100      	movs	r1, #0
 8000614:	2500      	movs	r5, #0
 8000616:	e789      	b.n	800052c <__aeabi_dadd+0x2d0>
 8000618:	1a17      	subs	r7, r2, r0
 800061a:	4643      	mov	r3, r8
 800061c:	42ba      	cmp	r2, r7
 800061e:	41b6      	sbcs	r6, r6
 8000620:	1a59      	subs	r1, r3, r1
 8000622:	4276      	negs	r6, r6
 8000624:	1b8e      	subs	r6, r1, r6
 8000626:	4664      	mov	r4, ip
 8000628:	e64e      	b.n	80002c8 <__aeabi_dadd+0x6c>
 800062a:	2b1f      	cmp	r3, #31
 800062c:	dd00      	ble.n	8000630 <__aeabi_dadd+0x3d4>
 800062e:	e0ad      	b.n	800078c <__aeabi_dadd+0x530>
 8000630:	2620      	movs	r6, #32
 8000632:	4647      	mov	r7, r8
 8000634:	1af6      	subs	r6, r6, r3
 8000636:	40b7      	lsls	r7, r6
 8000638:	46b9      	mov	r9, r7
 800063a:	0017      	movs	r7, r2
 800063c:	46b2      	mov	sl, r6
 800063e:	40df      	lsrs	r7, r3
 8000640:	464e      	mov	r6, r9
 8000642:	433e      	orrs	r6, r7
 8000644:	0037      	movs	r7, r6
 8000646:	4656      	mov	r6, sl
 8000648:	40b2      	lsls	r2, r6
 800064a:	1e56      	subs	r6, r2, #1
 800064c:	41b2      	sbcs	r2, r6
 800064e:	4317      	orrs	r7, r2
 8000650:	4642      	mov	r2, r8
 8000652:	40da      	lsrs	r2, r3
 8000654:	1889      	adds	r1, r1, r2
 8000656:	e6ae      	b.n	80003b6 <__aeabi_dadd+0x15a>
 8000658:	000007ff 	.word	0x000007ff
 800065c:	ff7fffff 	.word	0xff7fffff
 8000660:	800fffff 	.word	0x800fffff
 8000664:	2620      	movs	r6, #32
 8000666:	4647      	mov	r7, r8
 8000668:	1af6      	subs	r6, r6, r3
 800066a:	40b7      	lsls	r7, r6
 800066c:	46b9      	mov	r9, r7
 800066e:	0017      	movs	r7, r2
 8000670:	46b2      	mov	sl, r6
 8000672:	40df      	lsrs	r7, r3
 8000674:	464e      	mov	r6, r9
 8000676:	433e      	orrs	r6, r7
 8000678:	0037      	movs	r7, r6
 800067a:	4656      	mov	r6, sl
 800067c:	40b2      	lsls	r2, r6
 800067e:	1e56      	subs	r6, r2, #1
 8000680:	41b2      	sbcs	r2, r6
 8000682:	4317      	orrs	r7, r2
 8000684:	4642      	mov	r2, r8
 8000686:	40da      	lsrs	r2, r3
 8000688:	1a89      	subs	r1, r1, r2
 800068a:	e799      	b.n	80005c0 <__aeabi_dadd+0x364>
 800068c:	4c7f      	ldr	r4, [pc, #508]	; (800088c <__aeabi_dadd+0x630>)
 800068e:	42a6      	cmp	r6, r4
 8000690:	d05b      	beq.n	800074a <__aeabi_dadd+0x4ee>
 8000692:	2480      	movs	r4, #128	; 0x80
 8000694:	0424      	lsls	r4, r4, #16
 8000696:	425b      	negs	r3, r3
 8000698:	4321      	orrs	r1, r4
 800069a:	e727      	b.n	80004ec <__aeabi_dadd+0x290>
 800069c:	2e00      	cmp	r6, #0
 800069e:	d10c      	bne.n	80006ba <__aeabi_dadd+0x45e>
 80006a0:	2b00      	cmp	r3, #0
 80006a2:	d100      	bne.n	80006a6 <__aeabi_dadd+0x44a>
 80006a4:	e0cb      	b.n	800083e <__aeabi_dadd+0x5e2>
 80006a6:	4664      	mov	r4, ip
 80006a8:	0039      	movs	r1, r7
 80006aa:	0010      	movs	r0, r2
 80006ac:	4d77      	ldr	r5, [pc, #476]	; (800088c <__aeabi_dadd+0x630>)
 80006ae:	e6d7      	b.n	8000460 <__aeabi_dadd+0x204>
 80006b0:	4f76      	ldr	r7, [pc, #472]	; (800088c <__aeabi_dadd+0x630>)
 80006b2:	42bb      	cmp	r3, r7
 80006b4:	d018      	beq.n	80006e8 <__aeabi_dadd+0x48c>
 80006b6:	0033      	movs	r3, r6
 80006b8:	e675      	b.n	80003a6 <__aeabi_dadd+0x14a>
 80006ba:	2b00      	cmp	r3, #0
 80006bc:	d014      	beq.n	80006e8 <__aeabi_dadd+0x48c>
 80006be:	074b      	lsls	r3, r1, #29
 80006c0:	08c0      	lsrs	r0, r0, #3
 80006c2:	4318      	orrs	r0, r3
 80006c4:	2380      	movs	r3, #128	; 0x80
 80006c6:	08c9      	lsrs	r1, r1, #3
 80006c8:	031b      	lsls	r3, r3, #12
 80006ca:	4219      	tst	r1, r3
 80006cc:	d007      	beq.n	80006de <__aeabi_dadd+0x482>
 80006ce:	08fc      	lsrs	r4, r7, #3
 80006d0:	421c      	tst	r4, r3
 80006d2:	d104      	bne.n	80006de <__aeabi_dadd+0x482>
 80006d4:	0779      	lsls	r1, r7, #29
 80006d6:	08d0      	lsrs	r0, r2, #3
 80006d8:	4308      	orrs	r0, r1
 80006da:	46e1      	mov	r9, ip
 80006dc:	0021      	movs	r1, r4
 80006de:	464c      	mov	r4, r9
 80006e0:	0f42      	lsrs	r2, r0, #29
 80006e2:	00c9      	lsls	r1, r1, #3
 80006e4:	4311      	orrs	r1, r2
 80006e6:	00c0      	lsls	r0, r0, #3
 80006e8:	4d68      	ldr	r5, [pc, #416]	; (800088c <__aeabi_dadd+0x630>)
 80006ea:	e6b9      	b.n	8000460 <__aeabi_dadd+0x204>
 80006ec:	001d      	movs	r5, r3
 80006ee:	2200      	movs	r2, #0
 80006f0:	2300      	movs	r3, #0
 80006f2:	e6c0      	b.n	8000476 <__aeabi_dadd+0x21a>
 80006f4:	2d00      	cmp	r5, #0
 80006f6:	d15b      	bne.n	80007b0 <__aeabi_dadd+0x554>
 80006f8:	000d      	movs	r5, r1
 80006fa:	4305      	orrs	r5, r0
 80006fc:	d100      	bne.n	8000700 <__aeabi_dadd+0x4a4>
 80006fe:	e6e2      	b.n	80004c6 <__aeabi_dadd+0x26a>
 8000700:	1c5d      	adds	r5, r3, #1
 8000702:	d100      	bne.n	8000706 <__aeabi_dadd+0x4aa>
 8000704:	e0b0      	b.n	8000868 <__aeabi_dadd+0x60c>
 8000706:	4d61      	ldr	r5, [pc, #388]	; (800088c <__aeabi_dadd+0x630>)
 8000708:	42ae      	cmp	r6, r5
 800070a:	d01f      	beq.n	800074c <__aeabi_dadd+0x4f0>
 800070c:	43db      	mvns	r3, r3
 800070e:	2b38      	cmp	r3, #56	; 0x38
 8000710:	dc71      	bgt.n	80007f6 <__aeabi_dadd+0x59a>
 8000712:	2b1f      	cmp	r3, #31
 8000714:	dd00      	ble.n	8000718 <__aeabi_dadd+0x4bc>
 8000716:	e096      	b.n	8000846 <__aeabi_dadd+0x5ea>
 8000718:	2520      	movs	r5, #32
 800071a:	000f      	movs	r7, r1
 800071c:	1aed      	subs	r5, r5, r3
 800071e:	40af      	lsls	r7, r5
 8000720:	46b9      	mov	r9, r7
 8000722:	0007      	movs	r7, r0
 8000724:	46aa      	mov	sl, r5
 8000726:	40df      	lsrs	r7, r3
 8000728:	464d      	mov	r5, r9
 800072a:	433d      	orrs	r5, r7
 800072c:	002f      	movs	r7, r5
 800072e:	4655      	mov	r5, sl
 8000730:	40a8      	lsls	r0, r5
 8000732:	40d9      	lsrs	r1, r3
 8000734:	1e45      	subs	r5, r0, #1
 8000736:	41a8      	sbcs	r0, r5
 8000738:	4488      	add	r8, r1
 800073a:	4307      	orrs	r7, r0
 800073c:	18bf      	adds	r7, r7, r2
 800073e:	4297      	cmp	r7, r2
 8000740:	4192      	sbcs	r2, r2
 8000742:	4251      	negs	r1, r2
 8000744:	4441      	add	r1, r8
 8000746:	0035      	movs	r5, r6
 8000748:	e63a      	b.n	80003c0 <__aeabi_dadd+0x164>
 800074a:	4664      	mov	r4, ip
 800074c:	0035      	movs	r5, r6
 800074e:	4641      	mov	r1, r8
 8000750:	0010      	movs	r0, r2
 8000752:	e685      	b.n	8000460 <__aeabi_dadd+0x204>
 8000754:	000b      	movs	r3, r1
 8000756:	4303      	orrs	r3, r0
 8000758:	2d00      	cmp	r5, #0
 800075a:	d000      	beq.n	800075e <__aeabi_dadd+0x502>
 800075c:	e663      	b.n	8000426 <__aeabi_dadd+0x1ca>
 800075e:	2b00      	cmp	r3, #0
 8000760:	d0f5      	beq.n	800074e <__aeabi_dadd+0x4f2>
 8000762:	4643      	mov	r3, r8
 8000764:	4313      	orrs	r3, r2
 8000766:	d100      	bne.n	800076a <__aeabi_dadd+0x50e>
 8000768:	e67a      	b.n	8000460 <__aeabi_dadd+0x204>
 800076a:	1887      	adds	r7, r0, r2
 800076c:	4287      	cmp	r7, r0
 800076e:	4180      	sbcs	r0, r0
 8000770:	2207      	movs	r2, #7
 8000772:	4441      	add	r1, r8
 8000774:	4240      	negs	r0, r0
 8000776:	1809      	adds	r1, r1, r0
 8000778:	403a      	ands	r2, r7
 800077a:	020b      	lsls	r3, r1, #8
 800077c:	d400      	bmi.n	8000780 <__aeabi_dadd+0x524>
 800077e:	e6d5      	b.n	800052c <__aeabi_dadd+0x2d0>
 8000780:	4b43      	ldr	r3, [pc, #268]	; (8000890 <__aeabi_dadd+0x634>)
 8000782:	3501      	adds	r5, #1
 8000784:	4019      	ands	r1, r3
 8000786:	e5c9      	b.n	800031c <__aeabi_dadd+0xc0>
 8000788:	0038      	movs	r0, r7
 800078a:	e669      	b.n	8000460 <__aeabi_dadd+0x204>
 800078c:	001e      	movs	r6, r3
 800078e:	4647      	mov	r7, r8
 8000790:	3e20      	subs	r6, #32
 8000792:	40f7      	lsrs	r7, r6
 8000794:	46bc      	mov	ip, r7
 8000796:	2b20      	cmp	r3, #32
 8000798:	d004      	beq.n	80007a4 <__aeabi_dadd+0x548>
 800079a:	2640      	movs	r6, #64	; 0x40
 800079c:	1af3      	subs	r3, r6, r3
 800079e:	4646      	mov	r6, r8
 80007a0:	409e      	lsls	r6, r3
 80007a2:	4332      	orrs	r2, r6
 80007a4:	0017      	movs	r7, r2
 80007a6:	4663      	mov	r3, ip
 80007a8:	1e7a      	subs	r2, r7, #1
 80007aa:	4197      	sbcs	r7, r2
 80007ac:	431f      	orrs	r7, r3
 80007ae:	e602      	b.n	80003b6 <__aeabi_dadd+0x15a>
 80007b0:	4d36      	ldr	r5, [pc, #216]	; (800088c <__aeabi_dadd+0x630>)
 80007b2:	42ae      	cmp	r6, r5
 80007b4:	d0ca      	beq.n	800074c <__aeabi_dadd+0x4f0>
 80007b6:	2580      	movs	r5, #128	; 0x80
 80007b8:	042d      	lsls	r5, r5, #16
 80007ba:	425b      	negs	r3, r3
 80007bc:	4329      	orrs	r1, r5
 80007be:	e7a6      	b.n	800070e <__aeabi_dadd+0x4b2>
 80007c0:	4308      	orrs	r0, r1
 80007c2:	1e41      	subs	r1, r0, #1
 80007c4:	4188      	sbcs	r0, r1
 80007c6:	e6a6      	b.n	8000516 <__aeabi_dadd+0x2ba>
 80007c8:	2b00      	cmp	r3, #0
 80007ca:	d100      	bne.n	80007ce <__aeabi_dadd+0x572>
 80007cc:	e648      	b.n	8000460 <__aeabi_dadd+0x204>
 80007ce:	1a87      	subs	r7, r0, r2
 80007d0:	4643      	mov	r3, r8
 80007d2:	42b8      	cmp	r0, r7
 80007d4:	41b6      	sbcs	r6, r6
 80007d6:	1acb      	subs	r3, r1, r3
 80007d8:	4276      	negs	r6, r6
 80007da:	1b9e      	subs	r6, r3, r6
 80007dc:	0233      	lsls	r3, r6, #8
 80007de:	d54b      	bpl.n	8000878 <__aeabi_dadd+0x61c>
 80007e0:	1a17      	subs	r7, r2, r0
 80007e2:	4643      	mov	r3, r8
 80007e4:	42ba      	cmp	r2, r7
 80007e6:	4192      	sbcs	r2, r2
 80007e8:	1a59      	subs	r1, r3, r1
 80007ea:	4252      	negs	r2, r2
 80007ec:	1a89      	subs	r1, r1, r2
 80007ee:	2207      	movs	r2, #7
 80007f0:	4664      	mov	r4, ip
 80007f2:	403a      	ands	r2, r7
 80007f4:	e592      	b.n	800031c <__aeabi_dadd+0xc0>
 80007f6:	4301      	orrs	r1, r0
 80007f8:	000f      	movs	r7, r1
 80007fa:	1e79      	subs	r1, r7, #1
 80007fc:	418f      	sbcs	r7, r1
 80007fe:	e79d      	b.n	800073c <__aeabi_dadd+0x4e0>
 8000800:	001c      	movs	r4, r3
 8000802:	000f      	movs	r7, r1
 8000804:	3c20      	subs	r4, #32
 8000806:	40e7      	lsrs	r7, r4
 8000808:	2b20      	cmp	r3, #32
 800080a:	d003      	beq.n	8000814 <__aeabi_dadd+0x5b8>
 800080c:	2440      	movs	r4, #64	; 0x40
 800080e:	1ae3      	subs	r3, r4, r3
 8000810:	4099      	lsls	r1, r3
 8000812:	4308      	orrs	r0, r1
 8000814:	1e41      	subs	r1, r0, #1
 8000816:	4188      	sbcs	r0, r1
 8000818:	4338      	orrs	r0, r7
 800081a:	e67c      	b.n	8000516 <__aeabi_dadd+0x2ba>
 800081c:	2200      	movs	r2, #0
 800081e:	2400      	movs	r4, #0
 8000820:	e625      	b.n	800046e <__aeabi_dadd+0x212>
 8000822:	1a17      	subs	r7, r2, r0
 8000824:	4643      	mov	r3, r8
 8000826:	42ba      	cmp	r2, r7
 8000828:	4192      	sbcs	r2, r2
 800082a:	1a59      	subs	r1, r3, r1
 800082c:	4252      	negs	r2, r2
 800082e:	1a89      	subs	r1, r1, r2
 8000830:	4664      	mov	r4, ip
 8000832:	0035      	movs	r5, r6
 8000834:	e543      	b.n	80002be <__aeabi_dadd+0x62>
 8000836:	4641      	mov	r1, r8
 8000838:	0010      	movs	r0, r2
 800083a:	4d14      	ldr	r5, [pc, #80]	; (800088c <__aeabi_dadd+0x630>)
 800083c:	e610      	b.n	8000460 <__aeabi_dadd+0x204>
 800083e:	2280      	movs	r2, #128	; 0x80
 8000840:	2400      	movs	r4, #0
 8000842:	0312      	lsls	r2, r2, #12
 8000844:	e680      	b.n	8000548 <__aeabi_dadd+0x2ec>
 8000846:	001d      	movs	r5, r3
 8000848:	000f      	movs	r7, r1
 800084a:	3d20      	subs	r5, #32
 800084c:	40ef      	lsrs	r7, r5
 800084e:	46bc      	mov	ip, r7
 8000850:	2b20      	cmp	r3, #32
 8000852:	d003      	beq.n	800085c <__aeabi_dadd+0x600>
 8000854:	2540      	movs	r5, #64	; 0x40
 8000856:	1aeb      	subs	r3, r5, r3
 8000858:	4099      	lsls	r1, r3
 800085a:	4308      	orrs	r0, r1
 800085c:	0007      	movs	r7, r0
 800085e:	4663      	mov	r3, ip
 8000860:	1e78      	subs	r0, r7, #1
 8000862:	4187      	sbcs	r7, r0
 8000864:	431f      	orrs	r7, r3
 8000866:	e769      	b.n	800073c <__aeabi_dadd+0x4e0>
 8000868:	1887      	adds	r7, r0, r2
 800086a:	4297      	cmp	r7, r2
 800086c:	419b      	sbcs	r3, r3
 800086e:	4441      	add	r1, r8
 8000870:	425b      	negs	r3, r3
 8000872:	18c9      	adds	r1, r1, r3
 8000874:	0035      	movs	r5, r6
 8000876:	e5a3      	b.n	80003c0 <__aeabi_dadd+0x164>
 8000878:	003b      	movs	r3, r7
 800087a:	4333      	orrs	r3, r6
 800087c:	d0ce      	beq.n	800081c <__aeabi_dadd+0x5c0>
 800087e:	2207      	movs	r2, #7
 8000880:	0031      	movs	r1, r6
 8000882:	403a      	ands	r2, r7
 8000884:	e652      	b.n	800052c <__aeabi_dadd+0x2d0>
 8000886:	2300      	movs	r3, #0
 8000888:	001a      	movs	r2, r3
 800088a:	e5f4      	b.n	8000476 <__aeabi_dadd+0x21a>
 800088c:	000007ff 	.word	0x000007ff
 8000890:	ff7fffff 	.word	0xff7fffff

08000894 <__aeabi_ddiv>:
 8000894:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000896:	4657      	mov	r7, sl
 8000898:	46de      	mov	lr, fp
 800089a:	464e      	mov	r6, r9
 800089c:	4645      	mov	r5, r8
 800089e:	b5e0      	push	{r5, r6, r7, lr}
 80008a0:	4683      	mov	fp, r0
 80008a2:	0007      	movs	r7, r0
 80008a4:	030e      	lsls	r6, r1, #12
 80008a6:	0048      	lsls	r0, r1, #1
 80008a8:	b085      	sub	sp, #20
 80008aa:	4692      	mov	sl, r2
 80008ac:	001c      	movs	r4, r3
 80008ae:	0b36      	lsrs	r6, r6, #12
 80008b0:	0d40      	lsrs	r0, r0, #21
 80008b2:	0fcd      	lsrs	r5, r1, #31
 80008b4:	2800      	cmp	r0, #0
 80008b6:	d100      	bne.n	80008ba <__aeabi_ddiv+0x26>
 80008b8:	e09d      	b.n	80009f6 <__aeabi_ddiv+0x162>
 80008ba:	4b95      	ldr	r3, [pc, #596]	; (8000b10 <__aeabi_ddiv+0x27c>)
 80008bc:	4298      	cmp	r0, r3
 80008be:	d039      	beq.n	8000934 <__aeabi_ddiv+0xa0>
 80008c0:	2380      	movs	r3, #128	; 0x80
 80008c2:	00f6      	lsls	r6, r6, #3
 80008c4:	041b      	lsls	r3, r3, #16
 80008c6:	431e      	orrs	r6, r3
 80008c8:	4a92      	ldr	r2, [pc, #584]	; (8000b14 <__aeabi_ddiv+0x280>)
 80008ca:	0f7b      	lsrs	r3, r7, #29
 80008cc:	4333      	orrs	r3, r6
 80008ce:	4699      	mov	r9, r3
 80008d0:	4694      	mov	ip, r2
 80008d2:	0003      	movs	r3, r0
 80008d4:	4463      	add	r3, ip
 80008d6:	9300      	str	r3, [sp, #0]
 80008d8:	2300      	movs	r3, #0
 80008da:	2600      	movs	r6, #0
 80008dc:	00ff      	lsls	r7, r7, #3
 80008de:	9302      	str	r3, [sp, #8]
 80008e0:	0323      	lsls	r3, r4, #12
 80008e2:	0b1b      	lsrs	r3, r3, #12
 80008e4:	4698      	mov	r8, r3
 80008e6:	0063      	lsls	r3, r4, #1
 80008e8:	0fe4      	lsrs	r4, r4, #31
 80008ea:	4652      	mov	r2, sl
 80008ec:	0d5b      	lsrs	r3, r3, #21
 80008ee:	9401      	str	r4, [sp, #4]
 80008f0:	d100      	bne.n	80008f4 <__aeabi_ddiv+0x60>
 80008f2:	e0b3      	b.n	8000a5c <__aeabi_ddiv+0x1c8>
 80008f4:	4986      	ldr	r1, [pc, #536]	; (8000b10 <__aeabi_ddiv+0x27c>)
 80008f6:	428b      	cmp	r3, r1
 80008f8:	d100      	bne.n	80008fc <__aeabi_ddiv+0x68>
 80008fa:	e09e      	b.n	8000a3a <__aeabi_ddiv+0x1a6>
 80008fc:	4642      	mov	r2, r8
 80008fe:	00d1      	lsls	r1, r2, #3
 8000900:	2280      	movs	r2, #128	; 0x80
 8000902:	0412      	lsls	r2, r2, #16
 8000904:	430a      	orrs	r2, r1
 8000906:	4651      	mov	r1, sl
 8000908:	0f49      	lsrs	r1, r1, #29
 800090a:	4311      	orrs	r1, r2
 800090c:	468b      	mov	fp, r1
 800090e:	4981      	ldr	r1, [pc, #516]	; (8000b14 <__aeabi_ddiv+0x280>)
 8000910:	4652      	mov	r2, sl
 8000912:	468c      	mov	ip, r1
 8000914:	9900      	ldr	r1, [sp, #0]
 8000916:	4463      	add	r3, ip
 8000918:	1acb      	subs	r3, r1, r3
 800091a:	2100      	movs	r1, #0
 800091c:	00d2      	lsls	r2, r2, #3
 800091e:	9300      	str	r3, [sp, #0]
 8000920:	002b      	movs	r3, r5
 8000922:	4063      	eors	r3, r4
 8000924:	469a      	mov	sl, r3
 8000926:	2e0f      	cmp	r6, #15
 8000928:	d900      	bls.n	800092c <__aeabi_ddiv+0x98>
 800092a:	e105      	b.n	8000b38 <__aeabi_ddiv+0x2a4>
 800092c:	4b7a      	ldr	r3, [pc, #488]	; (8000b18 <__aeabi_ddiv+0x284>)
 800092e:	00b6      	lsls	r6, r6, #2
 8000930:	599b      	ldr	r3, [r3, r6]
 8000932:	469f      	mov	pc, r3
 8000934:	465b      	mov	r3, fp
 8000936:	4333      	orrs	r3, r6
 8000938:	4699      	mov	r9, r3
 800093a:	d000      	beq.n	800093e <__aeabi_ddiv+0xaa>
 800093c:	e0b8      	b.n	8000ab0 <__aeabi_ddiv+0x21c>
 800093e:	2302      	movs	r3, #2
 8000940:	2608      	movs	r6, #8
 8000942:	2700      	movs	r7, #0
 8000944:	9000      	str	r0, [sp, #0]
 8000946:	9302      	str	r3, [sp, #8]
 8000948:	e7ca      	b.n	80008e0 <__aeabi_ddiv+0x4c>
 800094a:	46cb      	mov	fp, r9
 800094c:	003a      	movs	r2, r7
 800094e:	9902      	ldr	r1, [sp, #8]
 8000950:	9501      	str	r5, [sp, #4]
 8000952:	9b01      	ldr	r3, [sp, #4]
 8000954:	469a      	mov	sl, r3
 8000956:	2902      	cmp	r1, #2
 8000958:	d027      	beq.n	80009aa <__aeabi_ddiv+0x116>
 800095a:	2903      	cmp	r1, #3
 800095c:	d100      	bne.n	8000960 <__aeabi_ddiv+0xcc>
 800095e:	e280      	b.n	8000e62 <__aeabi_ddiv+0x5ce>
 8000960:	2901      	cmp	r1, #1
 8000962:	d044      	beq.n	80009ee <__aeabi_ddiv+0x15a>
 8000964:	496d      	ldr	r1, [pc, #436]	; (8000b1c <__aeabi_ddiv+0x288>)
 8000966:	9b00      	ldr	r3, [sp, #0]
 8000968:	468c      	mov	ip, r1
 800096a:	4463      	add	r3, ip
 800096c:	001c      	movs	r4, r3
 800096e:	2c00      	cmp	r4, #0
 8000970:	dd38      	ble.n	80009e4 <__aeabi_ddiv+0x150>
 8000972:	0753      	lsls	r3, r2, #29
 8000974:	d000      	beq.n	8000978 <__aeabi_ddiv+0xe4>
 8000976:	e213      	b.n	8000da0 <__aeabi_ddiv+0x50c>
 8000978:	08d2      	lsrs	r2, r2, #3
 800097a:	465b      	mov	r3, fp
 800097c:	01db      	lsls	r3, r3, #7
 800097e:	d509      	bpl.n	8000994 <__aeabi_ddiv+0x100>
 8000980:	4659      	mov	r1, fp
 8000982:	4b67      	ldr	r3, [pc, #412]	; (8000b20 <__aeabi_ddiv+0x28c>)
 8000984:	4019      	ands	r1, r3
 8000986:	468b      	mov	fp, r1
 8000988:	2180      	movs	r1, #128	; 0x80
 800098a:	00c9      	lsls	r1, r1, #3
 800098c:	468c      	mov	ip, r1
 800098e:	9b00      	ldr	r3, [sp, #0]
 8000990:	4463      	add	r3, ip
 8000992:	001c      	movs	r4, r3
 8000994:	4b63      	ldr	r3, [pc, #396]	; (8000b24 <__aeabi_ddiv+0x290>)
 8000996:	429c      	cmp	r4, r3
 8000998:	dc07      	bgt.n	80009aa <__aeabi_ddiv+0x116>
 800099a:	465b      	mov	r3, fp
 800099c:	0564      	lsls	r4, r4, #21
 800099e:	075f      	lsls	r7, r3, #29
 80009a0:	025b      	lsls	r3, r3, #9
 80009a2:	4317      	orrs	r7, r2
 80009a4:	0b1b      	lsrs	r3, r3, #12
 80009a6:	0d62      	lsrs	r2, r4, #21
 80009a8:	e002      	b.n	80009b0 <__aeabi_ddiv+0x11c>
 80009aa:	2300      	movs	r3, #0
 80009ac:	2700      	movs	r7, #0
 80009ae:	4a58      	ldr	r2, [pc, #352]	; (8000b10 <__aeabi_ddiv+0x27c>)
 80009b0:	2100      	movs	r1, #0
 80009b2:	031b      	lsls	r3, r3, #12
 80009b4:	0b1c      	lsrs	r4, r3, #12
 80009b6:	0d0b      	lsrs	r3, r1, #20
 80009b8:	051b      	lsls	r3, r3, #20
 80009ba:	4323      	orrs	r3, r4
 80009bc:	0514      	lsls	r4, r2, #20
 80009be:	4a5a      	ldr	r2, [pc, #360]	; (8000b28 <__aeabi_ddiv+0x294>)
 80009c0:	0038      	movs	r0, r7
 80009c2:	4013      	ands	r3, r2
 80009c4:	431c      	orrs	r4, r3
 80009c6:	4653      	mov	r3, sl
 80009c8:	0064      	lsls	r4, r4, #1
 80009ca:	07db      	lsls	r3, r3, #31
 80009cc:	0864      	lsrs	r4, r4, #1
 80009ce:	431c      	orrs	r4, r3
 80009d0:	0021      	movs	r1, r4
 80009d2:	b005      	add	sp, #20
 80009d4:	bc3c      	pop	{r2, r3, r4, r5}
 80009d6:	4690      	mov	r8, r2
 80009d8:	4699      	mov	r9, r3
 80009da:	46a2      	mov	sl, r4
 80009dc:	46ab      	mov	fp, r5
 80009de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80009e0:	2201      	movs	r2, #1
 80009e2:	4252      	negs	r2, r2
 80009e4:	2301      	movs	r3, #1
 80009e6:	1b1b      	subs	r3, r3, r4
 80009e8:	2b38      	cmp	r3, #56	; 0x38
 80009ea:	dc00      	bgt.n	80009ee <__aeabi_ddiv+0x15a>
 80009ec:	e1ad      	b.n	8000d4a <__aeabi_ddiv+0x4b6>
 80009ee:	2200      	movs	r2, #0
 80009f0:	2300      	movs	r3, #0
 80009f2:	2700      	movs	r7, #0
 80009f4:	e7dc      	b.n	80009b0 <__aeabi_ddiv+0x11c>
 80009f6:	465b      	mov	r3, fp
 80009f8:	4333      	orrs	r3, r6
 80009fa:	4699      	mov	r9, r3
 80009fc:	d05e      	beq.n	8000abc <__aeabi_ddiv+0x228>
 80009fe:	2e00      	cmp	r6, #0
 8000a00:	d100      	bne.n	8000a04 <__aeabi_ddiv+0x170>
 8000a02:	e18a      	b.n	8000d1a <__aeabi_ddiv+0x486>
 8000a04:	0030      	movs	r0, r6
 8000a06:	f001 f8e1 	bl	8001bcc <__clzsi2>
 8000a0a:	0003      	movs	r3, r0
 8000a0c:	3b0b      	subs	r3, #11
 8000a0e:	2b1c      	cmp	r3, #28
 8000a10:	dd00      	ble.n	8000a14 <__aeabi_ddiv+0x180>
 8000a12:	e17b      	b.n	8000d0c <__aeabi_ddiv+0x478>
 8000a14:	221d      	movs	r2, #29
 8000a16:	1ad3      	subs	r3, r2, r3
 8000a18:	465a      	mov	r2, fp
 8000a1a:	0001      	movs	r1, r0
 8000a1c:	40da      	lsrs	r2, r3
 8000a1e:	3908      	subs	r1, #8
 8000a20:	408e      	lsls	r6, r1
 8000a22:	0013      	movs	r3, r2
 8000a24:	465f      	mov	r7, fp
 8000a26:	4333      	orrs	r3, r6
 8000a28:	4699      	mov	r9, r3
 8000a2a:	408f      	lsls	r7, r1
 8000a2c:	4b3f      	ldr	r3, [pc, #252]	; (8000b2c <__aeabi_ddiv+0x298>)
 8000a2e:	2600      	movs	r6, #0
 8000a30:	1a1b      	subs	r3, r3, r0
 8000a32:	9300      	str	r3, [sp, #0]
 8000a34:	2300      	movs	r3, #0
 8000a36:	9302      	str	r3, [sp, #8]
 8000a38:	e752      	b.n	80008e0 <__aeabi_ddiv+0x4c>
 8000a3a:	4641      	mov	r1, r8
 8000a3c:	4653      	mov	r3, sl
 8000a3e:	430b      	orrs	r3, r1
 8000a40:	493b      	ldr	r1, [pc, #236]	; (8000b30 <__aeabi_ddiv+0x29c>)
 8000a42:	469b      	mov	fp, r3
 8000a44:	468c      	mov	ip, r1
 8000a46:	9b00      	ldr	r3, [sp, #0]
 8000a48:	4463      	add	r3, ip
 8000a4a:	9300      	str	r3, [sp, #0]
 8000a4c:	465b      	mov	r3, fp
 8000a4e:	2b00      	cmp	r3, #0
 8000a50:	d13b      	bne.n	8000aca <__aeabi_ddiv+0x236>
 8000a52:	2302      	movs	r3, #2
 8000a54:	2200      	movs	r2, #0
 8000a56:	431e      	orrs	r6, r3
 8000a58:	2102      	movs	r1, #2
 8000a5a:	e761      	b.n	8000920 <__aeabi_ddiv+0x8c>
 8000a5c:	4643      	mov	r3, r8
 8000a5e:	4313      	orrs	r3, r2
 8000a60:	469b      	mov	fp, r3
 8000a62:	d037      	beq.n	8000ad4 <__aeabi_ddiv+0x240>
 8000a64:	4643      	mov	r3, r8
 8000a66:	2b00      	cmp	r3, #0
 8000a68:	d100      	bne.n	8000a6c <__aeabi_ddiv+0x1d8>
 8000a6a:	e162      	b.n	8000d32 <__aeabi_ddiv+0x49e>
 8000a6c:	4640      	mov	r0, r8
 8000a6e:	f001 f8ad 	bl	8001bcc <__clzsi2>
 8000a72:	0003      	movs	r3, r0
 8000a74:	3b0b      	subs	r3, #11
 8000a76:	2b1c      	cmp	r3, #28
 8000a78:	dd00      	ble.n	8000a7c <__aeabi_ddiv+0x1e8>
 8000a7a:	e153      	b.n	8000d24 <__aeabi_ddiv+0x490>
 8000a7c:	0002      	movs	r2, r0
 8000a7e:	4641      	mov	r1, r8
 8000a80:	3a08      	subs	r2, #8
 8000a82:	4091      	lsls	r1, r2
 8000a84:	4688      	mov	r8, r1
 8000a86:	211d      	movs	r1, #29
 8000a88:	1acb      	subs	r3, r1, r3
 8000a8a:	4651      	mov	r1, sl
 8000a8c:	40d9      	lsrs	r1, r3
 8000a8e:	000b      	movs	r3, r1
 8000a90:	4641      	mov	r1, r8
 8000a92:	430b      	orrs	r3, r1
 8000a94:	469b      	mov	fp, r3
 8000a96:	4653      	mov	r3, sl
 8000a98:	4093      	lsls	r3, r2
 8000a9a:	001a      	movs	r2, r3
 8000a9c:	9b00      	ldr	r3, [sp, #0]
 8000a9e:	4925      	ldr	r1, [pc, #148]	; (8000b34 <__aeabi_ddiv+0x2a0>)
 8000aa0:	469c      	mov	ip, r3
 8000aa2:	4460      	add	r0, ip
 8000aa4:	0003      	movs	r3, r0
 8000aa6:	468c      	mov	ip, r1
 8000aa8:	4463      	add	r3, ip
 8000aaa:	9300      	str	r3, [sp, #0]
 8000aac:	2100      	movs	r1, #0
 8000aae:	e737      	b.n	8000920 <__aeabi_ddiv+0x8c>
 8000ab0:	2303      	movs	r3, #3
 8000ab2:	46b1      	mov	r9, r6
 8000ab4:	9000      	str	r0, [sp, #0]
 8000ab6:	260c      	movs	r6, #12
 8000ab8:	9302      	str	r3, [sp, #8]
 8000aba:	e711      	b.n	80008e0 <__aeabi_ddiv+0x4c>
 8000abc:	2300      	movs	r3, #0
 8000abe:	9300      	str	r3, [sp, #0]
 8000ac0:	3301      	adds	r3, #1
 8000ac2:	2604      	movs	r6, #4
 8000ac4:	2700      	movs	r7, #0
 8000ac6:	9302      	str	r3, [sp, #8]
 8000ac8:	e70a      	b.n	80008e0 <__aeabi_ddiv+0x4c>
 8000aca:	2303      	movs	r3, #3
 8000acc:	46c3      	mov	fp, r8
 8000ace:	431e      	orrs	r6, r3
 8000ad0:	2103      	movs	r1, #3
 8000ad2:	e725      	b.n	8000920 <__aeabi_ddiv+0x8c>
 8000ad4:	3301      	adds	r3, #1
 8000ad6:	431e      	orrs	r6, r3
 8000ad8:	2200      	movs	r2, #0
 8000ada:	2101      	movs	r1, #1
 8000adc:	e720      	b.n	8000920 <__aeabi_ddiv+0x8c>
 8000ade:	2300      	movs	r3, #0
 8000ae0:	469a      	mov	sl, r3
 8000ae2:	2380      	movs	r3, #128	; 0x80
 8000ae4:	2700      	movs	r7, #0
 8000ae6:	031b      	lsls	r3, r3, #12
 8000ae8:	4a09      	ldr	r2, [pc, #36]	; (8000b10 <__aeabi_ddiv+0x27c>)
 8000aea:	e761      	b.n	80009b0 <__aeabi_ddiv+0x11c>
 8000aec:	2380      	movs	r3, #128	; 0x80
 8000aee:	4649      	mov	r1, r9
 8000af0:	031b      	lsls	r3, r3, #12
 8000af2:	4219      	tst	r1, r3
 8000af4:	d100      	bne.n	8000af8 <__aeabi_ddiv+0x264>
 8000af6:	e0e2      	b.n	8000cbe <__aeabi_ddiv+0x42a>
 8000af8:	4659      	mov	r1, fp
 8000afa:	4219      	tst	r1, r3
 8000afc:	d000      	beq.n	8000b00 <__aeabi_ddiv+0x26c>
 8000afe:	e0de      	b.n	8000cbe <__aeabi_ddiv+0x42a>
 8000b00:	430b      	orrs	r3, r1
 8000b02:	031b      	lsls	r3, r3, #12
 8000b04:	0017      	movs	r7, r2
 8000b06:	0b1b      	lsrs	r3, r3, #12
 8000b08:	46a2      	mov	sl, r4
 8000b0a:	4a01      	ldr	r2, [pc, #4]	; (8000b10 <__aeabi_ddiv+0x27c>)
 8000b0c:	e750      	b.n	80009b0 <__aeabi_ddiv+0x11c>
 8000b0e:	46c0      	nop			; (mov r8, r8)
 8000b10:	000007ff 	.word	0x000007ff
 8000b14:	fffffc01 	.word	0xfffffc01
 8000b18:	08003298 	.word	0x08003298
 8000b1c:	000003ff 	.word	0x000003ff
 8000b20:	feffffff 	.word	0xfeffffff
 8000b24:	000007fe 	.word	0x000007fe
 8000b28:	800fffff 	.word	0x800fffff
 8000b2c:	fffffc0d 	.word	0xfffffc0d
 8000b30:	fffff801 	.word	0xfffff801
 8000b34:	000003f3 	.word	0x000003f3
 8000b38:	45d9      	cmp	r9, fp
 8000b3a:	d900      	bls.n	8000b3e <__aeabi_ddiv+0x2aa>
 8000b3c:	e0cb      	b.n	8000cd6 <__aeabi_ddiv+0x442>
 8000b3e:	d100      	bne.n	8000b42 <__aeabi_ddiv+0x2ae>
 8000b40:	e0c6      	b.n	8000cd0 <__aeabi_ddiv+0x43c>
 8000b42:	003c      	movs	r4, r7
 8000b44:	4648      	mov	r0, r9
 8000b46:	2700      	movs	r7, #0
 8000b48:	9b00      	ldr	r3, [sp, #0]
 8000b4a:	3b01      	subs	r3, #1
 8000b4c:	9300      	str	r3, [sp, #0]
 8000b4e:	465b      	mov	r3, fp
 8000b50:	0e16      	lsrs	r6, r2, #24
 8000b52:	021b      	lsls	r3, r3, #8
 8000b54:	431e      	orrs	r6, r3
 8000b56:	0213      	lsls	r3, r2, #8
 8000b58:	4698      	mov	r8, r3
 8000b5a:	0433      	lsls	r3, r6, #16
 8000b5c:	0c1b      	lsrs	r3, r3, #16
 8000b5e:	4699      	mov	r9, r3
 8000b60:	0c31      	lsrs	r1, r6, #16
 8000b62:	9101      	str	r1, [sp, #4]
 8000b64:	f7ff fb56 	bl	8000214 <__aeabi_uidivmod>
 8000b68:	464a      	mov	r2, r9
 8000b6a:	4342      	muls	r2, r0
 8000b6c:	040b      	lsls	r3, r1, #16
 8000b6e:	0c21      	lsrs	r1, r4, #16
 8000b70:	0005      	movs	r5, r0
 8000b72:	4319      	orrs	r1, r3
 8000b74:	428a      	cmp	r2, r1
 8000b76:	d907      	bls.n	8000b88 <__aeabi_ddiv+0x2f4>
 8000b78:	1989      	adds	r1, r1, r6
 8000b7a:	3d01      	subs	r5, #1
 8000b7c:	428e      	cmp	r6, r1
 8000b7e:	d803      	bhi.n	8000b88 <__aeabi_ddiv+0x2f4>
 8000b80:	428a      	cmp	r2, r1
 8000b82:	d901      	bls.n	8000b88 <__aeabi_ddiv+0x2f4>
 8000b84:	1e85      	subs	r5, r0, #2
 8000b86:	1989      	adds	r1, r1, r6
 8000b88:	1a88      	subs	r0, r1, r2
 8000b8a:	9901      	ldr	r1, [sp, #4]
 8000b8c:	f7ff fb42 	bl	8000214 <__aeabi_uidivmod>
 8000b90:	0409      	lsls	r1, r1, #16
 8000b92:	468c      	mov	ip, r1
 8000b94:	464a      	mov	r2, r9
 8000b96:	0421      	lsls	r1, r4, #16
 8000b98:	4664      	mov	r4, ip
 8000b9a:	4342      	muls	r2, r0
 8000b9c:	0c09      	lsrs	r1, r1, #16
 8000b9e:	0003      	movs	r3, r0
 8000ba0:	4321      	orrs	r1, r4
 8000ba2:	428a      	cmp	r2, r1
 8000ba4:	d904      	bls.n	8000bb0 <__aeabi_ddiv+0x31c>
 8000ba6:	1989      	adds	r1, r1, r6
 8000ba8:	3b01      	subs	r3, #1
 8000baa:	428e      	cmp	r6, r1
 8000bac:	d800      	bhi.n	8000bb0 <__aeabi_ddiv+0x31c>
 8000bae:	e0f1      	b.n	8000d94 <__aeabi_ddiv+0x500>
 8000bb0:	042d      	lsls	r5, r5, #16
 8000bb2:	431d      	orrs	r5, r3
 8000bb4:	46ab      	mov	fp, r5
 8000bb6:	4643      	mov	r3, r8
 8000bb8:	1a89      	subs	r1, r1, r2
 8000bba:	4642      	mov	r2, r8
 8000bbc:	0c28      	lsrs	r0, r5, #16
 8000bbe:	0412      	lsls	r2, r2, #16
 8000bc0:	0c1d      	lsrs	r5, r3, #16
 8000bc2:	465b      	mov	r3, fp
 8000bc4:	0c14      	lsrs	r4, r2, #16
 8000bc6:	0022      	movs	r2, r4
 8000bc8:	041b      	lsls	r3, r3, #16
 8000bca:	0c1b      	lsrs	r3, r3, #16
 8000bcc:	435a      	muls	r2, r3
 8000bce:	9403      	str	r4, [sp, #12]
 8000bd0:	436b      	muls	r3, r5
 8000bd2:	4344      	muls	r4, r0
 8000bd4:	9502      	str	r5, [sp, #8]
 8000bd6:	4368      	muls	r0, r5
 8000bd8:	191b      	adds	r3, r3, r4
 8000bda:	0c15      	lsrs	r5, r2, #16
 8000bdc:	18eb      	adds	r3, r5, r3
 8000bde:	429c      	cmp	r4, r3
 8000be0:	d903      	bls.n	8000bea <__aeabi_ddiv+0x356>
 8000be2:	2480      	movs	r4, #128	; 0x80
 8000be4:	0264      	lsls	r4, r4, #9
 8000be6:	46a4      	mov	ip, r4
 8000be8:	4460      	add	r0, ip
 8000bea:	0c1c      	lsrs	r4, r3, #16
 8000bec:	0415      	lsls	r5, r2, #16
 8000bee:	041b      	lsls	r3, r3, #16
 8000bf0:	0c2d      	lsrs	r5, r5, #16
 8000bf2:	1820      	adds	r0, r4, r0
 8000bf4:	195d      	adds	r5, r3, r5
 8000bf6:	4281      	cmp	r1, r0
 8000bf8:	d377      	bcc.n	8000cea <__aeabi_ddiv+0x456>
 8000bfa:	d073      	beq.n	8000ce4 <__aeabi_ddiv+0x450>
 8000bfc:	1a0c      	subs	r4, r1, r0
 8000bfe:	4aa2      	ldr	r2, [pc, #648]	; (8000e88 <__aeabi_ddiv+0x5f4>)
 8000c00:	1b7d      	subs	r5, r7, r5
 8000c02:	42af      	cmp	r7, r5
 8000c04:	41bf      	sbcs	r7, r7
 8000c06:	4694      	mov	ip, r2
 8000c08:	9b00      	ldr	r3, [sp, #0]
 8000c0a:	427f      	negs	r7, r7
 8000c0c:	4463      	add	r3, ip
 8000c0e:	1be0      	subs	r0, r4, r7
 8000c10:	001c      	movs	r4, r3
 8000c12:	4286      	cmp	r6, r0
 8000c14:	d100      	bne.n	8000c18 <__aeabi_ddiv+0x384>
 8000c16:	e0db      	b.n	8000dd0 <__aeabi_ddiv+0x53c>
 8000c18:	9901      	ldr	r1, [sp, #4]
 8000c1a:	f7ff fafb 	bl	8000214 <__aeabi_uidivmod>
 8000c1e:	464a      	mov	r2, r9
 8000c20:	4342      	muls	r2, r0
 8000c22:	040b      	lsls	r3, r1, #16
 8000c24:	0c29      	lsrs	r1, r5, #16
 8000c26:	0007      	movs	r7, r0
 8000c28:	4319      	orrs	r1, r3
 8000c2a:	428a      	cmp	r2, r1
 8000c2c:	d907      	bls.n	8000c3e <__aeabi_ddiv+0x3aa>
 8000c2e:	1989      	adds	r1, r1, r6
 8000c30:	3f01      	subs	r7, #1
 8000c32:	428e      	cmp	r6, r1
 8000c34:	d803      	bhi.n	8000c3e <__aeabi_ddiv+0x3aa>
 8000c36:	428a      	cmp	r2, r1
 8000c38:	d901      	bls.n	8000c3e <__aeabi_ddiv+0x3aa>
 8000c3a:	1e87      	subs	r7, r0, #2
 8000c3c:	1989      	adds	r1, r1, r6
 8000c3e:	1a88      	subs	r0, r1, r2
 8000c40:	9901      	ldr	r1, [sp, #4]
 8000c42:	f7ff fae7 	bl	8000214 <__aeabi_uidivmod>
 8000c46:	0409      	lsls	r1, r1, #16
 8000c48:	464a      	mov	r2, r9
 8000c4a:	4689      	mov	r9, r1
 8000c4c:	0429      	lsls	r1, r5, #16
 8000c4e:	464d      	mov	r5, r9
 8000c50:	4342      	muls	r2, r0
 8000c52:	0c09      	lsrs	r1, r1, #16
 8000c54:	0003      	movs	r3, r0
 8000c56:	4329      	orrs	r1, r5
 8000c58:	428a      	cmp	r2, r1
 8000c5a:	d907      	bls.n	8000c6c <__aeabi_ddiv+0x3d8>
 8000c5c:	1989      	adds	r1, r1, r6
 8000c5e:	3b01      	subs	r3, #1
 8000c60:	428e      	cmp	r6, r1
 8000c62:	d803      	bhi.n	8000c6c <__aeabi_ddiv+0x3d8>
 8000c64:	428a      	cmp	r2, r1
 8000c66:	d901      	bls.n	8000c6c <__aeabi_ddiv+0x3d8>
 8000c68:	1e83      	subs	r3, r0, #2
 8000c6a:	1989      	adds	r1, r1, r6
 8000c6c:	043f      	lsls	r7, r7, #16
 8000c6e:	1a89      	subs	r1, r1, r2
 8000c70:	003a      	movs	r2, r7
 8000c72:	9f03      	ldr	r7, [sp, #12]
 8000c74:	431a      	orrs	r2, r3
 8000c76:	0038      	movs	r0, r7
 8000c78:	0413      	lsls	r3, r2, #16
 8000c7a:	0c1b      	lsrs	r3, r3, #16
 8000c7c:	4358      	muls	r0, r3
 8000c7e:	4681      	mov	r9, r0
 8000c80:	9802      	ldr	r0, [sp, #8]
 8000c82:	0c15      	lsrs	r5, r2, #16
 8000c84:	436f      	muls	r7, r5
 8000c86:	4343      	muls	r3, r0
 8000c88:	4345      	muls	r5, r0
 8000c8a:	4648      	mov	r0, r9
 8000c8c:	0c00      	lsrs	r0, r0, #16
 8000c8e:	4684      	mov	ip, r0
 8000c90:	19db      	adds	r3, r3, r7
 8000c92:	4463      	add	r3, ip
 8000c94:	429f      	cmp	r7, r3
 8000c96:	d903      	bls.n	8000ca0 <__aeabi_ddiv+0x40c>
 8000c98:	2080      	movs	r0, #128	; 0x80
 8000c9a:	0240      	lsls	r0, r0, #9
 8000c9c:	4684      	mov	ip, r0
 8000c9e:	4465      	add	r5, ip
 8000ca0:	4648      	mov	r0, r9
 8000ca2:	0c1f      	lsrs	r7, r3, #16
 8000ca4:	0400      	lsls	r0, r0, #16
 8000ca6:	041b      	lsls	r3, r3, #16
 8000ca8:	0c00      	lsrs	r0, r0, #16
 8000caa:	197d      	adds	r5, r7, r5
 8000cac:	1818      	adds	r0, r3, r0
 8000cae:	42a9      	cmp	r1, r5
 8000cb0:	d200      	bcs.n	8000cb4 <__aeabi_ddiv+0x420>
 8000cb2:	e084      	b.n	8000dbe <__aeabi_ddiv+0x52a>
 8000cb4:	d100      	bne.n	8000cb8 <__aeabi_ddiv+0x424>
 8000cb6:	e07f      	b.n	8000db8 <__aeabi_ddiv+0x524>
 8000cb8:	2301      	movs	r3, #1
 8000cba:	431a      	orrs	r2, r3
 8000cbc:	e657      	b.n	800096e <__aeabi_ddiv+0xda>
 8000cbe:	2380      	movs	r3, #128	; 0x80
 8000cc0:	464a      	mov	r2, r9
 8000cc2:	031b      	lsls	r3, r3, #12
 8000cc4:	4313      	orrs	r3, r2
 8000cc6:	031b      	lsls	r3, r3, #12
 8000cc8:	0b1b      	lsrs	r3, r3, #12
 8000cca:	46aa      	mov	sl, r5
 8000ccc:	4a6f      	ldr	r2, [pc, #444]	; (8000e8c <__aeabi_ddiv+0x5f8>)
 8000cce:	e66f      	b.n	80009b0 <__aeabi_ddiv+0x11c>
 8000cd0:	42ba      	cmp	r2, r7
 8000cd2:	d900      	bls.n	8000cd6 <__aeabi_ddiv+0x442>
 8000cd4:	e735      	b.n	8000b42 <__aeabi_ddiv+0x2ae>
 8000cd6:	464b      	mov	r3, r9
 8000cd8:	07dc      	lsls	r4, r3, #31
 8000cda:	0858      	lsrs	r0, r3, #1
 8000cdc:	087b      	lsrs	r3, r7, #1
 8000cde:	431c      	orrs	r4, r3
 8000ce0:	07ff      	lsls	r7, r7, #31
 8000ce2:	e734      	b.n	8000b4e <__aeabi_ddiv+0x2ba>
 8000ce4:	2400      	movs	r4, #0
 8000ce6:	42af      	cmp	r7, r5
 8000ce8:	d289      	bcs.n	8000bfe <__aeabi_ddiv+0x36a>
 8000cea:	4447      	add	r7, r8
 8000cec:	4547      	cmp	r7, r8
 8000cee:	41a4      	sbcs	r4, r4
 8000cf0:	465b      	mov	r3, fp
 8000cf2:	4264      	negs	r4, r4
 8000cf4:	19a4      	adds	r4, r4, r6
 8000cf6:	1864      	adds	r4, r4, r1
 8000cf8:	3b01      	subs	r3, #1
 8000cfa:	42a6      	cmp	r6, r4
 8000cfc:	d21e      	bcs.n	8000d3c <__aeabi_ddiv+0x4a8>
 8000cfe:	42a0      	cmp	r0, r4
 8000d00:	d86d      	bhi.n	8000dde <__aeabi_ddiv+0x54a>
 8000d02:	d100      	bne.n	8000d06 <__aeabi_ddiv+0x472>
 8000d04:	e0b6      	b.n	8000e74 <__aeabi_ddiv+0x5e0>
 8000d06:	1a24      	subs	r4, r4, r0
 8000d08:	469b      	mov	fp, r3
 8000d0a:	e778      	b.n	8000bfe <__aeabi_ddiv+0x36a>
 8000d0c:	0003      	movs	r3, r0
 8000d0e:	465a      	mov	r2, fp
 8000d10:	3b28      	subs	r3, #40	; 0x28
 8000d12:	409a      	lsls	r2, r3
 8000d14:	2700      	movs	r7, #0
 8000d16:	4691      	mov	r9, r2
 8000d18:	e688      	b.n	8000a2c <__aeabi_ddiv+0x198>
 8000d1a:	4658      	mov	r0, fp
 8000d1c:	f000 ff56 	bl	8001bcc <__clzsi2>
 8000d20:	3020      	adds	r0, #32
 8000d22:	e672      	b.n	8000a0a <__aeabi_ddiv+0x176>
 8000d24:	0003      	movs	r3, r0
 8000d26:	4652      	mov	r2, sl
 8000d28:	3b28      	subs	r3, #40	; 0x28
 8000d2a:	409a      	lsls	r2, r3
 8000d2c:	4693      	mov	fp, r2
 8000d2e:	2200      	movs	r2, #0
 8000d30:	e6b4      	b.n	8000a9c <__aeabi_ddiv+0x208>
 8000d32:	4650      	mov	r0, sl
 8000d34:	f000 ff4a 	bl	8001bcc <__clzsi2>
 8000d38:	3020      	adds	r0, #32
 8000d3a:	e69a      	b.n	8000a72 <__aeabi_ddiv+0x1de>
 8000d3c:	42a6      	cmp	r6, r4
 8000d3e:	d1e2      	bne.n	8000d06 <__aeabi_ddiv+0x472>
 8000d40:	45b8      	cmp	r8, r7
 8000d42:	d9dc      	bls.n	8000cfe <__aeabi_ddiv+0x46a>
 8000d44:	1a34      	subs	r4, r6, r0
 8000d46:	469b      	mov	fp, r3
 8000d48:	e759      	b.n	8000bfe <__aeabi_ddiv+0x36a>
 8000d4a:	2b1f      	cmp	r3, #31
 8000d4c:	dc65      	bgt.n	8000e1a <__aeabi_ddiv+0x586>
 8000d4e:	4c50      	ldr	r4, [pc, #320]	; (8000e90 <__aeabi_ddiv+0x5fc>)
 8000d50:	9900      	ldr	r1, [sp, #0]
 8000d52:	46a4      	mov	ip, r4
 8000d54:	465c      	mov	r4, fp
 8000d56:	4461      	add	r1, ip
 8000d58:	0008      	movs	r0, r1
 8000d5a:	408c      	lsls	r4, r1
 8000d5c:	0011      	movs	r1, r2
 8000d5e:	4082      	lsls	r2, r0
 8000d60:	40d9      	lsrs	r1, r3
 8000d62:	1e50      	subs	r0, r2, #1
 8000d64:	4182      	sbcs	r2, r0
 8000d66:	430c      	orrs	r4, r1
 8000d68:	4314      	orrs	r4, r2
 8000d6a:	465a      	mov	r2, fp
 8000d6c:	40da      	lsrs	r2, r3
 8000d6e:	0013      	movs	r3, r2
 8000d70:	0762      	lsls	r2, r4, #29
 8000d72:	d009      	beq.n	8000d88 <__aeabi_ddiv+0x4f4>
 8000d74:	220f      	movs	r2, #15
 8000d76:	4022      	ands	r2, r4
 8000d78:	2a04      	cmp	r2, #4
 8000d7a:	d005      	beq.n	8000d88 <__aeabi_ddiv+0x4f4>
 8000d7c:	0022      	movs	r2, r4
 8000d7e:	1d14      	adds	r4, r2, #4
 8000d80:	4294      	cmp	r4, r2
 8000d82:	4189      	sbcs	r1, r1
 8000d84:	4249      	negs	r1, r1
 8000d86:	185b      	adds	r3, r3, r1
 8000d88:	021a      	lsls	r2, r3, #8
 8000d8a:	d562      	bpl.n	8000e52 <__aeabi_ddiv+0x5be>
 8000d8c:	2201      	movs	r2, #1
 8000d8e:	2300      	movs	r3, #0
 8000d90:	2700      	movs	r7, #0
 8000d92:	e60d      	b.n	80009b0 <__aeabi_ddiv+0x11c>
 8000d94:	428a      	cmp	r2, r1
 8000d96:	d800      	bhi.n	8000d9a <__aeabi_ddiv+0x506>
 8000d98:	e70a      	b.n	8000bb0 <__aeabi_ddiv+0x31c>
 8000d9a:	1e83      	subs	r3, r0, #2
 8000d9c:	1989      	adds	r1, r1, r6
 8000d9e:	e707      	b.n	8000bb0 <__aeabi_ddiv+0x31c>
 8000da0:	230f      	movs	r3, #15
 8000da2:	4013      	ands	r3, r2
 8000da4:	2b04      	cmp	r3, #4
 8000da6:	d100      	bne.n	8000daa <__aeabi_ddiv+0x516>
 8000da8:	e5e6      	b.n	8000978 <__aeabi_ddiv+0xe4>
 8000daa:	1d17      	adds	r7, r2, #4
 8000dac:	4297      	cmp	r7, r2
 8000dae:	4192      	sbcs	r2, r2
 8000db0:	4253      	negs	r3, r2
 8000db2:	449b      	add	fp, r3
 8000db4:	08fa      	lsrs	r2, r7, #3
 8000db6:	e5e0      	b.n	800097a <__aeabi_ddiv+0xe6>
 8000db8:	2800      	cmp	r0, #0
 8000dba:	d100      	bne.n	8000dbe <__aeabi_ddiv+0x52a>
 8000dbc:	e5d7      	b.n	800096e <__aeabi_ddiv+0xda>
 8000dbe:	1871      	adds	r1, r6, r1
 8000dc0:	1e53      	subs	r3, r2, #1
 8000dc2:	42b1      	cmp	r1, r6
 8000dc4:	d327      	bcc.n	8000e16 <__aeabi_ddiv+0x582>
 8000dc6:	42a9      	cmp	r1, r5
 8000dc8:	d315      	bcc.n	8000df6 <__aeabi_ddiv+0x562>
 8000dca:	d058      	beq.n	8000e7e <__aeabi_ddiv+0x5ea>
 8000dcc:	001a      	movs	r2, r3
 8000dce:	e773      	b.n	8000cb8 <__aeabi_ddiv+0x424>
 8000dd0:	2b00      	cmp	r3, #0
 8000dd2:	dc00      	bgt.n	8000dd6 <__aeabi_ddiv+0x542>
 8000dd4:	e604      	b.n	80009e0 <__aeabi_ddiv+0x14c>
 8000dd6:	2301      	movs	r3, #1
 8000dd8:	2200      	movs	r2, #0
 8000dda:	449b      	add	fp, r3
 8000ddc:	e5cd      	b.n	800097a <__aeabi_ddiv+0xe6>
 8000dde:	2302      	movs	r3, #2
 8000de0:	4447      	add	r7, r8
 8000de2:	4547      	cmp	r7, r8
 8000de4:	4189      	sbcs	r1, r1
 8000de6:	425b      	negs	r3, r3
 8000de8:	469c      	mov	ip, r3
 8000dea:	4249      	negs	r1, r1
 8000dec:	1989      	adds	r1, r1, r6
 8000dee:	190c      	adds	r4, r1, r4
 8000df0:	44e3      	add	fp, ip
 8000df2:	1a24      	subs	r4, r4, r0
 8000df4:	e703      	b.n	8000bfe <__aeabi_ddiv+0x36a>
 8000df6:	4643      	mov	r3, r8
 8000df8:	005f      	lsls	r7, r3, #1
 8000dfa:	4547      	cmp	r7, r8
 8000dfc:	419b      	sbcs	r3, r3
 8000dfe:	46b8      	mov	r8, r7
 8000e00:	425b      	negs	r3, r3
 8000e02:	199e      	adds	r6, r3, r6
 8000e04:	3a02      	subs	r2, #2
 8000e06:	1989      	adds	r1, r1, r6
 8000e08:	42a9      	cmp	r1, r5
 8000e0a:	d000      	beq.n	8000e0e <__aeabi_ddiv+0x57a>
 8000e0c:	e754      	b.n	8000cb8 <__aeabi_ddiv+0x424>
 8000e0e:	4540      	cmp	r0, r8
 8000e10:	d000      	beq.n	8000e14 <__aeabi_ddiv+0x580>
 8000e12:	e751      	b.n	8000cb8 <__aeabi_ddiv+0x424>
 8000e14:	e5ab      	b.n	800096e <__aeabi_ddiv+0xda>
 8000e16:	001a      	movs	r2, r3
 8000e18:	e7f6      	b.n	8000e08 <__aeabi_ddiv+0x574>
 8000e1a:	211f      	movs	r1, #31
 8000e1c:	465f      	mov	r7, fp
 8000e1e:	4249      	negs	r1, r1
 8000e20:	1b0c      	subs	r4, r1, r4
 8000e22:	40e7      	lsrs	r7, r4
 8000e24:	2b20      	cmp	r3, #32
 8000e26:	d007      	beq.n	8000e38 <__aeabi_ddiv+0x5a4>
 8000e28:	491a      	ldr	r1, [pc, #104]	; (8000e94 <__aeabi_ddiv+0x600>)
 8000e2a:	9b00      	ldr	r3, [sp, #0]
 8000e2c:	468c      	mov	ip, r1
 8000e2e:	4463      	add	r3, ip
 8000e30:	0018      	movs	r0, r3
 8000e32:	465b      	mov	r3, fp
 8000e34:	4083      	lsls	r3, r0
 8000e36:	431a      	orrs	r2, r3
 8000e38:	1e50      	subs	r0, r2, #1
 8000e3a:	4182      	sbcs	r2, r0
 8000e3c:	433a      	orrs	r2, r7
 8000e3e:	2707      	movs	r7, #7
 8000e40:	2300      	movs	r3, #0
 8000e42:	4017      	ands	r7, r2
 8000e44:	d009      	beq.n	8000e5a <__aeabi_ddiv+0x5c6>
 8000e46:	210f      	movs	r1, #15
 8000e48:	2300      	movs	r3, #0
 8000e4a:	4011      	ands	r1, r2
 8000e4c:	0014      	movs	r4, r2
 8000e4e:	2904      	cmp	r1, #4
 8000e50:	d195      	bne.n	8000d7e <__aeabi_ddiv+0x4ea>
 8000e52:	0022      	movs	r2, r4
 8000e54:	075f      	lsls	r7, r3, #29
 8000e56:	025b      	lsls	r3, r3, #9
 8000e58:	0b1b      	lsrs	r3, r3, #12
 8000e5a:	08d2      	lsrs	r2, r2, #3
 8000e5c:	4317      	orrs	r7, r2
 8000e5e:	2200      	movs	r2, #0
 8000e60:	e5a6      	b.n	80009b0 <__aeabi_ddiv+0x11c>
 8000e62:	2380      	movs	r3, #128	; 0x80
 8000e64:	4659      	mov	r1, fp
 8000e66:	031b      	lsls	r3, r3, #12
 8000e68:	430b      	orrs	r3, r1
 8000e6a:	031b      	lsls	r3, r3, #12
 8000e6c:	0017      	movs	r7, r2
 8000e6e:	0b1b      	lsrs	r3, r3, #12
 8000e70:	4a06      	ldr	r2, [pc, #24]	; (8000e8c <__aeabi_ddiv+0x5f8>)
 8000e72:	e59d      	b.n	80009b0 <__aeabi_ddiv+0x11c>
 8000e74:	42bd      	cmp	r5, r7
 8000e76:	d8b2      	bhi.n	8000dde <__aeabi_ddiv+0x54a>
 8000e78:	469b      	mov	fp, r3
 8000e7a:	2400      	movs	r4, #0
 8000e7c:	e6bf      	b.n	8000bfe <__aeabi_ddiv+0x36a>
 8000e7e:	4580      	cmp	r8, r0
 8000e80:	d3b9      	bcc.n	8000df6 <__aeabi_ddiv+0x562>
 8000e82:	001a      	movs	r2, r3
 8000e84:	e7c3      	b.n	8000e0e <__aeabi_ddiv+0x57a>
 8000e86:	46c0      	nop			; (mov r8, r8)
 8000e88:	000003ff 	.word	0x000003ff
 8000e8c:	000007ff 	.word	0x000007ff
 8000e90:	0000041e 	.word	0x0000041e
 8000e94:	0000043e 	.word	0x0000043e

08000e98 <__aeabi_dmul>:
 8000e98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e9a:	4657      	mov	r7, sl
 8000e9c:	46de      	mov	lr, fp
 8000e9e:	464e      	mov	r6, r9
 8000ea0:	4645      	mov	r5, r8
 8000ea2:	b5e0      	push	{r5, r6, r7, lr}
 8000ea4:	4683      	mov	fp, r0
 8000ea6:	0006      	movs	r6, r0
 8000ea8:	030f      	lsls	r7, r1, #12
 8000eaa:	0048      	lsls	r0, r1, #1
 8000eac:	b087      	sub	sp, #28
 8000eae:	4692      	mov	sl, r2
 8000eb0:	001d      	movs	r5, r3
 8000eb2:	0b3f      	lsrs	r7, r7, #12
 8000eb4:	0d40      	lsrs	r0, r0, #21
 8000eb6:	0fcc      	lsrs	r4, r1, #31
 8000eb8:	2800      	cmp	r0, #0
 8000eba:	d100      	bne.n	8000ebe <__aeabi_dmul+0x26>
 8000ebc:	e06f      	b.n	8000f9e <__aeabi_dmul+0x106>
 8000ebe:	4bde      	ldr	r3, [pc, #888]	; (8001238 <__aeabi_dmul+0x3a0>)
 8000ec0:	4298      	cmp	r0, r3
 8000ec2:	d038      	beq.n	8000f36 <__aeabi_dmul+0x9e>
 8000ec4:	2380      	movs	r3, #128	; 0x80
 8000ec6:	00ff      	lsls	r7, r7, #3
 8000ec8:	041b      	lsls	r3, r3, #16
 8000eca:	431f      	orrs	r7, r3
 8000ecc:	0f73      	lsrs	r3, r6, #29
 8000ece:	433b      	orrs	r3, r7
 8000ed0:	9301      	str	r3, [sp, #4]
 8000ed2:	4bda      	ldr	r3, [pc, #872]	; (800123c <__aeabi_dmul+0x3a4>)
 8000ed4:	2700      	movs	r7, #0
 8000ed6:	4699      	mov	r9, r3
 8000ed8:	2300      	movs	r3, #0
 8000eda:	469b      	mov	fp, r3
 8000edc:	00f6      	lsls	r6, r6, #3
 8000ede:	4481      	add	r9, r0
 8000ee0:	032b      	lsls	r3, r5, #12
 8000ee2:	0069      	lsls	r1, r5, #1
 8000ee4:	0b1b      	lsrs	r3, r3, #12
 8000ee6:	4652      	mov	r2, sl
 8000ee8:	4698      	mov	r8, r3
 8000eea:	0d49      	lsrs	r1, r1, #21
 8000eec:	0fed      	lsrs	r5, r5, #31
 8000eee:	2900      	cmp	r1, #0
 8000ef0:	d100      	bne.n	8000ef4 <__aeabi_dmul+0x5c>
 8000ef2:	e085      	b.n	8001000 <__aeabi_dmul+0x168>
 8000ef4:	4bd0      	ldr	r3, [pc, #832]	; (8001238 <__aeabi_dmul+0x3a0>)
 8000ef6:	4299      	cmp	r1, r3
 8000ef8:	d100      	bne.n	8000efc <__aeabi_dmul+0x64>
 8000efa:	e073      	b.n	8000fe4 <__aeabi_dmul+0x14c>
 8000efc:	4643      	mov	r3, r8
 8000efe:	00da      	lsls	r2, r3, #3
 8000f00:	2380      	movs	r3, #128	; 0x80
 8000f02:	041b      	lsls	r3, r3, #16
 8000f04:	4313      	orrs	r3, r2
 8000f06:	4652      	mov	r2, sl
 8000f08:	48cc      	ldr	r0, [pc, #816]	; (800123c <__aeabi_dmul+0x3a4>)
 8000f0a:	0f52      	lsrs	r2, r2, #29
 8000f0c:	4684      	mov	ip, r0
 8000f0e:	4313      	orrs	r3, r2
 8000f10:	4652      	mov	r2, sl
 8000f12:	2000      	movs	r0, #0
 8000f14:	4461      	add	r1, ip
 8000f16:	00d2      	lsls	r2, r2, #3
 8000f18:	4489      	add	r9, r1
 8000f1a:	0021      	movs	r1, r4
 8000f1c:	4069      	eors	r1, r5
 8000f1e:	9100      	str	r1, [sp, #0]
 8000f20:	468c      	mov	ip, r1
 8000f22:	2101      	movs	r1, #1
 8000f24:	4449      	add	r1, r9
 8000f26:	468a      	mov	sl, r1
 8000f28:	2f0f      	cmp	r7, #15
 8000f2a:	d900      	bls.n	8000f2e <__aeabi_dmul+0x96>
 8000f2c:	e090      	b.n	8001050 <__aeabi_dmul+0x1b8>
 8000f2e:	49c4      	ldr	r1, [pc, #784]	; (8001240 <__aeabi_dmul+0x3a8>)
 8000f30:	00bf      	lsls	r7, r7, #2
 8000f32:	59cf      	ldr	r7, [r1, r7]
 8000f34:	46bf      	mov	pc, r7
 8000f36:	465b      	mov	r3, fp
 8000f38:	433b      	orrs	r3, r7
 8000f3a:	9301      	str	r3, [sp, #4]
 8000f3c:	d000      	beq.n	8000f40 <__aeabi_dmul+0xa8>
 8000f3e:	e16a      	b.n	8001216 <__aeabi_dmul+0x37e>
 8000f40:	2302      	movs	r3, #2
 8000f42:	2708      	movs	r7, #8
 8000f44:	2600      	movs	r6, #0
 8000f46:	4681      	mov	r9, r0
 8000f48:	469b      	mov	fp, r3
 8000f4a:	e7c9      	b.n	8000ee0 <__aeabi_dmul+0x48>
 8000f4c:	0032      	movs	r2, r6
 8000f4e:	4658      	mov	r0, fp
 8000f50:	9b01      	ldr	r3, [sp, #4]
 8000f52:	4661      	mov	r1, ip
 8000f54:	9100      	str	r1, [sp, #0]
 8000f56:	2802      	cmp	r0, #2
 8000f58:	d100      	bne.n	8000f5c <__aeabi_dmul+0xc4>
 8000f5a:	e075      	b.n	8001048 <__aeabi_dmul+0x1b0>
 8000f5c:	2803      	cmp	r0, #3
 8000f5e:	d100      	bne.n	8000f62 <__aeabi_dmul+0xca>
 8000f60:	e1fe      	b.n	8001360 <__aeabi_dmul+0x4c8>
 8000f62:	2801      	cmp	r0, #1
 8000f64:	d000      	beq.n	8000f68 <__aeabi_dmul+0xd0>
 8000f66:	e12c      	b.n	80011c2 <__aeabi_dmul+0x32a>
 8000f68:	2300      	movs	r3, #0
 8000f6a:	2700      	movs	r7, #0
 8000f6c:	2600      	movs	r6, #0
 8000f6e:	2500      	movs	r5, #0
 8000f70:	033f      	lsls	r7, r7, #12
 8000f72:	0d2a      	lsrs	r2, r5, #20
 8000f74:	0b3f      	lsrs	r7, r7, #12
 8000f76:	48b3      	ldr	r0, [pc, #716]	; (8001244 <__aeabi_dmul+0x3ac>)
 8000f78:	0512      	lsls	r2, r2, #20
 8000f7a:	433a      	orrs	r2, r7
 8000f7c:	4002      	ands	r2, r0
 8000f7e:	051b      	lsls	r3, r3, #20
 8000f80:	4313      	orrs	r3, r2
 8000f82:	9a00      	ldr	r2, [sp, #0]
 8000f84:	005b      	lsls	r3, r3, #1
 8000f86:	07d1      	lsls	r1, r2, #31
 8000f88:	085b      	lsrs	r3, r3, #1
 8000f8a:	430b      	orrs	r3, r1
 8000f8c:	0030      	movs	r0, r6
 8000f8e:	0019      	movs	r1, r3
 8000f90:	b007      	add	sp, #28
 8000f92:	bc3c      	pop	{r2, r3, r4, r5}
 8000f94:	4690      	mov	r8, r2
 8000f96:	4699      	mov	r9, r3
 8000f98:	46a2      	mov	sl, r4
 8000f9a:	46ab      	mov	fp, r5
 8000f9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f9e:	465b      	mov	r3, fp
 8000fa0:	433b      	orrs	r3, r7
 8000fa2:	9301      	str	r3, [sp, #4]
 8000fa4:	d100      	bne.n	8000fa8 <__aeabi_dmul+0x110>
 8000fa6:	e12f      	b.n	8001208 <__aeabi_dmul+0x370>
 8000fa8:	2f00      	cmp	r7, #0
 8000faa:	d100      	bne.n	8000fae <__aeabi_dmul+0x116>
 8000fac:	e1a5      	b.n	80012fa <__aeabi_dmul+0x462>
 8000fae:	0038      	movs	r0, r7
 8000fb0:	f000 fe0c 	bl	8001bcc <__clzsi2>
 8000fb4:	0003      	movs	r3, r0
 8000fb6:	3b0b      	subs	r3, #11
 8000fb8:	2b1c      	cmp	r3, #28
 8000fba:	dd00      	ble.n	8000fbe <__aeabi_dmul+0x126>
 8000fbc:	e196      	b.n	80012ec <__aeabi_dmul+0x454>
 8000fbe:	221d      	movs	r2, #29
 8000fc0:	1ad3      	subs	r3, r2, r3
 8000fc2:	465a      	mov	r2, fp
 8000fc4:	0001      	movs	r1, r0
 8000fc6:	40da      	lsrs	r2, r3
 8000fc8:	465e      	mov	r6, fp
 8000fca:	3908      	subs	r1, #8
 8000fcc:	408f      	lsls	r7, r1
 8000fce:	0013      	movs	r3, r2
 8000fd0:	408e      	lsls	r6, r1
 8000fd2:	433b      	orrs	r3, r7
 8000fd4:	9301      	str	r3, [sp, #4]
 8000fd6:	4b9c      	ldr	r3, [pc, #624]	; (8001248 <__aeabi_dmul+0x3b0>)
 8000fd8:	2700      	movs	r7, #0
 8000fda:	1a1b      	subs	r3, r3, r0
 8000fdc:	4699      	mov	r9, r3
 8000fde:	2300      	movs	r3, #0
 8000fe0:	469b      	mov	fp, r3
 8000fe2:	e77d      	b.n	8000ee0 <__aeabi_dmul+0x48>
 8000fe4:	4641      	mov	r1, r8
 8000fe6:	4653      	mov	r3, sl
 8000fe8:	430b      	orrs	r3, r1
 8000fea:	4993      	ldr	r1, [pc, #588]	; (8001238 <__aeabi_dmul+0x3a0>)
 8000fec:	468c      	mov	ip, r1
 8000fee:	44e1      	add	r9, ip
 8000ff0:	2b00      	cmp	r3, #0
 8000ff2:	d000      	beq.n	8000ff6 <__aeabi_dmul+0x15e>
 8000ff4:	e11a      	b.n	800122c <__aeabi_dmul+0x394>
 8000ff6:	2202      	movs	r2, #2
 8000ff8:	2002      	movs	r0, #2
 8000ffa:	4317      	orrs	r7, r2
 8000ffc:	2200      	movs	r2, #0
 8000ffe:	e78c      	b.n	8000f1a <__aeabi_dmul+0x82>
 8001000:	4313      	orrs	r3, r2
 8001002:	d100      	bne.n	8001006 <__aeabi_dmul+0x16e>
 8001004:	e10d      	b.n	8001222 <__aeabi_dmul+0x38a>
 8001006:	4643      	mov	r3, r8
 8001008:	2b00      	cmp	r3, #0
 800100a:	d100      	bne.n	800100e <__aeabi_dmul+0x176>
 800100c:	e181      	b.n	8001312 <__aeabi_dmul+0x47a>
 800100e:	4640      	mov	r0, r8
 8001010:	f000 fddc 	bl	8001bcc <__clzsi2>
 8001014:	0002      	movs	r2, r0
 8001016:	3a0b      	subs	r2, #11
 8001018:	2a1c      	cmp	r2, #28
 800101a:	dd00      	ble.n	800101e <__aeabi_dmul+0x186>
 800101c:	e172      	b.n	8001304 <__aeabi_dmul+0x46c>
 800101e:	0001      	movs	r1, r0
 8001020:	4643      	mov	r3, r8
 8001022:	3908      	subs	r1, #8
 8001024:	408b      	lsls	r3, r1
 8001026:	4698      	mov	r8, r3
 8001028:	231d      	movs	r3, #29
 800102a:	1a9a      	subs	r2, r3, r2
 800102c:	4653      	mov	r3, sl
 800102e:	40d3      	lsrs	r3, r2
 8001030:	001a      	movs	r2, r3
 8001032:	4643      	mov	r3, r8
 8001034:	4313      	orrs	r3, r2
 8001036:	4652      	mov	r2, sl
 8001038:	408a      	lsls	r2, r1
 800103a:	4649      	mov	r1, r9
 800103c:	1a08      	subs	r0, r1, r0
 800103e:	4982      	ldr	r1, [pc, #520]	; (8001248 <__aeabi_dmul+0x3b0>)
 8001040:	4689      	mov	r9, r1
 8001042:	4481      	add	r9, r0
 8001044:	2000      	movs	r0, #0
 8001046:	e768      	b.n	8000f1a <__aeabi_dmul+0x82>
 8001048:	4b7b      	ldr	r3, [pc, #492]	; (8001238 <__aeabi_dmul+0x3a0>)
 800104a:	2700      	movs	r7, #0
 800104c:	2600      	movs	r6, #0
 800104e:	e78e      	b.n	8000f6e <__aeabi_dmul+0xd6>
 8001050:	0c14      	lsrs	r4, r2, #16
 8001052:	0412      	lsls	r2, r2, #16
 8001054:	0c12      	lsrs	r2, r2, #16
 8001056:	0011      	movs	r1, r2
 8001058:	0c37      	lsrs	r7, r6, #16
 800105a:	0436      	lsls	r6, r6, #16
 800105c:	0c35      	lsrs	r5, r6, #16
 800105e:	4379      	muls	r1, r7
 8001060:	0028      	movs	r0, r5
 8001062:	468c      	mov	ip, r1
 8001064:	002e      	movs	r6, r5
 8001066:	4360      	muls	r0, r4
 8001068:	4460      	add	r0, ip
 800106a:	4683      	mov	fp, r0
 800106c:	4356      	muls	r6, r2
 800106e:	0021      	movs	r1, r4
 8001070:	0c30      	lsrs	r0, r6, #16
 8001072:	4680      	mov	r8, r0
 8001074:	4658      	mov	r0, fp
 8001076:	4379      	muls	r1, r7
 8001078:	4440      	add	r0, r8
 800107a:	9102      	str	r1, [sp, #8]
 800107c:	4584      	cmp	ip, r0
 800107e:	d906      	bls.n	800108e <__aeabi_dmul+0x1f6>
 8001080:	4688      	mov	r8, r1
 8001082:	2180      	movs	r1, #128	; 0x80
 8001084:	0249      	lsls	r1, r1, #9
 8001086:	468c      	mov	ip, r1
 8001088:	44e0      	add	r8, ip
 800108a:	4641      	mov	r1, r8
 800108c:	9102      	str	r1, [sp, #8]
 800108e:	0436      	lsls	r6, r6, #16
 8001090:	0c01      	lsrs	r1, r0, #16
 8001092:	0c36      	lsrs	r6, r6, #16
 8001094:	0400      	lsls	r0, r0, #16
 8001096:	468b      	mov	fp, r1
 8001098:	1981      	adds	r1, r0, r6
 800109a:	0c1e      	lsrs	r6, r3, #16
 800109c:	041b      	lsls	r3, r3, #16
 800109e:	0c1b      	lsrs	r3, r3, #16
 80010a0:	9103      	str	r1, [sp, #12]
 80010a2:	0019      	movs	r1, r3
 80010a4:	4379      	muls	r1, r7
 80010a6:	468c      	mov	ip, r1
 80010a8:	0028      	movs	r0, r5
 80010aa:	4375      	muls	r5, r6
 80010ac:	4465      	add	r5, ip
 80010ae:	46a8      	mov	r8, r5
 80010b0:	4358      	muls	r0, r3
 80010b2:	0c05      	lsrs	r5, r0, #16
 80010b4:	4445      	add	r5, r8
 80010b6:	4377      	muls	r7, r6
 80010b8:	42a9      	cmp	r1, r5
 80010ba:	d903      	bls.n	80010c4 <__aeabi_dmul+0x22c>
 80010bc:	2180      	movs	r1, #128	; 0x80
 80010be:	0249      	lsls	r1, r1, #9
 80010c0:	468c      	mov	ip, r1
 80010c2:	4467      	add	r7, ip
 80010c4:	0c29      	lsrs	r1, r5, #16
 80010c6:	468c      	mov	ip, r1
 80010c8:	0039      	movs	r1, r7
 80010ca:	0400      	lsls	r0, r0, #16
 80010cc:	0c00      	lsrs	r0, r0, #16
 80010ce:	042d      	lsls	r5, r5, #16
 80010d0:	182d      	adds	r5, r5, r0
 80010d2:	4461      	add	r1, ip
 80010d4:	44ab      	add	fp, r5
 80010d6:	9105      	str	r1, [sp, #20]
 80010d8:	4659      	mov	r1, fp
 80010da:	9104      	str	r1, [sp, #16]
 80010dc:	9901      	ldr	r1, [sp, #4]
 80010de:	040f      	lsls	r7, r1, #16
 80010e0:	0c3f      	lsrs	r7, r7, #16
 80010e2:	0c08      	lsrs	r0, r1, #16
 80010e4:	0039      	movs	r1, r7
 80010e6:	4351      	muls	r1, r2
 80010e8:	4342      	muls	r2, r0
 80010ea:	4690      	mov	r8, r2
 80010ec:	0002      	movs	r2, r0
 80010ee:	468c      	mov	ip, r1
 80010f0:	0c09      	lsrs	r1, r1, #16
 80010f2:	468b      	mov	fp, r1
 80010f4:	4362      	muls	r2, r4
 80010f6:	437c      	muls	r4, r7
 80010f8:	4444      	add	r4, r8
 80010fa:	445c      	add	r4, fp
 80010fc:	45a0      	cmp	r8, r4
 80010fe:	d903      	bls.n	8001108 <__aeabi_dmul+0x270>
 8001100:	2180      	movs	r1, #128	; 0x80
 8001102:	0249      	lsls	r1, r1, #9
 8001104:	4688      	mov	r8, r1
 8001106:	4442      	add	r2, r8
 8001108:	0c21      	lsrs	r1, r4, #16
 800110a:	4688      	mov	r8, r1
 800110c:	4661      	mov	r1, ip
 800110e:	0409      	lsls	r1, r1, #16
 8001110:	0c09      	lsrs	r1, r1, #16
 8001112:	468c      	mov	ip, r1
 8001114:	0039      	movs	r1, r7
 8001116:	4359      	muls	r1, r3
 8001118:	4343      	muls	r3, r0
 800111a:	4370      	muls	r0, r6
 800111c:	437e      	muls	r6, r7
 800111e:	0c0f      	lsrs	r7, r1, #16
 8001120:	18f6      	adds	r6, r6, r3
 8001122:	0424      	lsls	r4, r4, #16
 8001124:	19be      	adds	r6, r7, r6
 8001126:	4464      	add	r4, ip
 8001128:	4442      	add	r2, r8
 800112a:	468c      	mov	ip, r1
 800112c:	42b3      	cmp	r3, r6
 800112e:	d903      	bls.n	8001138 <__aeabi_dmul+0x2a0>
 8001130:	2380      	movs	r3, #128	; 0x80
 8001132:	025b      	lsls	r3, r3, #9
 8001134:	4698      	mov	r8, r3
 8001136:	4440      	add	r0, r8
 8001138:	9b02      	ldr	r3, [sp, #8]
 800113a:	4661      	mov	r1, ip
 800113c:	4698      	mov	r8, r3
 800113e:	9b04      	ldr	r3, [sp, #16]
 8001140:	0437      	lsls	r7, r6, #16
 8001142:	4443      	add	r3, r8
 8001144:	469b      	mov	fp, r3
 8001146:	45ab      	cmp	fp, r5
 8001148:	41ad      	sbcs	r5, r5
 800114a:	426b      	negs	r3, r5
 800114c:	040d      	lsls	r5, r1, #16
 800114e:	9905      	ldr	r1, [sp, #20]
 8001150:	0c2d      	lsrs	r5, r5, #16
 8001152:	468c      	mov	ip, r1
 8001154:	197f      	adds	r7, r7, r5
 8001156:	4467      	add	r7, ip
 8001158:	18fd      	adds	r5, r7, r3
 800115a:	46a8      	mov	r8, r5
 800115c:	465d      	mov	r5, fp
 800115e:	192d      	adds	r5, r5, r4
 8001160:	42a5      	cmp	r5, r4
 8001162:	41a4      	sbcs	r4, r4
 8001164:	4693      	mov	fp, r2
 8001166:	4264      	negs	r4, r4
 8001168:	46a4      	mov	ip, r4
 800116a:	44c3      	add	fp, r8
 800116c:	44dc      	add	ip, fp
 800116e:	428f      	cmp	r7, r1
 8001170:	41bf      	sbcs	r7, r7
 8001172:	4598      	cmp	r8, r3
 8001174:	419b      	sbcs	r3, r3
 8001176:	4593      	cmp	fp, r2
 8001178:	4192      	sbcs	r2, r2
 800117a:	45a4      	cmp	ip, r4
 800117c:	41a4      	sbcs	r4, r4
 800117e:	425b      	negs	r3, r3
 8001180:	427f      	negs	r7, r7
 8001182:	431f      	orrs	r7, r3
 8001184:	0c36      	lsrs	r6, r6, #16
 8001186:	4252      	negs	r2, r2
 8001188:	4264      	negs	r4, r4
 800118a:	19bf      	adds	r7, r7, r6
 800118c:	4322      	orrs	r2, r4
 800118e:	18bf      	adds	r7, r7, r2
 8001190:	4662      	mov	r2, ip
 8001192:	1838      	adds	r0, r7, r0
 8001194:	0243      	lsls	r3, r0, #9
 8001196:	0dd2      	lsrs	r2, r2, #23
 8001198:	9903      	ldr	r1, [sp, #12]
 800119a:	4313      	orrs	r3, r2
 800119c:	026a      	lsls	r2, r5, #9
 800119e:	430a      	orrs	r2, r1
 80011a0:	1e50      	subs	r0, r2, #1
 80011a2:	4182      	sbcs	r2, r0
 80011a4:	4661      	mov	r1, ip
 80011a6:	0ded      	lsrs	r5, r5, #23
 80011a8:	432a      	orrs	r2, r5
 80011aa:	024e      	lsls	r6, r1, #9
 80011ac:	4332      	orrs	r2, r6
 80011ae:	01d9      	lsls	r1, r3, #7
 80011b0:	d400      	bmi.n	80011b4 <__aeabi_dmul+0x31c>
 80011b2:	e0b3      	b.n	800131c <__aeabi_dmul+0x484>
 80011b4:	2601      	movs	r6, #1
 80011b6:	0850      	lsrs	r0, r2, #1
 80011b8:	4032      	ands	r2, r6
 80011ba:	4302      	orrs	r2, r0
 80011bc:	07de      	lsls	r6, r3, #31
 80011be:	4332      	orrs	r2, r6
 80011c0:	085b      	lsrs	r3, r3, #1
 80011c2:	4c22      	ldr	r4, [pc, #136]	; (800124c <__aeabi_dmul+0x3b4>)
 80011c4:	4454      	add	r4, sl
 80011c6:	2c00      	cmp	r4, #0
 80011c8:	dd62      	ble.n	8001290 <__aeabi_dmul+0x3f8>
 80011ca:	0751      	lsls	r1, r2, #29
 80011cc:	d009      	beq.n	80011e2 <__aeabi_dmul+0x34a>
 80011ce:	200f      	movs	r0, #15
 80011d0:	4010      	ands	r0, r2
 80011d2:	2804      	cmp	r0, #4
 80011d4:	d005      	beq.n	80011e2 <__aeabi_dmul+0x34a>
 80011d6:	1d10      	adds	r0, r2, #4
 80011d8:	4290      	cmp	r0, r2
 80011da:	4192      	sbcs	r2, r2
 80011dc:	4252      	negs	r2, r2
 80011de:	189b      	adds	r3, r3, r2
 80011e0:	0002      	movs	r2, r0
 80011e2:	01d9      	lsls	r1, r3, #7
 80011e4:	d504      	bpl.n	80011f0 <__aeabi_dmul+0x358>
 80011e6:	2480      	movs	r4, #128	; 0x80
 80011e8:	4819      	ldr	r0, [pc, #100]	; (8001250 <__aeabi_dmul+0x3b8>)
 80011ea:	00e4      	lsls	r4, r4, #3
 80011ec:	4003      	ands	r3, r0
 80011ee:	4454      	add	r4, sl
 80011f0:	4818      	ldr	r0, [pc, #96]	; (8001254 <__aeabi_dmul+0x3bc>)
 80011f2:	4284      	cmp	r4, r0
 80011f4:	dd00      	ble.n	80011f8 <__aeabi_dmul+0x360>
 80011f6:	e727      	b.n	8001048 <__aeabi_dmul+0x1b0>
 80011f8:	075e      	lsls	r6, r3, #29
 80011fa:	025b      	lsls	r3, r3, #9
 80011fc:	08d2      	lsrs	r2, r2, #3
 80011fe:	0b1f      	lsrs	r7, r3, #12
 8001200:	0563      	lsls	r3, r4, #21
 8001202:	4316      	orrs	r6, r2
 8001204:	0d5b      	lsrs	r3, r3, #21
 8001206:	e6b2      	b.n	8000f6e <__aeabi_dmul+0xd6>
 8001208:	2300      	movs	r3, #0
 800120a:	4699      	mov	r9, r3
 800120c:	3301      	adds	r3, #1
 800120e:	2704      	movs	r7, #4
 8001210:	2600      	movs	r6, #0
 8001212:	469b      	mov	fp, r3
 8001214:	e664      	b.n	8000ee0 <__aeabi_dmul+0x48>
 8001216:	2303      	movs	r3, #3
 8001218:	9701      	str	r7, [sp, #4]
 800121a:	4681      	mov	r9, r0
 800121c:	270c      	movs	r7, #12
 800121e:	469b      	mov	fp, r3
 8001220:	e65e      	b.n	8000ee0 <__aeabi_dmul+0x48>
 8001222:	2201      	movs	r2, #1
 8001224:	2001      	movs	r0, #1
 8001226:	4317      	orrs	r7, r2
 8001228:	2200      	movs	r2, #0
 800122a:	e676      	b.n	8000f1a <__aeabi_dmul+0x82>
 800122c:	2303      	movs	r3, #3
 800122e:	2003      	movs	r0, #3
 8001230:	431f      	orrs	r7, r3
 8001232:	4643      	mov	r3, r8
 8001234:	e671      	b.n	8000f1a <__aeabi_dmul+0x82>
 8001236:	46c0      	nop			; (mov r8, r8)
 8001238:	000007ff 	.word	0x000007ff
 800123c:	fffffc01 	.word	0xfffffc01
 8001240:	080032d8 	.word	0x080032d8
 8001244:	800fffff 	.word	0x800fffff
 8001248:	fffffc0d 	.word	0xfffffc0d
 800124c:	000003ff 	.word	0x000003ff
 8001250:	feffffff 	.word	0xfeffffff
 8001254:	000007fe 	.word	0x000007fe
 8001258:	2300      	movs	r3, #0
 800125a:	2780      	movs	r7, #128	; 0x80
 800125c:	9300      	str	r3, [sp, #0]
 800125e:	033f      	lsls	r7, r7, #12
 8001260:	2600      	movs	r6, #0
 8001262:	4b43      	ldr	r3, [pc, #268]	; (8001370 <__aeabi_dmul+0x4d8>)
 8001264:	e683      	b.n	8000f6e <__aeabi_dmul+0xd6>
 8001266:	9b01      	ldr	r3, [sp, #4]
 8001268:	0032      	movs	r2, r6
 800126a:	46a4      	mov	ip, r4
 800126c:	4658      	mov	r0, fp
 800126e:	e670      	b.n	8000f52 <__aeabi_dmul+0xba>
 8001270:	46ac      	mov	ip, r5
 8001272:	e66e      	b.n	8000f52 <__aeabi_dmul+0xba>
 8001274:	2780      	movs	r7, #128	; 0x80
 8001276:	9901      	ldr	r1, [sp, #4]
 8001278:	033f      	lsls	r7, r7, #12
 800127a:	4239      	tst	r1, r7
 800127c:	d02d      	beq.n	80012da <__aeabi_dmul+0x442>
 800127e:	423b      	tst	r3, r7
 8001280:	d12b      	bne.n	80012da <__aeabi_dmul+0x442>
 8001282:	431f      	orrs	r7, r3
 8001284:	033f      	lsls	r7, r7, #12
 8001286:	0b3f      	lsrs	r7, r7, #12
 8001288:	9500      	str	r5, [sp, #0]
 800128a:	0016      	movs	r6, r2
 800128c:	4b38      	ldr	r3, [pc, #224]	; (8001370 <__aeabi_dmul+0x4d8>)
 800128e:	e66e      	b.n	8000f6e <__aeabi_dmul+0xd6>
 8001290:	2501      	movs	r5, #1
 8001292:	1b2d      	subs	r5, r5, r4
 8001294:	2d38      	cmp	r5, #56	; 0x38
 8001296:	dd00      	ble.n	800129a <__aeabi_dmul+0x402>
 8001298:	e666      	b.n	8000f68 <__aeabi_dmul+0xd0>
 800129a:	2d1f      	cmp	r5, #31
 800129c:	dc40      	bgt.n	8001320 <__aeabi_dmul+0x488>
 800129e:	4835      	ldr	r0, [pc, #212]	; (8001374 <__aeabi_dmul+0x4dc>)
 80012a0:	001c      	movs	r4, r3
 80012a2:	4450      	add	r0, sl
 80012a4:	0016      	movs	r6, r2
 80012a6:	4082      	lsls	r2, r0
 80012a8:	4084      	lsls	r4, r0
 80012aa:	40ee      	lsrs	r6, r5
 80012ac:	1e50      	subs	r0, r2, #1
 80012ae:	4182      	sbcs	r2, r0
 80012b0:	4334      	orrs	r4, r6
 80012b2:	4314      	orrs	r4, r2
 80012b4:	40eb      	lsrs	r3, r5
 80012b6:	0762      	lsls	r2, r4, #29
 80012b8:	d009      	beq.n	80012ce <__aeabi_dmul+0x436>
 80012ba:	220f      	movs	r2, #15
 80012bc:	4022      	ands	r2, r4
 80012be:	2a04      	cmp	r2, #4
 80012c0:	d005      	beq.n	80012ce <__aeabi_dmul+0x436>
 80012c2:	0022      	movs	r2, r4
 80012c4:	1d14      	adds	r4, r2, #4
 80012c6:	4294      	cmp	r4, r2
 80012c8:	4180      	sbcs	r0, r0
 80012ca:	4240      	negs	r0, r0
 80012cc:	181b      	adds	r3, r3, r0
 80012ce:	021a      	lsls	r2, r3, #8
 80012d0:	d53e      	bpl.n	8001350 <__aeabi_dmul+0x4b8>
 80012d2:	2301      	movs	r3, #1
 80012d4:	2700      	movs	r7, #0
 80012d6:	2600      	movs	r6, #0
 80012d8:	e649      	b.n	8000f6e <__aeabi_dmul+0xd6>
 80012da:	2780      	movs	r7, #128	; 0x80
 80012dc:	9b01      	ldr	r3, [sp, #4]
 80012de:	033f      	lsls	r7, r7, #12
 80012e0:	431f      	orrs	r7, r3
 80012e2:	033f      	lsls	r7, r7, #12
 80012e4:	0b3f      	lsrs	r7, r7, #12
 80012e6:	9400      	str	r4, [sp, #0]
 80012e8:	4b21      	ldr	r3, [pc, #132]	; (8001370 <__aeabi_dmul+0x4d8>)
 80012ea:	e640      	b.n	8000f6e <__aeabi_dmul+0xd6>
 80012ec:	0003      	movs	r3, r0
 80012ee:	465a      	mov	r2, fp
 80012f0:	3b28      	subs	r3, #40	; 0x28
 80012f2:	409a      	lsls	r2, r3
 80012f4:	2600      	movs	r6, #0
 80012f6:	9201      	str	r2, [sp, #4]
 80012f8:	e66d      	b.n	8000fd6 <__aeabi_dmul+0x13e>
 80012fa:	4658      	mov	r0, fp
 80012fc:	f000 fc66 	bl	8001bcc <__clzsi2>
 8001300:	3020      	adds	r0, #32
 8001302:	e657      	b.n	8000fb4 <__aeabi_dmul+0x11c>
 8001304:	0003      	movs	r3, r0
 8001306:	4652      	mov	r2, sl
 8001308:	3b28      	subs	r3, #40	; 0x28
 800130a:	409a      	lsls	r2, r3
 800130c:	0013      	movs	r3, r2
 800130e:	2200      	movs	r2, #0
 8001310:	e693      	b.n	800103a <__aeabi_dmul+0x1a2>
 8001312:	4650      	mov	r0, sl
 8001314:	f000 fc5a 	bl	8001bcc <__clzsi2>
 8001318:	3020      	adds	r0, #32
 800131a:	e67b      	b.n	8001014 <__aeabi_dmul+0x17c>
 800131c:	46ca      	mov	sl, r9
 800131e:	e750      	b.n	80011c2 <__aeabi_dmul+0x32a>
 8001320:	201f      	movs	r0, #31
 8001322:	001e      	movs	r6, r3
 8001324:	4240      	negs	r0, r0
 8001326:	1b04      	subs	r4, r0, r4
 8001328:	40e6      	lsrs	r6, r4
 800132a:	2d20      	cmp	r5, #32
 800132c:	d003      	beq.n	8001336 <__aeabi_dmul+0x49e>
 800132e:	4c12      	ldr	r4, [pc, #72]	; (8001378 <__aeabi_dmul+0x4e0>)
 8001330:	4454      	add	r4, sl
 8001332:	40a3      	lsls	r3, r4
 8001334:	431a      	orrs	r2, r3
 8001336:	1e50      	subs	r0, r2, #1
 8001338:	4182      	sbcs	r2, r0
 800133a:	4332      	orrs	r2, r6
 800133c:	2607      	movs	r6, #7
 800133e:	2700      	movs	r7, #0
 8001340:	4016      	ands	r6, r2
 8001342:	d009      	beq.n	8001358 <__aeabi_dmul+0x4c0>
 8001344:	200f      	movs	r0, #15
 8001346:	2300      	movs	r3, #0
 8001348:	4010      	ands	r0, r2
 800134a:	0014      	movs	r4, r2
 800134c:	2804      	cmp	r0, #4
 800134e:	d1b9      	bne.n	80012c4 <__aeabi_dmul+0x42c>
 8001350:	0022      	movs	r2, r4
 8001352:	075e      	lsls	r6, r3, #29
 8001354:	025b      	lsls	r3, r3, #9
 8001356:	0b1f      	lsrs	r7, r3, #12
 8001358:	08d2      	lsrs	r2, r2, #3
 800135a:	4316      	orrs	r6, r2
 800135c:	2300      	movs	r3, #0
 800135e:	e606      	b.n	8000f6e <__aeabi_dmul+0xd6>
 8001360:	2780      	movs	r7, #128	; 0x80
 8001362:	033f      	lsls	r7, r7, #12
 8001364:	431f      	orrs	r7, r3
 8001366:	033f      	lsls	r7, r7, #12
 8001368:	0b3f      	lsrs	r7, r7, #12
 800136a:	0016      	movs	r6, r2
 800136c:	4b00      	ldr	r3, [pc, #0]	; (8001370 <__aeabi_dmul+0x4d8>)
 800136e:	e5fe      	b.n	8000f6e <__aeabi_dmul+0xd6>
 8001370:	000007ff 	.word	0x000007ff
 8001374:	0000041e 	.word	0x0000041e
 8001378:	0000043e 	.word	0x0000043e

0800137c <__aeabi_dsub>:
 800137c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800137e:	4657      	mov	r7, sl
 8001380:	464e      	mov	r6, r9
 8001382:	4645      	mov	r5, r8
 8001384:	46de      	mov	lr, fp
 8001386:	000c      	movs	r4, r1
 8001388:	0309      	lsls	r1, r1, #12
 800138a:	b5e0      	push	{r5, r6, r7, lr}
 800138c:	0a49      	lsrs	r1, r1, #9
 800138e:	0f46      	lsrs	r6, r0, #29
 8001390:	005f      	lsls	r7, r3, #1
 8001392:	4331      	orrs	r1, r6
 8001394:	031e      	lsls	r6, r3, #12
 8001396:	0fdb      	lsrs	r3, r3, #31
 8001398:	0a76      	lsrs	r6, r6, #9
 800139a:	469b      	mov	fp, r3
 800139c:	0f53      	lsrs	r3, r2, #29
 800139e:	4333      	orrs	r3, r6
 80013a0:	4ec8      	ldr	r6, [pc, #800]	; (80016c4 <__aeabi_dsub+0x348>)
 80013a2:	0065      	lsls	r5, r4, #1
 80013a4:	00c0      	lsls	r0, r0, #3
 80013a6:	0fe4      	lsrs	r4, r4, #31
 80013a8:	00d2      	lsls	r2, r2, #3
 80013aa:	0d6d      	lsrs	r5, r5, #21
 80013ac:	46a2      	mov	sl, r4
 80013ae:	4681      	mov	r9, r0
 80013b0:	0d7f      	lsrs	r7, r7, #21
 80013b2:	469c      	mov	ip, r3
 80013b4:	4690      	mov	r8, r2
 80013b6:	42b7      	cmp	r7, r6
 80013b8:	d100      	bne.n	80013bc <__aeabi_dsub+0x40>
 80013ba:	e0b9      	b.n	8001530 <__aeabi_dsub+0x1b4>
 80013bc:	465b      	mov	r3, fp
 80013be:	2601      	movs	r6, #1
 80013c0:	4073      	eors	r3, r6
 80013c2:	469b      	mov	fp, r3
 80013c4:	1bee      	subs	r6, r5, r7
 80013c6:	45a3      	cmp	fp, r4
 80013c8:	d100      	bne.n	80013cc <__aeabi_dsub+0x50>
 80013ca:	e083      	b.n	80014d4 <__aeabi_dsub+0x158>
 80013cc:	2e00      	cmp	r6, #0
 80013ce:	dd63      	ble.n	8001498 <__aeabi_dsub+0x11c>
 80013d0:	2f00      	cmp	r7, #0
 80013d2:	d000      	beq.n	80013d6 <__aeabi_dsub+0x5a>
 80013d4:	e0b1      	b.n	800153a <__aeabi_dsub+0x1be>
 80013d6:	4663      	mov	r3, ip
 80013d8:	4313      	orrs	r3, r2
 80013da:	d100      	bne.n	80013de <__aeabi_dsub+0x62>
 80013dc:	e123      	b.n	8001626 <__aeabi_dsub+0x2aa>
 80013de:	1e73      	subs	r3, r6, #1
 80013e0:	2b00      	cmp	r3, #0
 80013e2:	d000      	beq.n	80013e6 <__aeabi_dsub+0x6a>
 80013e4:	e1ba      	b.n	800175c <__aeabi_dsub+0x3e0>
 80013e6:	1a86      	subs	r6, r0, r2
 80013e8:	4663      	mov	r3, ip
 80013ea:	42b0      	cmp	r0, r6
 80013ec:	4180      	sbcs	r0, r0
 80013ee:	2501      	movs	r5, #1
 80013f0:	1ac9      	subs	r1, r1, r3
 80013f2:	4240      	negs	r0, r0
 80013f4:	1a09      	subs	r1, r1, r0
 80013f6:	020b      	lsls	r3, r1, #8
 80013f8:	d400      	bmi.n	80013fc <__aeabi_dsub+0x80>
 80013fa:	e147      	b.n	800168c <__aeabi_dsub+0x310>
 80013fc:	0249      	lsls	r1, r1, #9
 80013fe:	0a4b      	lsrs	r3, r1, #9
 8001400:	4698      	mov	r8, r3
 8001402:	4643      	mov	r3, r8
 8001404:	2b00      	cmp	r3, #0
 8001406:	d100      	bne.n	800140a <__aeabi_dsub+0x8e>
 8001408:	e189      	b.n	800171e <__aeabi_dsub+0x3a2>
 800140a:	4640      	mov	r0, r8
 800140c:	f000 fbde 	bl	8001bcc <__clzsi2>
 8001410:	0003      	movs	r3, r0
 8001412:	3b08      	subs	r3, #8
 8001414:	2b1f      	cmp	r3, #31
 8001416:	dd00      	ble.n	800141a <__aeabi_dsub+0x9e>
 8001418:	e17c      	b.n	8001714 <__aeabi_dsub+0x398>
 800141a:	2220      	movs	r2, #32
 800141c:	0030      	movs	r0, r6
 800141e:	1ad2      	subs	r2, r2, r3
 8001420:	4641      	mov	r1, r8
 8001422:	40d0      	lsrs	r0, r2
 8001424:	4099      	lsls	r1, r3
 8001426:	0002      	movs	r2, r0
 8001428:	409e      	lsls	r6, r3
 800142a:	430a      	orrs	r2, r1
 800142c:	429d      	cmp	r5, r3
 800142e:	dd00      	ble.n	8001432 <__aeabi_dsub+0xb6>
 8001430:	e16a      	b.n	8001708 <__aeabi_dsub+0x38c>
 8001432:	1b5d      	subs	r5, r3, r5
 8001434:	1c6b      	adds	r3, r5, #1
 8001436:	2b1f      	cmp	r3, #31
 8001438:	dd00      	ble.n	800143c <__aeabi_dsub+0xc0>
 800143a:	e194      	b.n	8001766 <__aeabi_dsub+0x3ea>
 800143c:	2120      	movs	r1, #32
 800143e:	0010      	movs	r0, r2
 8001440:	0035      	movs	r5, r6
 8001442:	1ac9      	subs	r1, r1, r3
 8001444:	408e      	lsls	r6, r1
 8001446:	40da      	lsrs	r2, r3
 8001448:	4088      	lsls	r0, r1
 800144a:	40dd      	lsrs	r5, r3
 800144c:	1e71      	subs	r1, r6, #1
 800144e:	418e      	sbcs	r6, r1
 8001450:	0011      	movs	r1, r2
 8001452:	2207      	movs	r2, #7
 8001454:	4328      	orrs	r0, r5
 8001456:	2500      	movs	r5, #0
 8001458:	4306      	orrs	r6, r0
 800145a:	4032      	ands	r2, r6
 800145c:	2a00      	cmp	r2, #0
 800145e:	d009      	beq.n	8001474 <__aeabi_dsub+0xf8>
 8001460:	230f      	movs	r3, #15
 8001462:	4033      	ands	r3, r6
 8001464:	2b04      	cmp	r3, #4
 8001466:	d005      	beq.n	8001474 <__aeabi_dsub+0xf8>
 8001468:	1d33      	adds	r3, r6, #4
 800146a:	42b3      	cmp	r3, r6
 800146c:	41b6      	sbcs	r6, r6
 800146e:	4276      	negs	r6, r6
 8001470:	1989      	adds	r1, r1, r6
 8001472:	001e      	movs	r6, r3
 8001474:	020b      	lsls	r3, r1, #8
 8001476:	d400      	bmi.n	800147a <__aeabi_dsub+0xfe>
 8001478:	e23d      	b.n	80018f6 <__aeabi_dsub+0x57a>
 800147a:	1c6a      	adds	r2, r5, #1
 800147c:	4b91      	ldr	r3, [pc, #580]	; (80016c4 <__aeabi_dsub+0x348>)
 800147e:	0555      	lsls	r5, r2, #21
 8001480:	0d6d      	lsrs	r5, r5, #21
 8001482:	429a      	cmp	r2, r3
 8001484:	d100      	bne.n	8001488 <__aeabi_dsub+0x10c>
 8001486:	e119      	b.n	80016bc <__aeabi_dsub+0x340>
 8001488:	4a8f      	ldr	r2, [pc, #572]	; (80016c8 <__aeabi_dsub+0x34c>)
 800148a:	08f6      	lsrs	r6, r6, #3
 800148c:	400a      	ands	r2, r1
 800148e:	0757      	lsls	r7, r2, #29
 8001490:	0252      	lsls	r2, r2, #9
 8001492:	4337      	orrs	r7, r6
 8001494:	0b12      	lsrs	r2, r2, #12
 8001496:	e09b      	b.n	80015d0 <__aeabi_dsub+0x254>
 8001498:	2e00      	cmp	r6, #0
 800149a:	d000      	beq.n	800149e <__aeabi_dsub+0x122>
 800149c:	e0c5      	b.n	800162a <__aeabi_dsub+0x2ae>
 800149e:	1c6e      	adds	r6, r5, #1
 80014a0:	0576      	lsls	r6, r6, #21
 80014a2:	0d76      	lsrs	r6, r6, #21
 80014a4:	2e01      	cmp	r6, #1
 80014a6:	dc00      	bgt.n	80014aa <__aeabi_dsub+0x12e>
 80014a8:	e148      	b.n	800173c <__aeabi_dsub+0x3c0>
 80014aa:	4667      	mov	r7, ip
 80014ac:	1a86      	subs	r6, r0, r2
 80014ae:	1bcb      	subs	r3, r1, r7
 80014b0:	42b0      	cmp	r0, r6
 80014b2:	41bf      	sbcs	r7, r7
 80014b4:	427f      	negs	r7, r7
 80014b6:	46b8      	mov	r8, r7
 80014b8:	001f      	movs	r7, r3
 80014ba:	4643      	mov	r3, r8
 80014bc:	1aff      	subs	r7, r7, r3
 80014be:	003b      	movs	r3, r7
 80014c0:	46b8      	mov	r8, r7
 80014c2:	021b      	lsls	r3, r3, #8
 80014c4:	d500      	bpl.n	80014c8 <__aeabi_dsub+0x14c>
 80014c6:	e15f      	b.n	8001788 <__aeabi_dsub+0x40c>
 80014c8:	4337      	orrs	r7, r6
 80014ca:	d19a      	bne.n	8001402 <__aeabi_dsub+0x86>
 80014cc:	2200      	movs	r2, #0
 80014ce:	2400      	movs	r4, #0
 80014d0:	2500      	movs	r5, #0
 80014d2:	e079      	b.n	80015c8 <__aeabi_dsub+0x24c>
 80014d4:	2e00      	cmp	r6, #0
 80014d6:	dc00      	bgt.n	80014da <__aeabi_dsub+0x15e>
 80014d8:	e0fa      	b.n	80016d0 <__aeabi_dsub+0x354>
 80014da:	2f00      	cmp	r7, #0
 80014dc:	d100      	bne.n	80014e0 <__aeabi_dsub+0x164>
 80014de:	e08d      	b.n	80015fc <__aeabi_dsub+0x280>
 80014e0:	4b78      	ldr	r3, [pc, #480]	; (80016c4 <__aeabi_dsub+0x348>)
 80014e2:	429d      	cmp	r5, r3
 80014e4:	d067      	beq.n	80015b6 <__aeabi_dsub+0x23a>
 80014e6:	2380      	movs	r3, #128	; 0x80
 80014e8:	4667      	mov	r7, ip
 80014ea:	041b      	lsls	r3, r3, #16
 80014ec:	431f      	orrs	r7, r3
 80014ee:	46bc      	mov	ip, r7
 80014f0:	2e38      	cmp	r6, #56	; 0x38
 80014f2:	dc00      	bgt.n	80014f6 <__aeabi_dsub+0x17a>
 80014f4:	e152      	b.n	800179c <__aeabi_dsub+0x420>
 80014f6:	4663      	mov	r3, ip
 80014f8:	4313      	orrs	r3, r2
 80014fa:	1e5a      	subs	r2, r3, #1
 80014fc:	4193      	sbcs	r3, r2
 80014fe:	181e      	adds	r6, r3, r0
 8001500:	4286      	cmp	r6, r0
 8001502:	4180      	sbcs	r0, r0
 8001504:	4240      	negs	r0, r0
 8001506:	1809      	adds	r1, r1, r0
 8001508:	020b      	lsls	r3, r1, #8
 800150a:	d400      	bmi.n	800150e <__aeabi_dsub+0x192>
 800150c:	e0be      	b.n	800168c <__aeabi_dsub+0x310>
 800150e:	4b6d      	ldr	r3, [pc, #436]	; (80016c4 <__aeabi_dsub+0x348>)
 8001510:	3501      	adds	r5, #1
 8001512:	429d      	cmp	r5, r3
 8001514:	d100      	bne.n	8001518 <__aeabi_dsub+0x19c>
 8001516:	e0d2      	b.n	80016be <__aeabi_dsub+0x342>
 8001518:	4a6b      	ldr	r2, [pc, #428]	; (80016c8 <__aeabi_dsub+0x34c>)
 800151a:	0873      	lsrs	r3, r6, #1
 800151c:	400a      	ands	r2, r1
 800151e:	2101      	movs	r1, #1
 8001520:	400e      	ands	r6, r1
 8001522:	431e      	orrs	r6, r3
 8001524:	0851      	lsrs	r1, r2, #1
 8001526:	07d3      	lsls	r3, r2, #31
 8001528:	2207      	movs	r2, #7
 800152a:	431e      	orrs	r6, r3
 800152c:	4032      	ands	r2, r6
 800152e:	e795      	b.n	800145c <__aeabi_dsub+0xe0>
 8001530:	001e      	movs	r6, r3
 8001532:	4316      	orrs	r6, r2
 8001534:	d000      	beq.n	8001538 <__aeabi_dsub+0x1bc>
 8001536:	e745      	b.n	80013c4 <__aeabi_dsub+0x48>
 8001538:	e740      	b.n	80013bc <__aeabi_dsub+0x40>
 800153a:	4b62      	ldr	r3, [pc, #392]	; (80016c4 <__aeabi_dsub+0x348>)
 800153c:	429d      	cmp	r5, r3
 800153e:	d03a      	beq.n	80015b6 <__aeabi_dsub+0x23a>
 8001540:	2380      	movs	r3, #128	; 0x80
 8001542:	4667      	mov	r7, ip
 8001544:	041b      	lsls	r3, r3, #16
 8001546:	431f      	orrs	r7, r3
 8001548:	46bc      	mov	ip, r7
 800154a:	2e38      	cmp	r6, #56	; 0x38
 800154c:	dd00      	ble.n	8001550 <__aeabi_dsub+0x1d4>
 800154e:	e0eb      	b.n	8001728 <__aeabi_dsub+0x3ac>
 8001550:	2e1f      	cmp	r6, #31
 8001552:	dc00      	bgt.n	8001556 <__aeabi_dsub+0x1da>
 8001554:	e13a      	b.n	80017cc <__aeabi_dsub+0x450>
 8001556:	0033      	movs	r3, r6
 8001558:	4667      	mov	r7, ip
 800155a:	3b20      	subs	r3, #32
 800155c:	40df      	lsrs	r7, r3
 800155e:	003b      	movs	r3, r7
 8001560:	2e20      	cmp	r6, #32
 8001562:	d005      	beq.n	8001570 <__aeabi_dsub+0x1f4>
 8001564:	2740      	movs	r7, #64	; 0x40
 8001566:	1bbf      	subs	r7, r7, r6
 8001568:	4666      	mov	r6, ip
 800156a:	40be      	lsls	r6, r7
 800156c:	4332      	orrs	r2, r6
 800156e:	4690      	mov	r8, r2
 8001570:	4646      	mov	r6, r8
 8001572:	1e72      	subs	r2, r6, #1
 8001574:	4196      	sbcs	r6, r2
 8001576:	4333      	orrs	r3, r6
 8001578:	e0da      	b.n	8001730 <__aeabi_dsub+0x3b4>
 800157a:	2b00      	cmp	r3, #0
 800157c:	d100      	bne.n	8001580 <__aeabi_dsub+0x204>
 800157e:	e214      	b.n	80019aa <__aeabi_dsub+0x62e>
 8001580:	4663      	mov	r3, ip
 8001582:	4313      	orrs	r3, r2
 8001584:	d100      	bne.n	8001588 <__aeabi_dsub+0x20c>
 8001586:	e168      	b.n	800185a <__aeabi_dsub+0x4de>
 8001588:	2380      	movs	r3, #128	; 0x80
 800158a:	074e      	lsls	r6, r1, #29
 800158c:	08c0      	lsrs	r0, r0, #3
 800158e:	08c9      	lsrs	r1, r1, #3
 8001590:	031b      	lsls	r3, r3, #12
 8001592:	4306      	orrs	r6, r0
 8001594:	4219      	tst	r1, r3
 8001596:	d008      	beq.n	80015aa <__aeabi_dsub+0x22e>
 8001598:	4660      	mov	r0, ip
 800159a:	08c0      	lsrs	r0, r0, #3
 800159c:	4218      	tst	r0, r3
 800159e:	d104      	bne.n	80015aa <__aeabi_dsub+0x22e>
 80015a0:	4663      	mov	r3, ip
 80015a2:	0001      	movs	r1, r0
 80015a4:	08d2      	lsrs	r2, r2, #3
 80015a6:	075e      	lsls	r6, r3, #29
 80015a8:	4316      	orrs	r6, r2
 80015aa:	00f3      	lsls	r3, r6, #3
 80015ac:	4699      	mov	r9, r3
 80015ae:	00c9      	lsls	r1, r1, #3
 80015b0:	0f72      	lsrs	r2, r6, #29
 80015b2:	4d44      	ldr	r5, [pc, #272]	; (80016c4 <__aeabi_dsub+0x348>)
 80015b4:	4311      	orrs	r1, r2
 80015b6:	464b      	mov	r3, r9
 80015b8:	08de      	lsrs	r6, r3, #3
 80015ba:	4b42      	ldr	r3, [pc, #264]	; (80016c4 <__aeabi_dsub+0x348>)
 80015bc:	074f      	lsls	r7, r1, #29
 80015be:	4337      	orrs	r7, r6
 80015c0:	08ca      	lsrs	r2, r1, #3
 80015c2:	429d      	cmp	r5, r3
 80015c4:	d100      	bne.n	80015c8 <__aeabi_dsub+0x24c>
 80015c6:	e06e      	b.n	80016a6 <__aeabi_dsub+0x32a>
 80015c8:	0312      	lsls	r2, r2, #12
 80015ca:	056d      	lsls	r5, r5, #21
 80015cc:	0b12      	lsrs	r2, r2, #12
 80015ce:	0d6d      	lsrs	r5, r5, #21
 80015d0:	2100      	movs	r1, #0
 80015d2:	0312      	lsls	r2, r2, #12
 80015d4:	0b13      	lsrs	r3, r2, #12
 80015d6:	0d0a      	lsrs	r2, r1, #20
 80015d8:	0512      	lsls	r2, r2, #20
 80015da:	431a      	orrs	r2, r3
 80015dc:	4b3b      	ldr	r3, [pc, #236]	; (80016cc <__aeabi_dsub+0x350>)
 80015de:	052d      	lsls	r5, r5, #20
 80015e0:	4013      	ands	r3, r2
 80015e2:	432b      	orrs	r3, r5
 80015e4:	005b      	lsls	r3, r3, #1
 80015e6:	07e4      	lsls	r4, r4, #31
 80015e8:	085b      	lsrs	r3, r3, #1
 80015ea:	4323      	orrs	r3, r4
 80015ec:	0038      	movs	r0, r7
 80015ee:	0019      	movs	r1, r3
 80015f0:	bc3c      	pop	{r2, r3, r4, r5}
 80015f2:	4690      	mov	r8, r2
 80015f4:	4699      	mov	r9, r3
 80015f6:	46a2      	mov	sl, r4
 80015f8:	46ab      	mov	fp, r5
 80015fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80015fc:	4663      	mov	r3, ip
 80015fe:	4313      	orrs	r3, r2
 8001600:	d011      	beq.n	8001626 <__aeabi_dsub+0x2aa>
 8001602:	1e73      	subs	r3, r6, #1
 8001604:	2b00      	cmp	r3, #0
 8001606:	d000      	beq.n	800160a <__aeabi_dsub+0x28e>
 8001608:	e107      	b.n	800181a <__aeabi_dsub+0x49e>
 800160a:	1886      	adds	r6, r0, r2
 800160c:	4286      	cmp	r6, r0
 800160e:	4180      	sbcs	r0, r0
 8001610:	4461      	add	r1, ip
 8001612:	4240      	negs	r0, r0
 8001614:	1809      	adds	r1, r1, r0
 8001616:	2501      	movs	r5, #1
 8001618:	020b      	lsls	r3, r1, #8
 800161a:	d537      	bpl.n	800168c <__aeabi_dsub+0x310>
 800161c:	2502      	movs	r5, #2
 800161e:	e77b      	b.n	8001518 <__aeabi_dsub+0x19c>
 8001620:	003e      	movs	r6, r7
 8001622:	4661      	mov	r1, ip
 8001624:	4691      	mov	r9, r2
 8001626:	0035      	movs	r5, r6
 8001628:	e7c5      	b.n	80015b6 <__aeabi_dsub+0x23a>
 800162a:	465c      	mov	r4, fp
 800162c:	2d00      	cmp	r5, #0
 800162e:	d000      	beq.n	8001632 <__aeabi_dsub+0x2b6>
 8001630:	e0e1      	b.n	80017f6 <__aeabi_dsub+0x47a>
 8001632:	000b      	movs	r3, r1
 8001634:	4303      	orrs	r3, r0
 8001636:	d0f3      	beq.n	8001620 <__aeabi_dsub+0x2a4>
 8001638:	1c73      	adds	r3, r6, #1
 800163a:	d100      	bne.n	800163e <__aeabi_dsub+0x2c2>
 800163c:	e1ac      	b.n	8001998 <__aeabi_dsub+0x61c>
 800163e:	4b21      	ldr	r3, [pc, #132]	; (80016c4 <__aeabi_dsub+0x348>)
 8001640:	429f      	cmp	r7, r3
 8001642:	d100      	bne.n	8001646 <__aeabi_dsub+0x2ca>
 8001644:	e13a      	b.n	80018bc <__aeabi_dsub+0x540>
 8001646:	43f3      	mvns	r3, r6
 8001648:	2b38      	cmp	r3, #56	; 0x38
 800164a:	dd00      	ble.n	800164e <__aeabi_dsub+0x2d2>
 800164c:	e16f      	b.n	800192e <__aeabi_dsub+0x5b2>
 800164e:	2b1f      	cmp	r3, #31
 8001650:	dd00      	ble.n	8001654 <__aeabi_dsub+0x2d8>
 8001652:	e18c      	b.n	800196e <__aeabi_dsub+0x5f2>
 8001654:	2520      	movs	r5, #32
 8001656:	000e      	movs	r6, r1
 8001658:	1aed      	subs	r5, r5, r3
 800165a:	40ae      	lsls	r6, r5
 800165c:	46b0      	mov	r8, r6
 800165e:	0006      	movs	r6, r0
 8001660:	46aa      	mov	sl, r5
 8001662:	40de      	lsrs	r6, r3
 8001664:	4645      	mov	r5, r8
 8001666:	4335      	orrs	r5, r6
 8001668:	002e      	movs	r6, r5
 800166a:	4655      	mov	r5, sl
 800166c:	40d9      	lsrs	r1, r3
 800166e:	40a8      	lsls	r0, r5
 8001670:	4663      	mov	r3, ip
 8001672:	1e45      	subs	r5, r0, #1
 8001674:	41a8      	sbcs	r0, r5
 8001676:	1a5b      	subs	r3, r3, r1
 8001678:	469c      	mov	ip, r3
 800167a:	4330      	orrs	r0, r6
 800167c:	1a16      	subs	r6, r2, r0
 800167e:	42b2      	cmp	r2, r6
 8001680:	4192      	sbcs	r2, r2
 8001682:	4663      	mov	r3, ip
 8001684:	4252      	negs	r2, r2
 8001686:	1a99      	subs	r1, r3, r2
 8001688:	003d      	movs	r5, r7
 800168a:	e6b4      	b.n	80013f6 <__aeabi_dsub+0x7a>
 800168c:	2207      	movs	r2, #7
 800168e:	4032      	ands	r2, r6
 8001690:	2a00      	cmp	r2, #0
 8001692:	d000      	beq.n	8001696 <__aeabi_dsub+0x31a>
 8001694:	e6e4      	b.n	8001460 <__aeabi_dsub+0xe4>
 8001696:	4b0b      	ldr	r3, [pc, #44]	; (80016c4 <__aeabi_dsub+0x348>)
 8001698:	08f6      	lsrs	r6, r6, #3
 800169a:	074f      	lsls	r7, r1, #29
 800169c:	4337      	orrs	r7, r6
 800169e:	08ca      	lsrs	r2, r1, #3
 80016a0:	429d      	cmp	r5, r3
 80016a2:	d000      	beq.n	80016a6 <__aeabi_dsub+0x32a>
 80016a4:	e790      	b.n	80015c8 <__aeabi_dsub+0x24c>
 80016a6:	003b      	movs	r3, r7
 80016a8:	4313      	orrs	r3, r2
 80016aa:	d100      	bne.n	80016ae <__aeabi_dsub+0x332>
 80016ac:	e1a6      	b.n	80019fc <__aeabi_dsub+0x680>
 80016ae:	2380      	movs	r3, #128	; 0x80
 80016b0:	031b      	lsls	r3, r3, #12
 80016b2:	431a      	orrs	r2, r3
 80016b4:	0312      	lsls	r2, r2, #12
 80016b6:	0b12      	lsrs	r2, r2, #12
 80016b8:	4d02      	ldr	r5, [pc, #8]	; (80016c4 <__aeabi_dsub+0x348>)
 80016ba:	e789      	b.n	80015d0 <__aeabi_dsub+0x254>
 80016bc:	0015      	movs	r5, r2
 80016be:	2200      	movs	r2, #0
 80016c0:	2700      	movs	r7, #0
 80016c2:	e785      	b.n	80015d0 <__aeabi_dsub+0x254>
 80016c4:	000007ff 	.word	0x000007ff
 80016c8:	ff7fffff 	.word	0xff7fffff
 80016cc:	800fffff 	.word	0x800fffff
 80016d0:	2e00      	cmp	r6, #0
 80016d2:	d000      	beq.n	80016d6 <__aeabi_dsub+0x35a>
 80016d4:	e0c7      	b.n	8001866 <__aeabi_dsub+0x4ea>
 80016d6:	1c6b      	adds	r3, r5, #1
 80016d8:	055e      	lsls	r6, r3, #21
 80016da:	0d76      	lsrs	r6, r6, #21
 80016dc:	2e01      	cmp	r6, #1
 80016de:	dc00      	bgt.n	80016e2 <__aeabi_dsub+0x366>
 80016e0:	e0f0      	b.n	80018c4 <__aeabi_dsub+0x548>
 80016e2:	4dc8      	ldr	r5, [pc, #800]	; (8001a04 <__aeabi_dsub+0x688>)
 80016e4:	42ab      	cmp	r3, r5
 80016e6:	d100      	bne.n	80016ea <__aeabi_dsub+0x36e>
 80016e8:	e0b9      	b.n	800185e <__aeabi_dsub+0x4e2>
 80016ea:	1885      	adds	r5, r0, r2
 80016ec:	000a      	movs	r2, r1
 80016ee:	4285      	cmp	r5, r0
 80016f0:	4189      	sbcs	r1, r1
 80016f2:	4462      	add	r2, ip
 80016f4:	4249      	negs	r1, r1
 80016f6:	1851      	adds	r1, r2, r1
 80016f8:	2207      	movs	r2, #7
 80016fa:	07ce      	lsls	r6, r1, #31
 80016fc:	086d      	lsrs	r5, r5, #1
 80016fe:	432e      	orrs	r6, r5
 8001700:	0849      	lsrs	r1, r1, #1
 8001702:	4032      	ands	r2, r6
 8001704:	001d      	movs	r5, r3
 8001706:	e6a9      	b.n	800145c <__aeabi_dsub+0xe0>
 8001708:	49bf      	ldr	r1, [pc, #764]	; (8001a08 <__aeabi_dsub+0x68c>)
 800170a:	1aed      	subs	r5, r5, r3
 800170c:	4011      	ands	r1, r2
 800170e:	2207      	movs	r2, #7
 8001710:	4032      	ands	r2, r6
 8001712:	e6a3      	b.n	800145c <__aeabi_dsub+0xe0>
 8001714:	0032      	movs	r2, r6
 8001716:	3828      	subs	r0, #40	; 0x28
 8001718:	4082      	lsls	r2, r0
 800171a:	2600      	movs	r6, #0
 800171c:	e686      	b.n	800142c <__aeabi_dsub+0xb0>
 800171e:	0030      	movs	r0, r6
 8001720:	f000 fa54 	bl	8001bcc <__clzsi2>
 8001724:	3020      	adds	r0, #32
 8001726:	e673      	b.n	8001410 <__aeabi_dsub+0x94>
 8001728:	4663      	mov	r3, ip
 800172a:	4313      	orrs	r3, r2
 800172c:	1e5a      	subs	r2, r3, #1
 800172e:	4193      	sbcs	r3, r2
 8001730:	1ac6      	subs	r6, r0, r3
 8001732:	42b0      	cmp	r0, r6
 8001734:	4180      	sbcs	r0, r0
 8001736:	4240      	negs	r0, r0
 8001738:	1a09      	subs	r1, r1, r0
 800173a:	e65c      	b.n	80013f6 <__aeabi_dsub+0x7a>
 800173c:	000e      	movs	r6, r1
 800173e:	4667      	mov	r7, ip
 8001740:	4306      	orrs	r6, r0
 8001742:	4317      	orrs	r7, r2
 8001744:	2d00      	cmp	r5, #0
 8001746:	d15e      	bne.n	8001806 <__aeabi_dsub+0x48a>
 8001748:	2e00      	cmp	r6, #0
 800174a:	d000      	beq.n	800174e <__aeabi_dsub+0x3d2>
 800174c:	e0f3      	b.n	8001936 <__aeabi_dsub+0x5ba>
 800174e:	2f00      	cmp	r7, #0
 8001750:	d100      	bne.n	8001754 <__aeabi_dsub+0x3d8>
 8001752:	e11e      	b.n	8001992 <__aeabi_dsub+0x616>
 8001754:	465c      	mov	r4, fp
 8001756:	4661      	mov	r1, ip
 8001758:	4691      	mov	r9, r2
 800175a:	e72c      	b.n	80015b6 <__aeabi_dsub+0x23a>
 800175c:	4fa9      	ldr	r7, [pc, #676]	; (8001a04 <__aeabi_dsub+0x688>)
 800175e:	42be      	cmp	r6, r7
 8001760:	d07b      	beq.n	800185a <__aeabi_dsub+0x4de>
 8001762:	001e      	movs	r6, r3
 8001764:	e6f1      	b.n	800154a <__aeabi_dsub+0x1ce>
 8001766:	0010      	movs	r0, r2
 8001768:	3d1f      	subs	r5, #31
 800176a:	40e8      	lsrs	r0, r5
 800176c:	2b20      	cmp	r3, #32
 800176e:	d003      	beq.n	8001778 <__aeabi_dsub+0x3fc>
 8001770:	2140      	movs	r1, #64	; 0x40
 8001772:	1acb      	subs	r3, r1, r3
 8001774:	409a      	lsls	r2, r3
 8001776:	4316      	orrs	r6, r2
 8001778:	1e73      	subs	r3, r6, #1
 800177a:	419e      	sbcs	r6, r3
 800177c:	2207      	movs	r2, #7
 800177e:	4306      	orrs	r6, r0
 8001780:	4032      	ands	r2, r6
 8001782:	2100      	movs	r1, #0
 8001784:	2500      	movs	r5, #0
 8001786:	e783      	b.n	8001690 <__aeabi_dsub+0x314>
 8001788:	1a16      	subs	r6, r2, r0
 800178a:	4663      	mov	r3, ip
 800178c:	42b2      	cmp	r2, r6
 800178e:	4180      	sbcs	r0, r0
 8001790:	1a59      	subs	r1, r3, r1
 8001792:	4240      	negs	r0, r0
 8001794:	1a0b      	subs	r3, r1, r0
 8001796:	4698      	mov	r8, r3
 8001798:	465c      	mov	r4, fp
 800179a:	e632      	b.n	8001402 <__aeabi_dsub+0x86>
 800179c:	2e1f      	cmp	r6, #31
 800179e:	dd00      	ble.n	80017a2 <__aeabi_dsub+0x426>
 80017a0:	e0ab      	b.n	80018fa <__aeabi_dsub+0x57e>
 80017a2:	2720      	movs	r7, #32
 80017a4:	1bbb      	subs	r3, r7, r6
 80017a6:	469a      	mov	sl, r3
 80017a8:	4663      	mov	r3, ip
 80017aa:	4657      	mov	r7, sl
 80017ac:	40bb      	lsls	r3, r7
 80017ae:	4699      	mov	r9, r3
 80017b0:	0013      	movs	r3, r2
 80017b2:	464f      	mov	r7, r9
 80017b4:	40f3      	lsrs	r3, r6
 80017b6:	431f      	orrs	r7, r3
 80017b8:	003b      	movs	r3, r7
 80017ba:	4657      	mov	r7, sl
 80017bc:	40ba      	lsls	r2, r7
 80017be:	1e57      	subs	r7, r2, #1
 80017c0:	41ba      	sbcs	r2, r7
 80017c2:	4313      	orrs	r3, r2
 80017c4:	4662      	mov	r2, ip
 80017c6:	40f2      	lsrs	r2, r6
 80017c8:	1889      	adds	r1, r1, r2
 80017ca:	e698      	b.n	80014fe <__aeabi_dsub+0x182>
 80017cc:	2720      	movs	r7, #32
 80017ce:	1bbb      	subs	r3, r7, r6
 80017d0:	469a      	mov	sl, r3
 80017d2:	4663      	mov	r3, ip
 80017d4:	4657      	mov	r7, sl
 80017d6:	40bb      	lsls	r3, r7
 80017d8:	4699      	mov	r9, r3
 80017da:	0013      	movs	r3, r2
 80017dc:	464f      	mov	r7, r9
 80017de:	40f3      	lsrs	r3, r6
 80017e0:	431f      	orrs	r7, r3
 80017e2:	003b      	movs	r3, r7
 80017e4:	4657      	mov	r7, sl
 80017e6:	40ba      	lsls	r2, r7
 80017e8:	1e57      	subs	r7, r2, #1
 80017ea:	41ba      	sbcs	r2, r7
 80017ec:	4313      	orrs	r3, r2
 80017ee:	4662      	mov	r2, ip
 80017f0:	40f2      	lsrs	r2, r6
 80017f2:	1a89      	subs	r1, r1, r2
 80017f4:	e79c      	b.n	8001730 <__aeabi_dsub+0x3b4>
 80017f6:	4b83      	ldr	r3, [pc, #524]	; (8001a04 <__aeabi_dsub+0x688>)
 80017f8:	429f      	cmp	r7, r3
 80017fa:	d05f      	beq.n	80018bc <__aeabi_dsub+0x540>
 80017fc:	2580      	movs	r5, #128	; 0x80
 80017fe:	042d      	lsls	r5, r5, #16
 8001800:	4273      	negs	r3, r6
 8001802:	4329      	orrs	r1, r5
 8001804:	e720      	b.n	8001648 <__aeabi_dsub+0x2cc>
 8001806:	2e00      	cmp	r6, #0
 8001808:	d10c      	bne.n	8001824 <__aeabi_dsub+0x4a8>
 800180a:	2f00      	cmp	r7, #0
 800180c:	d100      	bne.n	8001810 <__aeabi_dsub+0x494>
 800180e:	e0d0      	b.n	80019b2 <__aeabi_dsub+0x636>
 8001810:	465c      	mov	r4, fp
 8001812:	4661      	mov	r1, ip
 8001814:	4691      	mov	r9, r2
 8001816:	4d7b      	ldr	r5, [pc, #492]	; (8001a04 <__aeabi_dsub+0x688>)
 8001818:	e6cd      	b.n	80015b6 <__aeabi_dsub+0x23a>
 800181a:	4f7a      	ldr	r7, [pc, #488]	; (8001a04 <__aeabi_dsub+0x688>)
 800181c:	42be      	cmp	r6, r7
 800181e:	d01c      	beq.n	800185a <__aeabi_dsub+0x4de>
 8001820:	001e      	movs	r6, r3
 8001822:	e665      	b.n	80014f0 <__aeabi_dsub+0x174>
 8001824:	2f00      	cmp	r7, #0
 8001826:	d018      	beq.n	800185a <__aeabi_dsub+0x4de>
 8001828:	08c0      	lsrs	r0, r0, #3
 800182a:	074e      	lsls	r6, r1, #29
 800182c:	4306      	orrs	r6, r0
 800182e:	2080      	movs	r0, #128	; 0x80
 8001830:	08c9      	lsrs	r1, r1, #3
 8001832:	0300      	lsls	r0, r0, #12
 8001834:	4201      	tst	r1, r0
 8001836:	d008      	beq.n	800184a <__aeabi_dsub+0x4ce>
 8001838:	4663      	mov	r3, ip
 800183a:	08dc      	lsrs	r4, r3, #3
 800183c:	4204      	tst	r4, r0
 800183e:	d104      	bne.n	800184a <__aeabi_dsub+0x4ce>
 8001840:	0021      	movs	r1, r4
 8001842:	46da      	mov	sl, fp
 8001844:	08d2      	lsrs	r2, r2, #3
 8001846:	075e      	lsls	r6, r3, #29
 8001848:	4316      	orrs	r6, r2
 800184a:	00f3      	lsls	r3, r6, #3
 800184c:	4699      	mov	r9, r3
 800184e:	2401      	movs	r4, #1
 8001850:	4653      	mov	r3, sl
 8001852:	00c9      	lsls	r1, r1, #3
 8001854:	0f72      	lsrs	r2, r6, #29
 8001856:	4311      	orrs	r1, r2
 8001858:	401c      	ands	r4, r3
 800185a:	4d6a      	ldr	r5, [pc, #424]	; (8001a04 <__aeabi_dsub+0x688>)
 800185c:	e6ab      	b.n	80015b6 <__aeabi_dsub+0x23a>
 800185e:	001d      	movs	r5, r3
 8001860:	2200      	movs	r2, #0
 8001862:	2700      	movs	r7, #0
 8001864:	e6b4      	b.n	80015d0 <__aeabi_dsub+0x254>
 8001866:	2d00      	cmp	r5, #0
 8001868:	d159      	bne.n	800191e <__aeabi_dsub+0x5a2>
 800186a:	000b      	movs	r3, r1
 800186c:	4303      	orrs	r3, r0
 800186e:	d100      	bne.n	8001872 <__aeabi_dsub+0x4f6>
 8001870:	e6d6      	b.n	8001620 <__aeabi_dsub+0x2a4>
 8001872:	1c73      	adds	r3, r6, #1
 8001874:	d100      	bne.n	8001878 <__aeabi_dsub+0x4fc>
 8001876:	e0b2      	b.n	80019de <__aeabi_dsub+0x662>
 8001878:	4b62      	ldr	r3, [pc, #392]	; (8001a04 <__aeabi_dsub+0x688>)
 800187a:	429f      	cmp	r7, r3
 800187c:	d01e      	beq.n	80018bc <__aeabi_dsub+0x540>
 800187e:	43f3      	mvns	r3, r6
 8001880:	2b38      	cmp	r3, #56	; 0x38
 8001882:	dc6f      	bgt.n	8001964 <__aeabi_dsub+0x5e8>
 8001884:	2b1f      	cmp	r3, #31
 8001886:	dd00      	ble.n	800188a <__aeabi_dsub+0x50e>
 8001888:	e097      	b.n	80019ba <__aeabi_dsub+0x63e>
 800188a:	2520      	movs	r5, #32
 800188c:	000e      	movs	r6, r1
 800188e:	1aed      	subs	r5, r5, r3
 8001890:	40ae      	lsls	r6, r5
 8001892:	46b0      	mov	r8, r6
 8001894:	0006      	movs	r6, r0
 8001896:	46aa      	mov	sl, r5
 8001898:	40de      	lsrs	r6, r3
 800189a:	4645      	mov	r5, r8
 800189c:	4335      	orrs	r5, r6
 800189e:	002e      	movs	r6, r5
 80018a0:	4655      	mov	r5, sl
 80018a2:	40a8      	lsls	r0, r5
 80018a4:	40d9      	lsrs	r1, r3
 80018a6:	1e45      	subs	r5, r0, #1
 80018a8:	41a8      	sbcs	r0, r5
 80018aa:	448c      	add	ip, r1
 80018ac:	4306      	orrs	r6, r0
 80018ae:	18b6      	adds	r6, r6, r2
 80018b0:	4296      	cmp	r6, r2
 80018b2:	4192      	sbcs	r2, r2
 80018b4:	4251      	negs	r1, r2
 80018b6:	4461      	add	r1, ip
 80018b8:	003d      	movs	r5, r7
 80018ba:	e625      	b.n	8001508 <__aeabi_dsub+0x18c>
 80018bc:	003d      	movs	r5, r7
 80018be:	4661      	mov	r1, ip
 80018c0:	4691      	mov	r9, r2
 80018c2:	e678      	b.n	80015b6 <__aeabi_dsub+0x23a>
 80018c4:	000b      	movs	r3, r1
 80018c6:	4303      	orrs	r3, r0
 80018c8:	2d00      	cmp	r5, #0
 80018ca:	d000      	beq.n	80018ce <__aeabi_dsub+0x552>
 80018cc:	e655      	b.n	800157a <__aeabi_dsub+0x1fe>
 80018ce:	2b00      	cmp	r3, #0
 80018d0:	d0f5      	beq.n	80018be <__aeabi_dsub+0x542>
 80018d2:	4663      	mov	r3, ip
 80018d4:	4313      	orrs	r3, r2
 80018d6:	d100      	bne.n	80018da <__aeabi_dsub+0x55e>
 80018d8:	e66d      	b.n	80015b6 <__aeabi_dsub+0x23a>
 80018da:	1886      	adds	r6, r0, r2
 80018dc:	4286      	cmp	r6, r0
 80018de:	4180      	sbcs	r0, r0
 80018e0:	4461      	add	r1, ip
 80018e2:	4240      	negs	r0, r0
 80018e4:	1809      	adds	r1, r1, r0
 80018e6:	2200      	movs	r2, #0
 80018e8:	020b      	lsls	r3, r1, #8
 80018ea:	d400      	bmi.n	80018ee <__aeabi_dsub+0x572>
 80018ec:	e6d0      	b.n	8001690 <__aeabi_dsub+0x314>
 80018ee:	4b46      	ldr	r3, [pc, #280]	; (8001a08 <__aeabi_dsub+0x68c>)
 80018f0:	3501      	adds	r5, #1
 80018f2:	4019      	ands	r1, r3
 80018f4:	e5b2      	b.n	800145c <__aeabi_dsub+0xe0>
 80018f6:	46b1      	mov	r9, r6
 80018f8:	e65d      	b.n	80015b6 <__aeabi_dsub+0x23a>
 80018fa:	0033      	movs	r3, r6
 80018fc:	4667      	mov	r7, ip
 80018fe:	3b20      	subs	r3, #32
 8001900:	40df      	lsrs	r7, r3
 8001902:	003b      	movs	r3, r7
 8001904:	2e20      	cmp	r6, #32
 8001906:	d005      	beq.n	8001914 <__aeabi_dsub+0x598>
 8001908:	2740      	movs	r7, #64	; 0x40
 800190a:	1bbf      	subs	r7, r7, r6
 800190c:	4666      	mov	r6, ip
 800190e:	40be      	lsls	r6, r7
 8001910:	4332      	orrs	r2, r6
 8001912:	4690      	mov	r8, r2
 8001914:	4646      	mov	r6, r8
 8001916:	1e72      	subs	r2, r6, #1
 8001918:	4196      	sbcs	r6, r2
 800191a:	4333      	orrs	r3, r6
 800191c:	e5ef      	b.n	80014fe <__aeabi_dsub+0x182>
 800191e:	4b39      	ldr	r3, [pc, #228]	; (8001a04 <__aeabi_dsub+0x688>)
 8001920:	429f      	cmp	r7, r3
 8001922:	d0cb      	beq.n	80018bc <__aeabi_dsub+0x540>
 8001924:	2580      	movs	r5, #128	; 0x80
 8001926:	042d      	lsls	r5, r5, #16
 8001928:	4273      	negs	r3, r6
 800192a:	4329      	orrs	r1, r5
 800192c:	e7a8      	b.n	8001880 <__aeabi_dsub+0x504>
 800192e:	4308      	orrs	r0, r1
 8001930:	1e41      	subs	r1, r0, #1
 8001932:	4188      	sbcs	r0, r1
 8001934:	e6a2      	b.n	800167c <__aeabi_dsub+0x300>
 8001936:	2f00      	cmp	r7, #0
 8001938:	d100      	bne.n	800193c <__aeabi_dsub+0x5c0>
 800193a:	e63c      	b.n	80015b6 <__aeabi_dsub+0x23a>
 800193c:	4663      	mov	r3, ip
 800193e:	1a86      	subs	r6, r0, r2
 8001940:	1acf      	subs	r7, r1, r3
 8001942:	42b0      	cmp	r0, r6
 8001944:	419b      	sbcs	r3, r3
 8001946:	425b      	negs	r3, r3
 8001948:	1afb      	subs	r3, r7, r3
 800194a:	4698      	mov	r8, r3
 800194c:	021b      	lsls	r3, r3, #8
 800194e:	d54e      	bpl.n	80019ee <__aeabi_dsub+0x672>
 8001950:	1a16      	subs	r6, r2, r0
 8001952:	4663      	mov	r3, ip
 8001954:	42b2      	cmp	r2, r6
 8001956:	4192      	sbcs	r2, r2
 8001958:	1a59      	subs	r1, r3, r1
 800195a:	4252      	negs	r2, r2
 800195c:	1a89      	subs	r1, r1, r2
 800195e:	465c      	mov	r4, fp
 8001960:	2200      	movs	r2, #0
 8001962:	e57b      	b.n	800145c <__aeabi_dsub+0xe0>
 8001964:	4301      	orrs	r1, r0
 8001966:	000e      	movs	r6, r1
 8001968:	1e71      	subs	r1, r6, #1
 800196a:	418e      	sbcs	r6, r1
 800196c:	e79f      	b.n	80018ae <__aeabi_dsub+0x532>
 800196e:	001d      	movs	r5, r3
 8001970:	000e      	movs	r6, r1
 8001972:	3d20      	subs	r5, #32
 8001974:	40ee      	lsrs	r6, r5
 8001976:	46b0      	mov	r8, r6
 8001978:	2b20      	cmp	r3, #32
 800197a:	d004      	beq.n	8001986 <__aeabi_dsub+0x60a>
 800197c:	2540      	movs	r5, #64	; 0x40
 800197e:	1aeb      	subs	r3, r5, r3
 8001980:	4099      	lsls	r1, r3
 8001982:	4308      	orrs	r0, r1
 8001984:	4681      	mov	r9, r0
 8001986:	4648      	mov	r0, r9
 8001988:	4643      	mov	r3, r8
 800198a:	1e41      	subs	r1, r0, #1
 800198c:	4188      	sbcs	r0, r1
 800198e:	4318      	orrs	r0, r3
 8001990:	e674      	b.n	800167c <__aeabi_dsub+0x300>
 8001992:	2200      	movs	r2, #0
 8001994:	2400      	movs	r4, #0
 8001996:	e617      	b.n	80015c8 <__aeabi_dsub+0x24c>
 8001998:	1a16      	subs	r6, r2, r0
 800199a:	4663      	mov	r3, ip
 800199c:	42b2      	cmp	r2, r6
 800199e:	4192      	sbcs	r2, r2
 80019a0:	1a59      	subs	r1, r3, r1
 80019a2:	4252      	negs	r2, r2
 80019a4:	1a89      	subs	r1, r1, r2
 80019a6:	003d      	movs	r5, r7
 80019a8:	e525      	b.n	80013f6 <__aeabi_dsub+0x7a>
 80019aa:	4661      	mov	r1, ip
 80019ac:	4691      	mov	r9, r2
 80019ae:	4d15      	ldr	r5, [pc, #84]	; (8001a04 <__aeabi_dsub+0x688>)
 80019b0:	e601      	b.n	80015b6 <__aeabi_dsub+0x23a>
 80019b2:	2280      	movs	r2, #128	; 0x80
 80019b4:	2400      	movs	r4, #0
 80019b6:	0312      	lsls	r2, r2, #12
 80019b8:	e679      	b.n	80016ae <__aeabi_dsub+0x332>
 80019ba:	001d      	movs	r5, r3
 80019bc:	000e      	movs	r6, r1
 80019be:	3d20      	subs	r5, #32
 80019c0:	40ee      	lsrs	r6, r5
 80019c2:	46b0      	mov	r8, r6
 80019c4:	2b20      	cmp	r3, #32
 80019c6:	d004      	beq.n	80019d2 <__aeabi_dsub+0x656>
 80019c8:	2540      	movs	r5, #64	; 0x40
 80019ca:	1aeb      	subs	r3, r5, r3
 80019cc:	4099      	lsls	r1, r3
 80019ce:	4308      	orrs	r0, r1
 80019d0:	4681      	mov	r9, r0
 80019d2:	464e      	mov	r6, r9
 80019d4:	4643      	mov	r3, r8
 80019d6:	1e71      	subs	r1, r6, #1
 80019d8:	418e      	sbcs	r6, r1
 80019da:	431e      	orrs	r6, r3
 80019dc:	e767      	b.n	80018ae <__aeabi_dsub+0x532>
 80019de:	1886      	adds	r6, r0, r2
 80019e0:	4296      	cmp	r6, r2
 80019e2:	419b      	sbcs	r3, r3
 80019e4:	4461      	add	r1, ip
 80019e6:	425b      	negs	r3, r3
 80019e8:	18c9      	adds	r1, r1, r3
 80019ea:	003d      	movs	r5, r7
 80019ec:	e58c      	b.n	8001508 <__aeabi_dsub+0x18c>
 80019ee:	4647      	mov	r7, r8
 80019f0:	4337      	orrs	r7, r6
 80019f2:	d0ce      	beq.n	8001992 <__aeabi_dsub+0x616>
 80019f4:	2207      	movs	r2, #7
 80019f6:	4641      	mov	r1, r8
 80019f8:	4032      	ands	r2, r6
 80019fa:	e649      	b.n	8001690 <__aeabi_dsub+0x314>
 80019fc:	2700      	movs	r7, #0
 80019fe:	003a      	movs	r2, r7
 8001a00:	e5e6      	b.n	80015d0 <__aeabi_dsub+0x254>
 8001a02:	46c0      	nop			; (mov r8, r8)
 8001a04:	000007ff 	.word	0x000007ff
 8001a08:	ff7fffff 	.word	0xff7fffff

08001a0c <__aeabi_d2iz>:
 8001a0c:	b530      	push	{r4, r5, lr}
 8001a0e:	4d14      	ldr	r5, [pc, #80]	; (8001a60 <__aeabi_d2iz+0x54>)
 8001a10:	030a      	lsls	r2, r1, #12
 8001a12:	004b      	lsls	r3, r1, #1
 8001a14:	0b12      	lsrs	r2, r2, #12
 8001a16:	0d5b      	lsrs	r3, r3, #21
 8001a18:	0fc9      	lsrs	r1, r1, #31
 8001a1a:	2400      	movs	r4, #0
 8001a1c:	42ab      	cmp	r3, r5
 8001a1e:	dd11      	ble.n	8001a44 <__aeabi_d2iz+0x38>
 8001a20:	4c10      	ldr	r4, [pc, #64]	; (8001a64 <__aeabi_d2iz+0x58>)
 8001a22:	42a3      	cmp	r3, r4
 8001a24:	dc10      	bgt.n	8001a48 <__aeabi_d2iz+0x3c>
 8001a26:	2480      	movs	r4, #128	; 0x80
 8001a28:	0364      	lsls	r4, r4, #13
 8001a2a:	4322      	orrs	r2, r4
 8001a2c:	4c0e      	ldr	r4, [pc, #56]	; (8001a68 <__aeabi_d2iz+0x5c>)
 8001a2e:	1ae4      	subs	r4, r4, r3
 8001a30:	2c1f      	cmp	r4, #31
 8001a32:	dd0c      	ble.n	8001a4e <__aeabi_d2iz+0x42>
 8001a34:	480d      	ldr	r0, [pc, #52]	; (8001a6c <__aeabi_d2iz+0x60>)
 8001a36:	1ac3      	subs	r3, r0, r3
 8001a38:	40da      	lsrs	r2, r3
 8001a3a:	0013      	movs	r3, r2
 8001a3c:	425c      	negs	r4, r3
 8001a3e:	2900      	cmp	r1, #0
 8001a40:	d100      	bne.n	8001a44 <__aeabi_d2iz+0x38>
 8001a42:	001c      	movs	r4, r3
 8001a44:	0020      	movs	r0, r4
 8001a46:	bd30      	pop	{r4, r5, pc}
 8001a48:	4b09      	ldr	r3, [pc, #36]	; (8001a70 <__aeabi_d2iz+0x64>)
 8001a4a:	18cc      	adds	r4, r1, r3
 8001a4c:	e7fa      	b.n	8001a44 <__aeabi_d2iz+0x38>
 8001a4e:	4d09      	ldr	r5, [pc, #36]	; (8001a74 <__aeabi_d2iz+0x68>)
 8001a50:	40e0      	lsrs	r0, r4
 8001a52:	46ac      	mov	ip, r5
 8001a54:	4463      	add	r3, ip
 8001a56:	409a      	lsls	r2, r3
 8001a58:	0013      	movs	r3, r2
 8001a5a:	4303      	orrs	r3, r0
 8001a5c:	e7ee      	b.n	8001a3c <__aeabi_d2iz+0x30>
 8001a5e:	46c0      	nop			; (mov r8, r8)
 8001a60:	000003fe 	.word	0x000003fe
 8001a64:	0000041d 	.word	0x0000041d
 8001a68:	00000433 	.word	0x00000433
 8001a6c:	00000413 	.word	0x00000413
 8001a70:	7fffffff 	.word	0x7fffffff
 8001a74:	fffffbed 	.word	0xfffffbed

08001a78 <__aeabi_i2d>:
 8001a78:	b570      	push	{r4, r5, r6, lr}
 8001a7a:	2800      	cmp	r0, #0
 8001a7c:	d02d      	beq.n	8001ada <__aeabi_i2d+0x62>
 8001a7e:	17c3      	asrs	r3, r0, #31
 8001a80:	18c5      	adds	r5, r0, r3
 8001a82:	405d      	eors	r5, r3
 8001a84:	0fc4      	lsrs	r4, r0, #31
 8001a86:	0028      	movs	r0, r5
 8001a88:	f000 f8a0 	bl	8001bcc <__clzsi2>
 8001a8c:	4b15      	ldr	r3, [pc, #84]	; (8001ae4 <__aeabi_i2d+0x6c>)
 8001a8e:	1a1b      	subs	r3, r3, r0
 8001a90:	055b      	lsls	r3, r3, #21
 8001a92:	0d5b      	lsrs	r3, r3, #21
 8001a94:	280a      	cmp	r0, #10
 8001a96:	dd15      	ble.n	8001ac4 <__aeabi_i2d+0x4c>
 8001a98:	380b      	subs	r0, #11
 8001a9a:	4085      	lsls	r5, r0
 8001a9c:	2200      	movs	r2, #0
 8001a9e:	032d      	lsls	r5, r5, #12
 8001aa0:	0b2d      	lsrs	r5, r5, #12
 8001aa2:	2100      	movs	r1, #0
 8001aa4:	0010      	movs	r0, r2
 8001aa6:	032d      	lsls	r5, r5, #12
 8001aa8:	0d0a      	lsrs	r2, r1, #20
 8001aaa:	0b2d      	lsrs	r5, r5, #12
 8001aac:	0512      	lsls	r2, r2, #20
 8001aae:	432a      	orrs	r2, r5
 8001ab0:	4d0d      	ldr	r5, [pc, #52]	; (8001ae8 <__aeabi_i2d+0x70>)
 8001ab2:	051b      	lsls	r3, r3, #20
 8001ab4:	402a      	ands	r2, r5
 8001ab6:	4313      	orrs	r3, r2
 8001ab8:	005b      	lsls	r3, r3, #1
 8001aba:	07e4      	lsls	r4, r4, #31
 8001abc:	085b      	lsrs	r3, r3, #1
 8001abe:	4323      	orrs	r3, r4
 8001ac0:	0019      	movs	r1, r3
 8001ac2:	bd70      	pop	{r4, r5, r6, pc}
 8001ac4:	0002      	movs	r2, r0
 8001ac6:	0029      	movs	r1, r5
 8001ac8:	3215      	adds	r2, #21
 8001aca:	4091      	lsls	r1, r2
 8001acc:	000a      	movs	r2, r1
 8001ace:	210b      	movs	r1, #11
 8001ad0:	1a08      	subs	r0, r1, r0
 8001ad2:	40c5      	lsrs	r5, r0
 8001ad4:	032d      	lsls	r5, r5, #12
 8001ad6:	0b2d      	lsrs	r5, r5, #12
 8001ad8:	e7e3      	b.n	8001aa2 <__aeabi_i2d+0x2a>
 8001ada:	2400      	movs	r4, #0
 8001adc:	2300      	movs	r3, #0
 8001ade:	2500      	movs	r5, #0
 8001ae0:	2200      	movs	r2, #0
 8001ae2:	e7de      	b.n	8001aa2 <__aeabi_i2d+0x2a>
 8001ae4:	0000041e 	.word	0x0000041e
 8001ae8:	800fffff 	.word	0x800fffff

08001aec <__aeabi_ui2d>:
 8001aec:	b510      	push	{r4, lr}
 8001aee:	1e04      	subs	r4, r0, #0
 8001af0:	d025      	beq.n	8001b3e <__aeabi_ui2d+0x52>
 8001af2:	f000 f86b 	bl	8001bcc <__clzsi2>
 8001af6:	4b14      	ldr	r3, [pc, #80]	; (8001b48 <__aeabi_ui2d+0x5c>)
 8001af8:	1a1b      	subs	r3, r3, r0
 8001afa:	055b      	lsls	r3, r3, #21
 8001afc:	0d5b      	lsrs	r3, r3, #21
 8001afe:	280a      	cmp	r0, #10
 8001b00:	dd12      	ble.n	8001b28 <__aeabi_ui2d+0x3c>
 8001b02:	380b      	subs	r0, #11
 8001b04:	4084      	lsls	r4, r0
 8001b06:	2200      	movs	r2, #0
 8001b08:	0324      	lsls	r4, r4, #12
 8001b0a:	0b24      	lsrs	r4, r4, #12
 8001b0c:	2100      	movs	r1, #0
 8001b0e:	0010      	movs	r0, r2
 8001b10:	0324      	lsls	r4, r4, #12
 8001b12:	0d0a      	lsrs	r2, r1, #20
 8001b14:	0b24      	lsrs	r4, r4, #12
 8001b16:	0512      	lsls	r2, r2, #20
 8001b18:	4322      	orrs	r2, r4
 8001b1a:	4c0c      	ldr	r4, [pc, #48]	; (8001b4c <__aeabi_ui2d+0x60>)
 8001b1c:	051b      	lsls	r3, r3, #20
 8001b1e:	4022      	ands	r2, r4
 8001b20:	4313      	orrs	r3, r2
 8001b22:	005b      	lsls	r3, r3, #1
 8001b24:	0859      	lsrs	r1, r3, #1
 8001b26:	bd10      	pop	{r4, pc}
 8001b28:	0002      	movs	r2, r0
 8001b2a:	0021      	movs	r1, r4
 8001b2c:	3215      	adds	r2, #21
 8001b2e:	4091      	lsls	r1, r2
 8001b30:	000a      	movs	r2, r1
 8001b32:	210b      	movs	r1, #11
 8001b34:	1a08      	subs	r0, r1, r0
 8001b36:	40c4      	lsrs	r4, r0
 8001b38:	0324      	lsls	r4, r4, #12
 8001b3a:	0b24      	lsrs	r4, r4, #12
 8001b3c:	e7e6      	b.n	8001b0c <__aeabi_ui2d+0x20>
 8001b3e:	2300      	movs	r3, #0
 8001b40:	2400      	movs	r4, #0
 8001b42:	2200      	movs	r2, #0
 8001b44:	e7e2      	b.n	8001b0c <__aeabi_ui2d+0x20>
 8001b46:	46c0      	nop			; (mov r8, r8)
 8001b48:	0000041e 	.word	0x0000041e
 8001b4c:	800fffff 	.word	0x800fffff

08001b50 <__aeabi_cdrcmple>:
 8001b50:	4684      	mov	ip, r0
 8001b52:	1c10      	adds	r0, r2, #0
 8001b54:	4662      	mov	r2, ip
 8001b56:	468c      	mov	ip, r1
 8001b58:	1c19      	adds	r1, r3, #0
 8001b5a:	4663      	mov	r3, ip
 8001b5c:	e000      	b.n	8001b60 <__aeabi_cdcmpeq>
 8001b5e:	46c0      	nop			; (mov r8, r8)

08001b60 <__aeabi_cdcmpeq>:
 8001b60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8001b62:	f000 f8f1 	bl	8001d48 <__ledf2>
 8001b66:	2800      	cmp	r0, #0
 8001b68:	d401      	bmi.n	8001b6e <__aeabi_cdcmpeq+0xe>
 8001b6a:	2100      	movs	r1, #0
 8001b6c:	42c8      	cmn	r0, r1
 8001b6e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08001b70 <__aeabi_dcmpeq>:
 8001b70:	b510      	push	{r4, lr}
 8001b72:	f000 f849 	bl	8001c08 <__eqdf2>
 8001b76:	4240      	negs	r0, r0
 8001b78:	3001      	adds	r0, #1
 8001b7a:	bd10      	pop	{r4, pc}

08001b7c <__aeabi_dcmplt>:
 8001b7c:	b510      	push	{r4, lr}
 8001b7e:	f000 f8e3 	bl	8001d48 <__ledf2>
 8001b82:	2800      	cmp	r0, #0
 8001b84:	db01      	blt.n	8001b8a <__aeabi_dcmplt+0xe>
 8001b86:	2000      	movs	r0, #0
 8001b88:	bd10      	pop	{r4, pc}
 8001b8a:	2001      	movs	r0, #1
 8001b8c:	bd10      	pop	{r4, pc}
 8001b8e:	46c0      	nop			; (mov r8, r8)

08001b90 <__aeabi_dcmple>:
 8001b90:	b510      	push	{r4, lr}
 8001b92:	f000 f8d9 	bl	8001d48 <__ledf2>
 8001b96:	2800      	cmp	r0, #0
 8001b98:	dd01      	ble.n	8001b9e <__aeabi_dcmple+0xe>
 8001b9a:	2000      	movs	r0, #0
 8001b9c:	bd10      	pop	{r4, pc}
 8001b9e:	2001      	movs	r0, #1
 8001ba0:	bd10      	pop	{r4, pc}
 8001ba2:	46c0      	nop			; (mov r8, r8)

08001ba4 <__aeabi_dcmpgt>:
 8001ba4:	b510      	push	{r4, lr}
 8001ba6:	f000 f86b 	bl	8001c80 <__gedf2>
 8001baa:	2800      	cmp	r0, #0
 8001bac:	dc01      	bgt.n	8001bb2 <__aeabi_dcmpgt+0xe>
 8001bae:	2000      	movs	r0, #0
 8001bb0:	bd10      	pop	{r4, pc}
 8001bb2:	2001      	movs	r0, #1
 8001bb4:	bd10      	pop	{r4, pc}
 8001bb6:	46c0      	nop			; (mov r8, r8)

08001bb8 <__aeabi_dcmpge>:
 8001bb8:	b510      	push	{r4, lr}
 8001bba:	f000 f861 	bl	8001c80 <__gedf2>
 8001bbe:	2800      	cmp	r0, #0
 8001bc0:	da01      	bge.n	8001bc6 <__aeabi_dcmpge+0xe>
 8001bc2:	2000      	movs	r0, #0
 8001bc4:	bd10      	pop	{r4, pc}
 8001bc6:	2001      	movs	r0, #1
 8001bc8:	bd10      	pop	{r4, pc}
 8001bca:	46c0      	nop			; (mov r8, r8)

08001bcc <__clzsi2>:
 8001bcc:	211c      	movs	r1, #28
 8001bce:	2301      	movs	r3, #1
 8001bd0:	041b      	lsls	r3, r3, #16
 8001bd2:	4298      	cmp	r0, r3
 8001bd4:	d301      	bcc.n	8001bda <__clzsi2+0xe>
 8001bd6:	0c00      	lsrs	r0, r0, #16
 8001bd8:	3910      	subs	r1, #16
 8001bda:	0a1b      	lsrs	r3, r3, #8
 8001bdc:	4298      	cmp	r0, r3
 8001bde:	d301      	bcc.n	8001be4 <__clzsi2+0x18>
 8001be0:	0a00      	lsrs	r0, r0, #8
 8001be2:	3908      	subs	r1, #8
 8001be4:	091b      	lsrs	r3, r3, #4
 8001be6:	4298      	cmp	r0, r3
 8001be8:	d301      	bcc.n	8001bee <__clzsi2+0x22>
 8001bea:	0900      	lsrs	r0, r0, #4
 8001bec:	3904      	subs	r1, #4
 8001bee:	a202      	add	r2, pc, #8	; (adr r2, 8001bf8 <__clzsi2+0x2c>)
 8001bf0:	5c10      	ldrb	r0, [r2, r0]
 8001bf2:	1840      	adds	r0, r0, r1
 8001bf4:	4770      	bx	lr
 8001bf6:	46c0      	nop			; (mov r8, r8)
 8001bf8:	02020304 	.word	0x02020304
 8001bfc:	01010101 	.word	0x01010101
	...

08001c08 <__eqdf2>:
 8001c08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c0a:	464f      	mov	r7, r9
 8001c0c:	4646      	mov	r6, r8
 8001c0e:	46d6      	mov	lr, sl
 8001c10:	4684      	mov	ip, r0
 8001c12:	b5c0      	push	{r6, r7, lr}
 8001c14:	4680      	mov	r8, r0
 8001c16:	4e19      	ldr	r6, [pc, #100]	; (8001c7c <__eqdf2+0x74>)
 8001c18:	0318      	lsls	r0, r3, #12
 8001c1a:	030f      	lsls	r7, r1, #12
 8001c1c:	004d      	lsls	r5, r1, #1
 8001c1e:	0b00      	lsrs	r0, r0, #12
 8001c20:	005c      	lsls	r4, r3, #1
 8001c22:	4682      	mov	sl, r0
 8001c24:	0b3f      	lsrs	r7, r7, #12
 8001c26:	0d6d      	lsrs	r5, r5, #21
 8001c28:	0fc9      	lsrs	r1, r1, #31
 8001c2a:	4691      	mov	r9, r2
 8001c2c:	0d64      	lsrs	r4, r4, #21
 8001c2e:	0fdb      	lsrs	r3, r3, #31
 8001c30:	2001      	movs	r0, #1
 8001c32:	42b5      	cmp	r5, r6
 8001c34:	d00a      	beq.n	8001c4c <__eqdf2+0x44>
 8001c36:	42b4      	cmp	r4, r6
 8001c38:	d003      	beq.n	8001c42 <__eqdf2+0x3a>
 8001c3a:	42a5      	cmp	r5, r4
 8001c3c:	d101      	bne.n	8001c42 <__eqdf2+0x3a>
 8001c3e:	4557      	cmp	r7, sl
 8001c40:	d00c      	beq.n	8001c5c <__eqdf2+0x54>
 8001c42:	bc1c      	pop	{r2, r3, r4}
 8001c44:	4690      	mov	r8, r2
 8001c46:	4699      	mov	r9, r3
 8001c48:	46a2      	mov	sl, r4
 8001c4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c4c:	4666      	mov	r6, ip
 8001c4e:	433e      	orrs	r6, r7
 8001c50:	d1f7      	bne.n	8001c42 <__eqdf2+0x3a>
 8001c52:	42ac      	cmp	r4, r5
 8001c54:	d1f5      	bne.n	8001c42 <__eqdf2+0x3a>
 8001c56:	4654      	mov	r4, sl
 8001c58:	4314      	orrs	r4, r2
 8001c5a:	d1f2      	bne.n	8001c42 <__eqdf2+0x3a>
 8001c5c:	2001      	movs	r0, #1
 8001c5e:	45c8      	cmp	r8, r9
 8001c60:	d1ef      	bne.n	8001c42 <__eqdf2+0x3a>
 8001c62:	4299      	cmp	r1, r3
 8001c64:	d007      	beq.n	8001c76 <__eqdf2+0x6e>
 8001c66:	2d00      	cmp	r5, #0
 8001c68:	d1eb      	bne.n	8001c42 <__eqdf2+0x3a>
 8001c6a:	4663      	mov	r3, ip
 8001c6c:	431f      	orrs	r7, r3
 8001c6e:	0038      	movs	r0, r7
 8001c70:	1e47      	subs	r7, r0, #1
 8001c72:	41b8      	sbcs	r0, r7
 8001c74:	e7e5      	b.n	8001c42 <__eqdf2+0x3a>
 8001c76:	2000      	movs	r0, #0
 8001c78:	e7e3      	b.n	8001c42 <__eqdf2+0x3a>
 8001c7a:	46c0      	nop			; (mov r8, r8)
 8001c7c:	000007ff 	.word	0x000007ff

08001c80 <__gedf2>:
 8001c80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c82:	464f      	mov	r7, r9
 8001c84:	4646      	mov	r6, r8
 8001c86:	46d6      	mov	lr, sl
 8001c88:	004d      	lsls	r5, r1, #1
 8001c8a:	b5c0      	push	{r6, r7, lr}
 8001c8c:	030e      	lsls	r6, r1, #12
 8001c8e:	0fc9      	lsrs	r1, r1, #31
 8001c90:	468a      	mov	sl, r1
 8001c92:	492c      	ldr	r1, [pc, #176]	; (8001d44 <__gedf2+0xc4>)
 8001c94:	031f      	lsls	r7, r3, #12
 8001c96:	005c      	lsls	r4, r3, #1
 8001c98:	4680      	mov	r8, r0
 8001c9a:	0b36      	lsrs	r6, r6, #12
 8001c9c:	0d6d      	lsrs	r5, r5, #21
 8001c9e:	4691      	mov	r9, r2
 8001ca0:	0b3f      	lsrs	r7, r7, #12
 8001ca2:	0d64      	lsrs	r4, r4, #21
 8001ca4:	0fdb      	lsrs	r3, r3, #31
 8001ca6:	428d      	cmp	r5, r1
 8001ca8:	d01e      	beq.n	8001ce8 <__gedf2+0x68>
 8001caa:	428c      	cmp	r4, r1
 8001cac:	d016      	beq.n	8001cdc <__gedf2+0x5c>
 8001cae:	2d00      	cmp	r5, #0
 8001cb0:	d11e      	bne.n	8001cf0 <__gedf2+0x70>
 8001cb2:	4330      	orrs	r0, r6
 8001cb4:	4684      	mov	ip, r0
 8001cb6:	2c00      	cmp	r4, #0
 8001cb8:	d101      	bne.n	8001cbe <__gedf2+0x3e>
 8001cba:	433a      	orrs	r2, r7
 8001cbc:	d023      	beq.n	8001d06 <__gedf2+0x86>
 8001cbe:	4662      	mov	r2, ip
 8001cc0:	2a00      	cmp	r2, #0
 8001cc2:	d01a      	beq.n	8001cfa <__gedf2+0x7a>
 8001cc4:	459a      	cmp	sl, r3
 8001cc6:	d029      	beq.n	8001d1c <__gedf2+0x9c>
 8001cc8:	4651      	mov	r1, sl
 8001cca:	2002      	movs	r0, #2
 8001ccc:	3901      	subs	r1, #1
 8001cce:	4008      	ands	r0, r1
 8001cd0:	3801      	subs	r0, #1
 8001cd2:	bc1c      	pop	{r2, r3, r4}
 8001cd4:	4690      	mov	r8, r2
 8001cd6:	4699      	mov	r9, r3
 8001cd8:	46a2      	mov	sl, r4
 8001cda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cdc:	0039      	movs	r1, r7
 8001cde:	4311      	orrs	r1, r2
 8001ce0:	d0e5      	beq.n	8001cae <__gedf2+0x2e>
 8001ce2:	2002      	movs	r0, #2
 8001ce4:	4240      	negs	r0, r0
 8001ce6:	e7f4      	b.n	8001cd2 <__gedf2+0x52>
 8001ce8:	4330      	orrs	r0, r6
 8001cea:	d1fa      	bne.n	8001ce2 <__gedf2+0x62>
 8001cec:	42ac      	cmp	r4, r5
 8001cee:	d00f      	beq.n	8001d10 <__gedf2+0x90>
 8001cf0:	2c00      	cmp	r4, #0
 8001cf2:	d10f      	bne.n	8001d14 <__gedf2+0x94>
 8001cf4:	433a      	orrs	r2, r7
 8001cf6:	d0e7      	beq.n	8001cc8 <__gedf2+0x48>
 8001cf8:	e00c      	b.n	8001d14 <__gedf2+0x94>
 8001cfa:	2201      	movs	r2, #1
 8001cfc:	3b01      	subs	r3, #1
 8001cfe:	4393      	bics	r3, r2
 8001d00:	0018      	movs	r0, r3
 8001d02:	3001      	adds	r0, #1
 8001d04:	e7e5      	b.n	8001cd2 <__gedf2+0x52>
 8001d06:	4663      	mov	r3, ip
 8001d08:	2000      	movs	r0, #0
 8001d0a:	2b00      	cmp	r3, #0
 8001d0c:	d0e1      	beq.n	8001cd2 <__gedf2+0x52>
 8001d0e:	e7db      	b.n	8001cc8 <__gedf2+0x48>
 8001d10:	433a      	orrs	r2, r7
 8001d12:	d1e6      	bne.n	8001ce2 <__gedf2+0x62>
 8001d14:	459a      	cmp	sl, r3
 8001d16:	d1d7      	bne.n	8001cc8 <__gedf2+0x48>
 8001d18:	42a5      	cmp	r5, r4
 8001d1a:	dcd5      	bgt.n	8001cc8 <__gedf2+0x48>
 8001d1c:	42a5      	cmp	r5, r4
 8001d1e:	db05      	blt.n	8001d2c <__gedf2+0xac>
 8001d20:	42be      	cmp	r6, r7
 8001d22:	d8d1      	bhi.n	8001cc8 <__gedf2+0x48>
 8001d24:	d008      	beq.n	8001d38 <__gedf2+0xb8>
 8001d26:	2000      	movs	r0, #0
 8001d28:	42be      	cmp	r6, r7
 8001d2a:	d2d2      	bcs.n	8001cd2 <__gedf2+0x52>
 8001d2c:	4650      	mov	r0, sl
 8001d2e:	2301      	movs	r3, #1
 8001d30:	3801      	subs	r0, #1
 8001d32:	4398      	bics	r0, r3
 8001d34:	3001      	adds	r0, #1
 8001d36:	e7cc      	b.n	8001cd2 <__gedf2+0x52>
 8001d38:	45c8      	cmp	r8, r9
 8001d3a:	d8c5      	bhi.n	8001cc8 <__gedf2+0x48>
 8001d3c:	2000      	movs	r0, #0
 8001d3e:	45c8      	cmp	r8, r9
 8001d40:	d3f4      	bcc.n	8001d2c <__gedf2+0xac>
 8001d42:	e7c6      	b.n	8001cd2 <__gedf2+0x52>
 8001d44:	000007ff 	.word	0x000007ff

08001d48 <__ledf2>:
 8001d48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d4a:	464f      	mov	r7, r9
 8001d4c:	4646      	mov	r6, r8
 8001d4e:	46d6      	mov	lr, sl
 8001d50:	004d      	lsls	r5, r1, #1
 8001d52:	b5c0      	push	{r6, r7, lr}
 8001d54:	030e      	lsls	r6, r1, #12
 8001d56:	0fc9      	lsrs	r1, r1, #31
 8001d58:	468a      	mov	sl, r1
 8001d5a:	492e      	ldr	r1, [pc, #184]	; (8001e14 <__ledf2+0xcc>)
 8001d5c:	031f      	lsls	r7, r3, #12
 8001d5e:	005c      	lsls	r4, r3, #1
 8001d60:	4680      	mov	r8, r0
 8001d62:	0b36      	lsrs	r6, r6, #12
 8001d64:	0d6d      	lsrs	r5, r5, #21
 8001d66:	4691      	mov	r9, r2
 8001d68:	0b3f      	lsrs	r7, r7, #12
 8001d6a:	0d64      	lsrs	r4, r4, #21
 8001d6c:	0fdb      	lsrs	r3, r3, #31
 8001d6e:	428d      	cmp	r5, r1
 8001d70:	d018      	beq.n	8001da4 <__ledf2+0x5c>
 8001d72:	428c      	cmp	r4, r1
 8001d74:	d011      	beq.n	8001d9a <__ledf2+0x52>
 8001d76:	2d00      	cmp	r5, #0
 8001d78:	d118      	bne.n	8001dac <__ledf2+0x64>
 8001d7a:	4330      	orrs	r0, r6
 8001d7c:	4684      	mov	ip, r0
 8001d7e:	2c00      	cmp	r4, #0
 8001d80:	d11e      	bne.n	8001dc0 <__ledf2+0x78>
 8001d82:	433a      	orrs	r2, r7
 8001d84:	d11c      	bne.n	8001dc0 <__ledf2+0x78>
 8001d86:	4663      	mov	r3, ip
 8001d88:	2000      	movs	r0, #0
 8001d8a:	2b00      	cmp	r3, #0
 8001d8c:	d030      	beq.n	8001df0 <__ledf2+0xa8>
 8001d8e:	4651      	mov	r1, sl
 8001d90:	2002      	movs	r0, #2
 8001d92:	3901      	subs	r1, #1
 8001d94:	4008      	ands	r0, r1
 8001d96:	3801      	subs	r0, #1
 8001d98:	e02a      	b.n	8001df0 <__ledf2+0xa8>
 8001d9a:	0039      	movs	r1, r7
 8001d9c:	4311      	orrs	r1, r2
 8001d9e:	d0ea      	beq.n	8001d76 <__ledf2+0x2e>
 8001da0:	2002      	movs	r0, #2
 8001da2:	e025      	b.n	8001df0 <__ledf2+0xa8>
 8001da4:	4330      	orrs	r0, r6
 8001da6:	d1fb      	bne.n	8001da0 <__ledf2+0x58>
 8001da8:	42ac      	cmp	r4, r5
 8001daa:	d026      	beq.n	8001dfa <__ledf2+0xb2>
 8001dac:	2c00      	cmp	r4, #0
 8001dae:	d126      	bne.n	8001dfe <__ledf2+0xb6>
 8001db0:	433a      	orrs	r2, r7
 8001db2:	d124      	bne.n	8001dfe <__ledf2+0xb6>
 8001db4:	4651      	mov	r1, sl
 8001db6:	2002      	movs	r0, #2
 8001db8:	3901      	subs	r1, #1
 8001dba:	4008      	ands	r0, r1
 8001dbc:	3801      	subs	r0, #1
 8001dbe:	e017      	b.n	8001df0 <__ledf2+0xa8>
 8001dc0:	4662      	mov	r2, ip
 8001dc2:	2a00      	cmp	r2, #0
 8001dc4:	d00f      	beq.n	8001de6 <__ledf2+0x9e>
 8001dc6:	459a      	cmp	sl, r3
 8001dc8:	d1e1      	bne.n	8001d8e <__ledf2+0x46>
 8001dca:	42a5      	cmp	r5, r4
 8001dcc:	db05      	blt.n	8001dda <__ledf2+0x92>
 8001dce:	42be      	cmp	r6, r7
 8001dd0:	d8dd      	bhi.n	8001d8e <__ledf2+0x46>
 8001dd2:	d019      	beq.n	8001e08 <__ledf2+0xc0>
 8001dd4:	2000      	movs	r0, #0
 8001dd6:	42be      	cmp	r6, r7
 8001dd8:	d20a      	bcs.n	8001df0 <__ledf2+0xa8>
 8001dda:	4650      	mov	r0, sl
 8001ddc:	2301      	movs	r3, #1
 8001dde:	3801      	subs	r0, #1
 8001de0:	4398      	bics	r0, r3
 8001de2:	3001      	adds	r0, #1
 8001de4:	e004      	b.n	8001df0 <__ledf2+0xa8>
 8001de6:	2201      	movs	r2, #1
 8001de8:	3b01      	subs	r3, #1
 8001dea:	4393      	bics	r3, r2
 8001dec:	0018      	movs	r0, r3
 8001dee:	3001      	adds	r0, #1
 8001df0:	bc1c      	pop	{r2, r3, r4}
 8001df2:	4690      	mov	r8, r2
 8001df4:	4699      	mov	r9, r3
 8001df6:	46a2      	mov	sl, r4
 8001df8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001dfa:	433a      	orrs	r2, r7
 8001dfc:	d1d0      	bne.n	8001da0 <__ledf2+0x58>
 8001dfe:	459a      	cmp	sl, r3
 8001e00:	d1c5      	bne.n	8001d8e <__ledf2+0x46>
 8001e02:	42a5      	cmp	r5, r4
 8001e04:	dcc3      	bgt.n	8001d8e <__ledf2+0x46>
 8001e06:	e7e0      	b.n	8001dca <__ledf2+0x82>
 8001e08:	45c8      	cmp	r8, r9
 8001e0a:	d8c0      	bhi.n	8001d8e <__ledf2+0x46>
 8001e0c:	2000      	movs	r0, #0
 8001e0e:	45c8      	cmp	r8, r9
 8001e10:	d3e3      	bcc.n	8001dda <__ledf2+0x92>
 8001e12:	e7ed      	b.n	8001df0 <__ledf2+0xa8>
 8001e14:	000007ff 	.word	0x000007ff

08001e18 <NVIC_EnableIRQ>:
  \brief   Enable External Interrupt
  \details Enables a device-specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001e18:	b580      	push	{r7, lr}
 8001e1a:	b082      	sub	sp, #8
 8001e1c:	af00      	add	r7, sp, #0
 8001e1e:	0002      	movs	r2, r0
 8001e20:	1dfb      	adds	r3, r7, #7
 8001e22:	701a      	strb	r2, [r3, #0]
  NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 8001e24:	1dfb      	adds	r3, r7, #7
 8001e26:	781b      	ldrb	r3, [r3, #0]
 8001e28:	001a      	movs	r2, r3
 8001e2a:	231f      	movs	r3, #31
 8001e2c:	401a      	ands	r2, r3
 8001e2e:	4b04      	ldr	r3, [pc, #16]	; (8001e40 <NVIC_EnableIRQ+0x28>)
 8001e30:	2101      	movs	r1, #1
 8001e32:	4091      	lsls	r1, r2
 8001e34:	000a      	movs	r2, r1
 8001e36:	601a      	str	r2, [r3, #0]
}
 8001e38:	46c0      	nop			; (mov r8, r8)
 8001e3a:	46bd      	mov	sp, r7
 8001e3c:	b002      	add	sp, #8
 8001e3e:	bd80      	pop	{r7, pc}
 8001e40:	e000e100 	.word	0xe000e100

08001e44 <NVIC_SetPriority>:
  \note    The priority cannot be set for every core interrupt.
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001e44:	b590      	push	{r4, r7, lr}
 8001e46:	b083      	sub	sp, #12
 8001e48:	af00      	add	r7, sp, #0
 8001e4a:	0002      	movs	r2, r0
 8001e4c:	6039      	str	r1, [r7, #0]
 8001e4e:	1dfb      	adds	r3, r7, #7
 8001e50:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) < 0)
 8001e52:	1dfb      	adds	r3, r7, #7
 8001e54:	781b      	ldrb	r3, [r3, #0]
 8001e56:	2b7f      	cmp	r3, #127	; 0x7f
 8001e58:	d932      	bls.n	8001ec0 <NVIC_SetPriority+0x7c>
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001e5a:	4a2f      	ldr	r2, [pc, #188]	; (8001f18 <NVIC_SetPriority+0xd4>)
 8001e5c:	1dfb      	adds	r3, r7, #7
 8001e5e:	781b      	ldrb	r3, [r3, #0]
 8001e60:	0019      	movs	r1, r3
 8001e62:	230f      	movs	r3, #15
 8001e64:	400b      	ands	r3, r1
 8001e66:	3b08      	subs	r3, #8
 8001e68:	089b      	lsrs	r3, r3, #2
 8001e6a:	3306      	adds	r3, #6
 8001e6c:	009b      	lsls	r3, r3, #2
 8001e6e:	18d3      	adds	r3, r2, r3
 8001e70:	3304      	adds	r3, #4
 8001e72:	681b      	ldr	r3, [r3, #0]
 8001e74:	1dfa      	adds	r2, r7, #7
 8001e76:	7812      	ldrb	r2, [r2, #0]
 8001e78:	0011      	movs	r1, r2
 8001e7a:	2203      	movs	r2, #3
 8001e7c:	400a      	ands	r2, r1
 8001e7e:	00d2      	lsls	r2, r2, #3
 8001e80:	21ff      	movs	r1, #255	; 0xff
 8001e82:	4091      	lsls	r1, r2
 8001e84:	000a      	movs	r2, r1
 8001e86:	43d2      	mvns	r2, r2
 8001e88:	401a      	ands	r2, r3
 8001e8a:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8001e8c:	683b      	ldr	r3, [r7, #0]
 8001e8e:	019b      	lsls	r3, r3, #6
 8001e90:	22ff      	movs	r2, #255	; 0xff
 8001e92:	401a      	ands	r2, r3
 8001e94:	1dfb      	adds	r3, r7, #7
 8001e96:	781b      	ldrb	r3, [r3, #0]
 8001e98:	0018      	movs	r0, r3
 8001e9a:	2303      	movs	r3, #3
 8001e9c:	4003      	ands	r3, r0
 8001e9e:	00db      	lsls	r3, r3, #3
 8001ea0:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001ea2:	481d      	ldr	r0, [pc, #116]	; (8001f18 <NVIC_SetPriority+0xd4>)
 8001ea4:	1dfb      	adds	r3, r7, #7
 8001ea6:	781b      	ldrb	r3, [r3, #0]
 8001ea8:	001c      	movs	r4, r3
 8001eaa:	230f      	movs	r3, #15
 8001eac:	4023      	ands	r3, r4
 8001eae:	3b08      	subs	r3, #8
 8001eb0:	089b      	lsrs	r3, r3, #2
 8001eb2:	430a      	orrs	r2, r1
 8001eb4:	3306      	adds	r3, #6
 8001eb6:	009b      	lsls	r3, r3, #2
 8001eb8:	18c3      	adds	r3, r0, r3
 8001eba:	3304      	adds	r3, #4
 8001ebc:	601a      	str	r2, [r3, #0]
  else
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8001ebe:	e027      	b.n	8001f10 <NVIC_SetPriority+0xcc>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001ec0:	4a16      	ldr	r2, [pc, #88]	; (8001f1c <NVIC_SetPriority+0xd8>)
 8001ec2:	1dfb      	adds	r3, r7, #7
 8001ec4:	781b      	ldrb	r3, [r3, #0]
 8001ec6:	b25b      	sxtb	r3, r3
 8001ec8:	089b      	lsrs	r3, r3, #2
 8001eca:	33c0      	adds	r3, #192	; 0xc0
 8001ecc:	009b      	lsls	r3, r3, #2
 8001ece:	589b      	ldr	r3, [r3, r2]
 8001ed0:	1dfa      	adds	r2, r7, #7
 8001ed2:	7812      	ldrb	r2, [r2, #0]
 8001ed4:	0011      	movs	r1, r2
 8001ed6:	2203      	movs	r2, #3
 8001ed8:	400a      	ands	r2, r1
 8001eda:	00d2      	lsls	r2, r2, #3
 8001edc:	21ff      	movs	r1, #255	; 0xff
 8001ede:	4091      	lsls	r1, r2
 8001ee0:	000a      	movs	r2, r1
 8001ee2:	43d2      	mvns	r2, r2
 8001ee4:	401a      	ands	r2, r3
 8001ee6:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8001ee8:	683b      	ldr	r3, [r7, #0]
 8001eea:	019b      	lsls	r3, r3, #6
 8001eec:	22ff      	movs	r2, #255	; 0xff
 8001eee:	401a      	ands	r2, r3
 8001ef0:	1dfb      	adds	r3, r7, #7
 8001ef2:	781b      	ldrb	r3, [r3, #0]
 8001ef4:	0018      	movs	r0, r3
 8001ef6:	2303      	movs	r3, #3
 8001ef8:	4003      	ands	r3, r0
 8001efa:	00db      	lsls	r3, r3, #3
 8001efc:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001efe:	4807      	ldr	r0, [pc, #28]	; (8001f1c <NVIC_SetPriority+0xd8>)
 8001f00:	1dfb      	adds	r3, r7, #7
 8001f02:	781b      	ldrb	r3, [r3, #0]
 8001f04:	b25b      	sxtb	r3, r3
 8001f06:	089b      	lsrs	r3, r3, #2
 8001f08:	430a      	orrs	r2, r1
 8001f0a:	33c0      	adds	r3, #192	; 0xc0
 8001f0c:	009b      	lsls	r3, r3, #2
 8001f0e:	501a      	str	r2, [r3, r0]
}
 8001f10:	46c0      	nop			; (mov r8, r8)
 8001f12:	46bd      	mov	sp, r7
 8001f14:	b003      	add	sp, #12
 8001f16:	bd90      	pop	{r4, r7, pc}
 8001f18:	e000ed00 	.word	0xe000ed00
 8001f1c:	e000e100 	.word	0xe000e100

08001f20 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001f20:	b580      	push	{r7, lr}
 8001f22:	b082      	sub	sp, #8
 8001f24:	af00      	add	r7, sp, #0
 8001f26:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001f28:	687b      	ldr	r3, [r7, #4]
 8001f2a:	3b01      	subs	r3, #1
 8001f2c:	4a0c      	ldr	r2, [pc, #48]	; (8001f60 <SysTick_Config+0x40>)
 8001f2e:	4293      	cmp	r3, r2
 8001f30:	d901      	bls.n	8001f36 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8001f32:	2301      	movs	r3, #1
 8001f34:	e010      	b.n	8001f58 <SysTick_Config+0x38>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001f36:	4b0b      	ldr	r3, [pc, #44]	; (8001f64 <SysTick_Config+0x44>)
 8001f38:	687a      	ldr	r2, [r7, #4]
 8001f3a:	3a01      	subs	r2, #1
 8001f3c:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8001f3e:	2301      	movs	r3, #1
 8001f40:	425b      	negs	r3, r3
 8001f42:	2103      	movs	r1, #3
 8001f44:	0018      	movs	r0, r3
 8001f46:	f7ff ff7d 	bl	8001e44 <NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001f4a:	4b06      	ldr	r3, [pc, #24]	; (8001f64 <SysTick_Config+0x44>)
 8001f4c:	2200      	movs	r2, #0
 8001f4e:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001f50:	4b04      	ldr	r3, [pc, #16]	; (8001f64 <SysTick_Config+0x44>)
 8001f52:	2207      	movs	r2, #7
 8001f54:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001f56:	2300      	movs	r3, #0
}
 8001f58:	0018      	movs	r0, r3
 8001f5a:	46bd      	mov	sp, r7
 8001f5c:	b002      	add	sp, #8
 8001f5e:	bd80      	pop	{r7, pc}
 8001f60:	00ffffff 	.word	0x00ffffff
 8001f64:	e000e010 	.word	0xe000e010

08001f68 <SysTick_Handler>:
/* STM has a system timer SysTick
 * counting from some number to 0
 * and when reaches 0 calls interrupt
 * void SysTick_Handler() {}
 * */
void SysTick_Handler() {SysTick->CTRL &=~ SysTick_CTRL_ENABLE_Msk;}
 8001f68:	b580      	push	{r7, lr}
 8001f6a:	af00      	add	r7, sp, #0
 8001f6c:	4b04      	ldr	r3, [pc, #16]	; (8001f80 <SysTick_Handler+0x18>)
 8001f6e:	681a      	ldr	r2, [r3, #0]
 8001f70:	4b03      	ldr	r3, [pc, #12]	; (8001f80 <SysTick_Handler+0x18>)
 8001f72:	2101      	movs	r1, #1
 8001f74:	438a      	bics	r2, r1
 8001f76:	601a      	str	r2, [r3, #0]
 8001f78:	46c0      	nop			; (mov r8, r8)
 8001f7a:	46bd      	mov	sp, r7
 8001f7c:	bd80      	pop	{r7, pc}
 8001f7e:	46c0      	nop			; (mov r8, r8)
 8001f80:	e000e010 	.word	0xe000e010

08001f84 <delay_ms>:
	SysTick_Config(__F_CPU_MHZ * dt_us);
	NVIC_SetPriority(SysTick_IRQn, 0);
	while(SysTick->CTRL & SysTick_CTRL_ENABLE_Msk);
}

void delay_ms(uint32_t dt_ms) {
 8001f84:	b590      	push	{r4, r7, lr}
 8001f86:	b085      	sub	sp, #20
 8001f88:	af00      	add	r7, sp, #0
 8001f8a:	6078      	str	r0, [r7, #4]
	if(dt_ms == 0) return;
 8001f8c:	687b      	ldr	r3, [r7, #4]
 8001f8e:	2b00      	cmp	r3, #0
 8001f90:	d022      	beq.n	8001fd8 <delay_ms+0x54>
	int one_ms = __F_CPU_MHZ * 1000;
 8001f92:	4b13      	ldr	r3, [pc, #76]	; (8001fe0 <delay_ms+0x5c>)
 8001f94:	781b      	ldrb	r3, [r3, #0]
 8001f96:	b2db      	uxtb	r3, r3
 8001f98:	001a      	movs	r2, r3
 8001f9a:	0013      	movs	r3, r2
 8001f9c:	015b      	lsls	r3, r3, #5
 8001f9e:	1a9b      	subs	r3, r3, r2
 8001fa0:	009b      	lsls	r3, r3, #2
 8001fa2:	189b      	adds	r3, r3, r2
 8001fa4:	00db      	lsls	r3, r3, #3
 8001fa6:	60fb      	str	r3, [r7, #12]
	for(register int x = 0;x < dt_ms;x++) {
 8001fa8:	2400      	movs	r4, #0
 8001faa:	e010      	b.n	8001fce <delay_ms+0x4a>
		SysTick_Config(one_ms);
 8001fac:	68fb      	ldr	r3, [r7, #12]
 8001fae:	0018      	movs	r0, r3
 8001fb0:	f7ff ffb6 	bl	8001f20 <SysTick_Config>
		NVIC_SetPriority(SysTick_IRQn, 0);
 8001fb4:	2301      	movs	r3, #1
 8001fb6:	425b      	negs	r3, r3
 8001fb8:	2100      	movs	r1, #0
 8001fba:	0018      	movs	r0, r3
 8001fbc:	f7ff ff42 	bl	8001e44 <NVIC_SetPriority>
		while(SysTick->CTRL & SysTick_CTRL_ENABLE_Msk);
 8001fc0:	46c0      	nop			; (mov r8, r8)
 8001fc2:	4b08      	ldr	r3, [pc, #32]	; (8001fe4 <delay_ms+0x60>)
 8001fc4:	681b      	ldr	r3, [r3, #0]
 8001fc6:	2201      	movs	r2, #1
 8001fc8:	4013      	ands	r3, r2
 8001fca:	d1fa      	bne.n	8001fc2 <delay_ms+0x3e>
	for(register int x = 0;x < dt_ms;x++) {
 8001fcc:	3401      	adds	r4, #1
 8001fce:	0022      	movs	r2, r4
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	4293      	cmp	r3, r2
 8001fd4:	d8ea      	bhi.n	8001fac <delay_ms+0x28>
 8001fd6:	e000      	b.n	8001fda <delay_ms+0x56>
	if(dt_ms == 0) return;
 8001fd8:	46c0      	nop			; (mov r8, r8)
	}
}
 8001fda:	46bd      	mov	sp, r7
 8001fdc:	b005      	add	sp, #20
 8001fde:	bd90      	pop	{r4, r7, pc}
 8001fe0:	2000007c 	.word	0x2000007c
 8001fe4:	e000e010 	.word	0xe000e010

08001fe8 <CLOCK_internal48mhz>:

//========================================================================== CLOCK

/*Sets system clock to 48MHz using internal 8MHz RC multiplied by PLL*/
/*DON'T FORGET TO POWER VDDA (pin 28 k6)*/
void CLOCK_internal48mhz() {
 8001fe8:	b580      	push	{r7, lr}
 8001fea:	af00      	add	r7, sp, #0
	RCC->CFGR &= RCC_CFGR_SW;
 8001fec:	4b16      	ldr	r3, [pc, #88]	; (8002048 <CLOCK_internal48mhz+0x60>)
 8001fee:	685a      	ldr	r2, [r3, #4]
 8001ff0:	4b15      	ldr	r3, [pc, #84]	; (8002048 <CLOCK_internal48mhz+0x60>)
 8001ff2:	2103      	movs	r1, #3
 8001ff4:	400a      	ands	r2, r1
 8001ff6:	605a      	str	r2, [r3, #4]
	RCC->CFGR |= RCC_CFGR_SW_PLL; //Set PLL as system clock
 8001ff8:	4b13      	ldr	r3, [pc, #76]	; (8002048 <CLOCK_internal48mhz+0x60>)
 8001ffa:	685a      	ldr	r2, [r3, #4]
 8001ffc:	4b12      	ldr	r3, [pc, #72]	; (8002048 <CLOCK_internal48mhz+0x60>)
 8001ffe:	2102      	movs	r1, #2
 8002000:	430a      	orrs	r2, r1
 8002002:	605a      	str	r2, [r3, #4]
	RCC->CFGR &=~ RCC_CFGR_PLLMUL;
 8002004:	4b10      	ldr	r3, [pc, #64]	; (8002048 <CLOCK_internal48mhz+0x60>)
 8002006:	685a      	ldr	r2, [r3, #4]
 8002008:	4b0f      	ldr	r3, [pc, #60]	; (8002048 <CLOCK_internal48mhz+0x60>)
 800200a:	4910      	ldr	r1, [pc, #64]	; (800204c <CLOCK_internal48mhz+0x64>)
 800200c:	400a      	ands	r2, r1
 800200e:	605a      	str	r2, [r3, #4]
	RCC->CFGR |= RCC_CFGR_PLLMUL12; //Mul (HSI/2) by 12 to get 48MHz
 8002010:	4b0d      	ldr	r3, [pc, #52]	; (8002048 <CLOCK_internal48mhz+0x60>)
 8002012:	685a      	ldr	r2, [r3, #4]
 8002014:	4b0c      	ldr	r3, [pc, #48]	; (8002048 <CLOCK_internal48mhz+0x60>)
 8002016:	21a0      	movs	r1, #160	; 0xa0
 8002018:	0389      	lsls	r1, r1, #14
 800201a:	430a      	orrs	r2, r1
 800201c:	605a      	str	r2, [r3, #4]
	RCC->CR |= RCC_CR_PLLON;
 800201e:	4b0a      	ldr	r3, [pc, #40]	; (8002048 <CLOCK_internal48mhz+0x60>)
 8002020:	681a      	ldr	r2, [r3, #0]
 8002022:	4b09      	ldr	r3, [pc, #36]	; (8002048 <CLOCK_internal48mhz+0x60>)
 8002024:	2180      	movs	r1, #128	; 0x80
 8002026:	0449      	lsls	r1, r1, #17
 8002028:	430a      	orrs	r2, r1
 800202a:	601a      	str	r2, [r3, #0]
	while(!(RCC->CR & RCC_CR_PLLRDY)); //Wait for PLL start
 800202c:	46c0      	nop			; (mov r8, r8)
 800202e:	4b06      	ldr	r3, [pc, #24]	; (8002048 <CLOCK_internal48mhz+0x60>)
 8002030:	681a      	ldr	r2, [r3, #0]
 8002032:	2380      	movs	r3, #128	; 0x80
 8002034:	049b      	lsls	r3, r3, #18
 8002036:	4013      	ands	r3, r2
 8002038:	d0f9      	beq.n	800202e <CLOCK_internal48mhz+0x46>
	__F_CPU_MHZ = 48;
 800203a:	4b05      	ldr	r3, [pc, #20]	; (8002050 <CLOCK_internal48mhz+0x68>)
 800203c:	2230      	movs	r2, #48	; 0x30
 800203e:	701a      	strb	r2, [r3, #0]
}
 8002040:	46c0      	nop			; (mov r8, r8)
 8002042:	46bd      	mov	sp, r7
 8002044:	bd80      	pop	{r7, pc}
 8002046:	46c0      	nop			; (mov r8, r8)
 8002048:	40021000 	.word	0x40021000
 800204c:	ffc3ffff 	.word	0xffc3ffff
 8002050:	2000007c 	.word	0x2000007c

08002054 <io_init>:



//========================================================================== IO
//================================================ RCC
void io_init(PORT port) {
 8002054:	b580      	push	{r7, lr}
 8002056:	b082      	sub	sp, #8
 8002058:	af00      	add	r7, sp, #0
 800205a:	6078      	str	r0, [r7, #4]
	if(port == A) RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 800205c:	4b21      	ldr	r3, [pc, #132]	; (80020e4 <io_init+0x90>)
 800205e:	681b      	ldr	r3, [r3, #0]
 8002060:	687a      	ldr	r2, [r7, #4]
 8002062:	429a      	cmp	r2, r3
 8002064:	d107      	bne.n	8002076 <io_init+0x22>
 8002066:	4b20      	ldr	r3, [pc, #128]	; (80020e8 <io_init+0x94>)
 8002068:	695a      	ldr	r2, [r3, #20]
 800206a:	4b1f      	ldr	r3, [pc, #124]	; (80020e8 <io_init+0x94>)
 800206c:	2180      	movs	r1, #128	; 0x80
 800206e:	0289      	lsls	r1, r1, #10
 8002070:	430a      	orrs	r2, r1
 8002072:	615a      	str	r2, [r3, #20]
	else if(port == B) RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
	else if(port == C) RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
	else if(port == D) RCC->AHBENR |= RCC_AHBENR_GPIODEN;
	else if(port == F) RCC->AHBENR |= RCC_AHBENR_GPIOFEN;
}
 8002074:	e032      	b.n	80020dc <io_init+0x88>
	else if(port == B) RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 8002076:	4b1d      	ldr	r3, [pc, #116]	; (80020ec <io_init+0x98>)
 8002078:	681b      	ldr	r3, [r3, #0]
 800207a:	687a      	ldr	r2, [r7, #4]
 800207c:	429a      	cmp	r2, r3
 800207e:	d107      	bne.n	8002090 <io_init+0x3c>
 8002080:	4b19      	ldr	r3, [pc, #100]	; (80020e8 <io_init+0x94>)
 8002082:	695a      	ldr	r2, [r3, #20]
 8002084:	4b18      	ldr	r3, [pc, #96]	; (80020e8 <io_init+0x94>)
 8002086:	2180      	movs	r1, #128	; 0x80
 8002088:	02c9      	lsls	r1, r1, #11
 800208a:	430a      	orrs	r2, r1
 800208c:	615a      	str	r2, [r3, #20]
}
 800208e:	e025      	b.n	80020dc <io_init+0x88>
	else if(port == C) RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 8002090:	4b17      	ldr	r3, [pc, #92]	; (80020f0 <io_init+0x9c>)
 8002092:	681b      	ldr	r3, [r3, #0]
 8002094:	687a      	ldr	r2, [r7, #4]
 8002096:	429a      	cmp	r2, r3
 8002098:	d107      	bne.n	80020aa <io_init+0x56>
 800209a:	4b13      	ldr	r3, [pc, #76]	; (80020e8 <io_init+0x94>)
 800209c:	695a      	ldr	r2, [r3, #20]
 800209e:	4b12      	ldr	r3, [pc, #72]	; (80020e8 <io_init+0x94>)
 80020a0:	2180      	movs	r1, #128	; 0x80
 80020a2:	0309      	lsls	r1, r1, #12
 80020a4:	430a      	orrs	r2, r1
 80020a6:	615a      	str	r2, [r3, #20]
}
 80020a8:	e018      	b.n	80020dc <io_init+0x88>
	else if(port == D) RCC->AHBENR |= RCC_AHBENR_GPIODEN;
 80020aa:	4b12      	ldr	r3, [pc, #72]	; (80020f4 <io_init+0xa0>)
 80020ac:	681b      	ldr	r3, [r3, #0]
 80020ae:	687a      	ldr	r2, [r7, #4]
 80020b0:	429a      	cmp	r2, r3
 80020b2:	d107      	bne.n	80020c4 <io_init+0x70>
 80020b4:	4b0c      	ldr	r3, [pc, #48]	; (80020e8 <io_init+0x94>)
 80020b6:	695a      	ldr	r2, [r3, #20]
 80020b8:	4b0b      	ldr	r3, [pc, #44]	; (80020e8 <io_init+0x94>)
 80020ba:	2180      	movs	r1, #128	; 0x80
 80020bc:	0349      	lsls	r1, r1, #13
 80020be:	430a      	orrs	r2, r1
 80020c0:	615a      	str	r2, [r3, #20]
}
 80020c2:	e00b      	b.n	80020dc <io_init+0x88>
	else if(port == F) RCC->AHBENR |= RCC_AHBENR_GPIOFEN;
 80020c4:	4b0c      	ldr	r3, [pc, #48]	; (80020f8 <io_init+0xa4>)
 80020c6:	681b      	ldr	r3, [r3, #0]
 80020c8:	687a      	ldr	r2, [r7, #4]
 80020ca:	429a      	cmp	r2, r3
 80020cc:	d106      	bne.n	80020dc <io_init+0x88>
 80020ce:	4b06      	ldr	r3, [pc, #24]	; (80020e8 <io_init+0x94>)
 80020d0:	695a      	ldr	r2, [r3, #20]
 80020d2:	4b05      	ldr	r3, [pc, #20]	; (80020e8 <io_init+0x94>)
 80020d4:	2180      	movs	r1, #128	; 0x80
 80020d6:	03c9      	lsls	r1, r1, #15
 80020d8:	430a      	orrs	r2, r1
 80020da:	615a      	str	r2, [r3, #20]
}
 80020dc:	46c0      	nop			; (mov r8, r8)
 80020de:	46bd      	mov	sp, r7
 80020e0:	b002      	add	sp, #8
 80020e2:	bd80      	pop	{r7, pc}
 80020e4:	20000000 	.word	0x20000000
 80020e8:	40021000 	.word	0x40021000
 80020ec:	20000004 	.word	0x20000004
 80020f0:	20000008 	.word	0x20000008
 80020f4:	2000000c 	.word	0x2000000c
 80020f8:	20000010 	.word	0x20000010

080020fc <io_in>:
//================================================ MODER
#define noPull   0
#define pullUp   1
#define pullDown 2
//io_in(PA0, pullUp); sets PA0 as input with pullup
void io_in(GPIO pin, uint8_t pull) {
 80020fc:	b590      	push	{r4, r7, lr}
 80020fe:	b085      	sub	sp, #20
 8002100:	af00      	add	r7, sp, #0
 8002102:	2408      	movs	r4, #8
 8002104:	193b      	adds	r3, r7, r4
 8002106:	6018      	str	r0, [r3, #0]
 8002108:	6059      	str	r1, [r3, #4]
 800210a:	1dfb      	adds	r3, r7, #7
 800210c:	701a      	strb	r2, [r3, #0]
	pin.port->MODER &=~ (3 << (pin.pin * 2));
 800210e:	0020      	movs	r0, r4
 8002110:	183b      	adds	r3, r7, r0
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	681a      	ldr	r2, [r3, #0]
 8002116:	183b      	adds	r3, r7, r0
 8002118:	791b      	ldrb	r3, [r3, #4]
 800211a:	005b      	lsls	r3, r3, #1
 800211c:	2103      	movs	r1, #3
 800211e:	4099      	lsls	r1, r3
 8002120:	000b      	movs	r3, r1
 8002122:	43db      	mvns	r3, r3
 8002124:	0019      	movs	r1, r3
 8002126:	183b      	adds	r3, r7, r0
 8002128:	681b      	ldr	r3, [r3, #0]
 800212a:	400a      	ands	r2, r1
 800212c:	601a      	str	r2, [r3, #0]
	if(pull == noPull) pin.port->PUPDR &=~ (3 << (pin.pin * 2));
 800212e:	1dfb      	adds	r3, r7, #7
 8002130:	781b      	ldrb	r3, [r3, #0]
 8002132:	2b00      	cmp	r3, #0
 8002134:	d110      	bne.n	8002158 <io_in+0x5c>
 8002136:	2008      	movs	r0, #8
 8002138:	183b      	adds	r3, r7, r0
 800213a:	681b      	ldr	r3, [r3, #0]
 800213c:	68da      	ldr	r2, [r3, #12]
 800213e:	183b      	adds	r3, r7, r0
 8002140:	791b      	ldrb	r3, [r3, #4]
 8002142:	005b      	lsls	r3, r3, #1
 8002144:	2103      	movs	r1, #3
 8002146:	4099      	lsls	r1, r3
 8002148:	000b      	movs	r3, r1
 800214a:	43db      	mvns	r3, r3
 800214c:	0019      	movs	r1, r3
 800214e:	183b      	adds	r3, r7, r0
 8002150:	681b      	ldr	r3, [r3, #0]
 8002152:	400a      	ands	r2, r1
 8002154:	60da      	str	r2, [r3, #12]
	else if(pull == pullDown) {pin.port->PUPDR &=~ (1 << (pin.pin * 2));pin.port->PUPDR |= 2 << (pin.pin * 2);}
	else if(pull == pullUp) {pin.port->PUPDR &=~ (2 << (pin.pin * 2));pin.port->PUPDR |= 1 << (pin.pin * 2);}
}
 8002156:	e044      	b.n	80021e2 <io_in+0xe6>
	else if(pull == pullDown) {pin.port->PUPDR &=~ (1 << (pin.pin * 2));pin.port->PUPDR |= 2 << (pin.pin * 2);}
 8002158:	1dfb      	adds	r3, r7, #7
 800215a:	781b      	ldrb	r3, [r3, #0]
 800215c:	2b02      	cmp	r3, #2
 800215e:	d11e      	bne.n	800219e <io_in+0xa2>
 8002160:	2008      	movs	r0, #8
 8002162:	183b      	adds	r3, r7, r0
 8002164:	681b      	ldr	r3, [r3, #0]
 8002166:	68da      	ldr	r2, [r3, #12]
 8002168:	183b      	adds	r3, r7, r0
 800216a:	791b      	ldrb	r3, [r3, #4]
 800216c:	005b      	lsls	r3, r3, #1
 800216e:	2101      	movs	r1, #1
 8002170:	4099      	lsls	r1, r3
 8002172:	000b      	movs	r3, r1
 8002174:	43db      	mvns	r3, r3
 8002176:	0019      	movs	r1, r3
 8002178:	183b      	adds	r3, r7, r0
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	400a      	ands	r2, r1
 800217e:	60da      	str	r2, [r3, #12]
 8002180:	183b      	adds	r3, r7, r0
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	68da      	ldr	r2, [r3, #12]
 8002186:	183b      	adds	r3, r7, r0
 8002188:	791b      	ldrb	r3, [r3, #4]
 800218a:	005b      	lsls	r3, r3, #1
 800218c:	2102      	movs	r1, #2
 800218e:	4099      	lsls	r1, r3
 8002190:	000b      	movs	r3, r1
 8002192:	0019      	movs	r1, r3
 8002194:	183b      	adds	r3, r7, r0
 8002196:	681b      	ldr	r3, [r3, #0]
 8002198:	430a      	orrs	r2, r1
 800219a:	60da      	str	r2, [r3, #12]
}
 800219c:	e021      	b.n	80021e2 <io_in+0xe6>
	else if(pull == pullUp) {pin.port->PUPDR &=~ (2 << (pin.pin * 2));pin.port->PUPDR |= 1 << (pin.pin * 2);}
 800219e:	1dfb      	adds	r3, r7, #7
 80021a0:	781b      	ldrb	r3, [r3, #0]
 80021a2:	2b01      	cmp	r3, #1
 80021a4:	d11d      	bne.n	80021e2 <io_in+0xe6>
 80021a6:	2008      	movs	r0, #8
 80021a8:	183b      	adds	r3, r7, r0
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	68da      	ldr	r2, [r3, #12]
 80021ae:	183b      	adds	r3, r7, r0
 80021b0:	791b      	ldrb	r3, [r3, #4]
 80021b2:	005b      	lsls	r3, r3, #1
 80021b4:	2102      	movs	r1, #2
 80021b6:	4099      	lsls	r1, r3
 80021b8:	000b      	movs	r3, r1
 80021ba:	43db      	mvns	r3, r3
 80021bc:	0019      	movs	r1, r3
 80021be:	183b      	adds	r3, r7, r0
 80021c0:	681b      	ldr	r3, [r3, #0]
 80021c2:	400a      	ands	r2, r1
 80021c4:	60da      	str	r2, [r3, #12]
 80021c6:	183b      	adds	r3, r7, r0
 80021c8:	681b      	ldr	r3, [r3, #0]
 80021ca:	68da      	ldr	r2, [r3, #12]
 80021cc:	183b      	adds	r3, r7, r0
 80021ce:	791b      	ldrb	r3, [r3, #4]
 80021d0:	005b      	lsls	r3, r3, #1
 80021d2:	2101      	movs	r1, #1
 80021d4:	4099      	lsls	r1, r3
 80021d6:	000b      	movs	r3, r1
 80021d8:	0019      	movs	r1, r3
 80021da:	183b      	adds	r3, r7, r0
 80021dc:	681b      	ldr	r3, [r3, #0]
 80021de:	430a      	orrs	r2, r1
 80021e0:	60da      	str	r2, [r3, #12]
}
 80021e2:	46c0      	nop			; (mov r8, r8)
 80021e4:	46bd      	mov	sp, r7
 80021e6:	b005      	add	sp, #20
 80021e8:	bd90      	pop	{r4, r7, pc}

080021ea <io_out>:
void io_out(GPIO pin) {pin.port->MODER &=~ (2 << (pin.pin * 2));pin.port->MODER |=  1 << (pin.pin * 2);}
 80021ea:	b580      	push	{r7, lr}
 80021ec:	b082      	sub	sp, #8
 80021ee:	af00      	add	r7, sp, #0
 80021f0:	003b      	movs	r3, r7
 80021f2:	6018      	str	r0, [r3, #0]
 80021f4:	6059      	str	r1, [r3, #4]
 80021f6:	003b      	movs	r3, r7
 80021f8:	681b      	ldr	r3, [r3, #0]
 80021fa:	681a      	ldr	r2, [r3, #0]
 80021fc:	003b      	movs	r3, r7
 80021fe:	791b      	ldrb	r3, [r3, #4]
 8002200:	005b      	lsls	r3, r3, #1
 8002202:	2102      	movs	r1, #2
 8002204:	4099      	lsls	r1, r3
 8002206:	000b      	movs	r3, r1
 8002208:	43db      	mvns	r3, r3
 800220a:	0019      	movs	r1, r3
 800220c:	003b      	movs	r3, r7
 800220e:	681b      	ldr	r3, [r3, #0]
 8002210:	400a      	ands	r2, r1
 8002212:	601a      	str	r2, [r3, #0]
 8002214:	003b      	movs	r3, r7
 8002216:	681b      	ldr	r3, [r3, #0]
 8002218:	681a      	ldr	r2, [r3, #0]
 800221a:	003b      	movs	r3, r7
 800221c:	791b      	ldrb	r3, [r3, #4]
 800221e:	005b      	lsls	r3, r3, #1
 8002220:	2101      	movs	r1, #1
 8002222:	4099      	lsls	r1, r3
 8002224:	000b      	movs	r3, r1
 8002226:	0019      	movs	r1, r3
 8002228:	003b      	movs	r3, r7
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	430a      	orrs	r2, r1
 800222e:	601a      	str	r2, [r3, #0]
 8002230:	46c0      	nop			; (mov r8, r8)
 8002232:	46bd      	mov	sp, r7
 8002234:	b002      	add	sp, #8
 8002236:	bd80      	pop	{r7, pc}

08002238 <io_analogMode>:
		if(value & (1 << x)) port->MODER |= 1 << (x * 2);
		else port->MODER &=~ (1 << (x * 2));
	}
}
/**Analog mode*/
void io_analogMode(GPIO pin) {pin.port->MODER |= 3 << (pin.pin * 2);}
 8002238:	b580      	push	{r7, lr}
 800223a:	b082      	sub	sp, #8
 800223c:	af00      	add	r7, sp, #0
 800223e:	003b      	movs	r3, r7
 8002240:	6018      	str	r0, [r3, #0]
 8002242:	6059      	str	r1, [r3, #4]
 8002244:	003b      	movs	r3, r7
 8002246:	681b      	ldr	r3, [r3, #0]
 8002248:	681a      	ldr	r2, [r3, #0]
 800224a:	003b      	movs	r3, r7
 800224c:	791b      	ldrb	r3, [r3, #4]
 800224e:	005b      	lsls	r3, r3, #1
 8002250:	2103      	movs	r1, #3
 8002252:	4099      	lsls	r1, r3
 8002254:	000b      	movs	r3, r1
 8002256:	0019      	movs	r1, r3
 8002258:	003b      	movs	r3, r7
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	430a      	orrs	r2, r1
 800225e:	601a      	str	r2, [r3, #0]
 8002260:	46c0      	nop			; (mov r8, r8)
 8002262:	46bd      	mov	sp, r7
 8002264:	b002      	add	sp, #8
 8002266:	bd80      	pop	{r7, pc}

08002268 <io_low>:
//================================================ ODR
/**Logic 0*/
void io_low(GPIO pin) {pin.port->ODR &=~ (1 << pin.pin);}
 8002268:	b580      	push	{r7, lr}
 800226a:	b082      	sub	sp, #8
 800226c:	af00      	add	r7, sp, #0
 800226e:	003b      	movs	r3, r7
 8002270:	6018      	str	r0, [r3, #0]
 8002272:	6059      	str	r1, [r3, #4]
 8002274:	003b      	movs	r3, r7
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	695a      	ldr	r2, [r3, #20]
 800227a:	003b      	movs	r3, r7
 800227c:	791b      	ldrb	r3, [r3, #4]
 800227e:	0019      	movs	r1, r3
 8002280:	2301      	movs	r3, #1
 8002282:	408b      	lsls	r3, r1
 8002284:	43db      	mvns	r3, r3
 8002286:	0019      	movs	r1, r3
 8002288:	003b      	movs	r3, r7
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	400a      	ands	r2, r1
 800228e:	615a      	str	r2, [r3, #20]
 8002290:	46c0      	nop			; (mov r8, r8)
 8002292:	46bd      	mov	sp, r7
 8002294:	b002      	add	sp, #8
 8002296:	bd80      	pop	{r7, pc}

08002298 <io_high>:
/**Logic 1*/
void io_high(GPIO pin) {pin.port->ODR |= (1 << pin.pin);}
 8002298:	b580      	push	{r7, lr}
 800229a:	b082      	sub	sp, #8
 800229c:	af00      	add	r7, sp, #0
 800229e:	003b      	movs	r3, r7
 80022a0:	6018      	str	r0, [r3, #0]
 80022a2:	6059      	str	r1, [r3, #4]
 80022a4:	003b      	movs	r3, r7
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	695a      	ldr	r2, [r3, #20]
 80022aa:	003b      	movs	r3, r7
 80022ac:	791b      	ldrb	r3, [r3, #4]
 80022ae:	0019      	movs	r1, r3
 80022b0:	2301      	movs	r3, #1
 80022b2:	408b      	lsls	r3, r1
 80022b4:	0019      	movs	r1, r3
 80022b6:	003b      	movs	r3, r7
 80022b8:	681b      	ldr	r3, [r3, #0]
 80022ba:	430a      	orrs	r2, r1
 80022bc:	615a      	str	r2, [r3, #20]
 80022be:	46c0      	nop			; (mov r8, r8)
 80022c0:	46bd      	mov	sp, r7
 80022c2:	b002      	add	sp, #8
 80022c4:	bd80      	pop	{r7, pc}

080022c6 <io_toggle>:
void io_toggle(GPIO pin) {pin.port->ODR ^= (1 << pin.pin);}
 80022c6:	b580      	push	{r7, lr}
 80022c8:	b082      	sub	sp, #8
 80022ca:	af00      	add	r7, sp, #0
 80022cc:	003b      	movs	r3, r7
 80022ce:	6018      	str	r0, [r3, #0]
 80022d0:	6059      	str	r1, [r3, #4]
 80022d2:	003b      	movs	r3, r7
 80022d4:	681b      	ldr	r3, [r3, #0]
 80022d6:	695a      	ldr	r2, [r3, #20]
 80022d8:	003b      	movs	r3, r7
 80022da:	791b      	ldrb	r3, [r3, #4]
 80022dc:	0019      	movs	r1, r3
 80022de:	2301      	movs	r3, #1
 80022e0:	408b      	lsls	r3, r1
 80022e2:	0019      	movs	r1, r3
 80022e4:	003b      	movs	r3, r7
 80022e6:	681b      	ldr	r3, [r3, #0]
 80022e8:	404a      	eors	r2, r1
 80022ea:	615a      	str	r2, [r3, #20]
 80022ec:	46c0      	nop			; (mov r8, r8)
 80022ee:	46bd      	mov	sp, r7
 80022f0:	b002      	add	sp, #8
 80022f2:	bd80      	pop	{r7, pc}

080022f4 <io_isLow>:
/*Writes into the port*/
void io_writeLogic(PORT port, uint16_t value) {port->ODR = value;}
//================================================ IDR
uint16_t io_read(PORT port) {return port->IDR;}
uint8_t io_isHigh(GPIO pin) {return pin.port->IDR & (1 << pin.pin) ? 1 : 0;}
uint8_t io_isLow(GPIO pin) {return pin.port->IDR & (1 << pin.pin) ? 0 : 1;}
 80022f4:	b580      	push	{r7, lr}
 80022f6:	b082      	sub	sp, #8
 80022f8:	af00      	add	r7, sp, #0
 80022fa:	003b      	movs	r3, r7
 80022fc:	6018      	str	r0, [r3, #0]
 80022fe:	6059      	str	r1, [r3, #4]
 8002300:	003b      	movs	r3, r7
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	691b      	ldr	r3, [r3, #16]
 8002306:	003a      	movs	r2, r7
 8002308:	7912      	ldrb	r2, [r2, #4]
 800230a:	0011      	movs	r1, r2
 800230c:	2201      	movs	r2, #1
 800230e:	408a      	lsls	r2, r1
 8002310:	4013      	ands	r3, r2
 8002312:	425a      	negs	r2, r3
 8002314:	4153      	adcs	r3, r2
 8002316:	b2db      	uxtb	r3, r3
 8002318:	0018      	movs	r0, r3
 800231a:	46bd      	mov	sp, r7
 800231c:	b002      	add	sp, #8
 800231e:	bd80      	pop	{r7, pc}

08002320 <io_speedHigh>:
//================================================ OSPEEDR
void io_speedLow(GPIO pin) {pin.port->OSPEEDR &=~ (3 << (pin.pin * 2));}
void io_speedMedium(GPIO pin) {pin.port->OSPEEDR &=~ (2 << (pin.pin * 2));pin.port->OSPEEDR |= 1 << (pin.pin * 2);}
void io_speedHigh(GPIO pin) {pin.port->OSPEEDR |= 3 << (pin.pin * 2);}
 8002320:	b580      	push	{r7, lr}
 8002322:	b082      	sub	sp, #8
 8002324:	af00      	add	r7, sp, #0
 8002326:	003b      	movs	r3, r7
 8002328:	6018      	str	r0, [r3, #0]
 800232a:	6059      	str	r1, [r3, #4]
 800232c:	003b      	movs	r3, r7
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	689a      	ldr	r2, [r3, #8]
 8002332:	003b      	movs	r3, r7
 8002334:	791b      	ldrb	r3, [r3, #4]
 8002336:	005b      	lsls	r3, r3, #1
 8002338:	2103      	movs	r1, #3
 800233a:	4099      	lsls	r1, r3
 800233c:	000b      	movs	r3, r1
 800233e:	0019      	movs	r1, r3
 8002340:	003b      	movs	r3, r7
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	430a      	orrs	r2, r1
 8002346:	609a      	str	r2, [r3, #8]
 8002348:	46c0      	nop			; (mov r8, r8)
 800234a:	46bd      	mov	sp, r7
 800234c:	b002      	add	sp, #8
 800234e:	bd80      	pop	{r7, pc}

08002350 <__extIntDefaultFunction>:
#define FALLING 2
#define FALLING_RISING 3
#define RISING_FALLING 3

//Function, that doesn't do anything
void __extIntDefaultFunction() {}
 8002350:	b580      	push	{r7, lr}
 8002352:	af00      	add	r7, sp, #0
 8002354:	46c0      	nop			; (mov r8, r8)
 8002356:	46bd      	mov	sp, r7
 8002358:	bd80      	pop	{r7, pc}
	...

0800235c <EXTI0_1_IRQHandler>:
uint8_t io_intFromPin(GPIO pin) {return EXTI->PR & (1 << pin.pin);}

#ifdef __cplusplus
extern "C" {
#endif
void EXTI0_1_IRQHandler() {__extIntFunction();EXTI->PR |= 0xFFFFFFFF;}
 800235c:	b580      	push	{r7, lr}
 800235e:	af00      	add	r7, sp, #0
 8002360:	4b05      	ldr	r3, [pc, #20]	; (8002378 <EXTI0_1_IRQHandler+0x1c>)
 8002362:	681b      	ldr	r3, [r3, #0]
 8002364:	4798      	blx	r3
 8002366:	4b05      	ldr	r3, [pc, #20]	; (800237c <EXTI0_1_IRQHandler+0x20>)
 8002368:	695b      	ldr	r3, [r3, #20]
 800236a:	4b04      	ldr	r3, [pc, #16]	; (800237c <EXTI0_1_IRQHandler+0x20>)
 800236c:	2201      	movs	r2, #1
 800236e:	4252      	negs	r2, r2
 8002370:	615a      	str	r2, [r3, #20]
 8002372:	46c0      	nop			; (mov r8, r8)
 8002374:	46bd      	mov	sp, r7
 8002376:	bd80      	pop	{r7, pc}
 8002378:	20000080 	.word	0x20000080
 800237c:	40010400 	.word	0x40010400

08002380 <EXTI2_3_IRQHandler>:
void EXTI2_3_IRQHandler() {__extIntFunction();EXTI->PR |= 0xFFFFFFFF;}
 8002380:	b580      	push	{r7, lr}
 8002382:	af00      	add	r7, sp, #0
 8002384:	4b05      	ldr	r3, [pc, #20]	; (800239c <EXTI2_3_IRQHandler+0x1c>)
 8002386:	681b      	ldr	r3, [r3, #0]
 8002388:	4798      	blx	r3
 800238a:	4b05      	ldr	r3, [pc, #20]	; (80023a0 <EXTI2_3_IRQHandler+0x20>)
 800238c:	695b      	ldr	r3, [r3, #20]
 800238e:	4b04      	ldr	r3, [pc, #16]	; (80023a0 <EXTI2_3_IRQHandler+0x20>)
 8002390:	2201      	movs	r2, #1
 8002392:	4252      	negs	r2, r2
 8002394:	615a      	str	r2, [r3, #20]
 8002396:	46c0      	nop			; (mov r8, r8)
 8002398:	46bd      	mov	sp, r7
 800239a:	bd80      	pop	{r7, pc}
 800239c:	20000080 	.word	0x20000080
 80023a0:	40010400 	.word	0x40010400

080023a4 <EXTI4_15_IRQHandler>:
void EXTI4_15_IRQHandler() {__extIntFunction();EXTI->PR |= 0xFFFFFFFF;}
 80023a4:	b580      	push	{r7, lr}
 80023a6:	af00      	add	r7, sp, #0
 80023a8:	4b05      	ldr	r3, [pc, #20]	; (80023c0 <EXTI4_15_IRQHandler+0x1c>)
 80023aa:	681b      	ldr	r3, [r3, #0]
 80023ac:	4798      	blx	r3
 80023ae:	4b05      	ldr	r3, [pc, #20]	; (80023c4 <EXTI4_15_IRQHandler+0x20>)
 80023b0:	695b      	ldr	r3, [r3, #20]
 80023b2:	4b04      	ldr	r3, [pc, #16]	; (80023c4 <EXTI4_15_IRQHandler+0x20>)
 80023b4:	2201      	movs	r2, #1
 80023b6:	4252      	negs	r2, r2
 80023b8:	615a      	str	r2, [r3, #20]
 80023ba:	46c0      	nop			; (mov r8, r8)
 80023bc:	46bd      	mov	sp, r7
 80023be:	bd80      	pop	{r7, pc}
 80023c0:	20000080 	.word	0x20000080
 80023c4:	40010400 	.word	0x40010400

080023c8 <__dummy>:


//========================================================================== TIMERS

//It's used as default timers interrupt function
void __dummy() {}
 80023c8:	b580      	push	{r7, lr}
 80023ca:	af00      	add	r7, sp, #0
 80023cc:	46c0      	nop			; (mov r8, r8)
 80023ce:	46bd      	mov	sp, r7
 80023d0:	bd80      	pop	{r7, pc}
	...

080023d4 <TIM1_CC_IRQHandler>:
 * */
#ifdef __cplusplus
extern "C" {
#endif

void TIM1_CC_IRQHandler() {
 80023d4:	b580      	push	{r7, lr}
 80023d6:	af00      	add	r7, sp, #0
	TIM1_int();
 80023d8:	4b04      	ldr	r3, [pc, #16]	; (80023ec <TIM1_CC_IRQHandler+0x18>)
 80023da:	681b      	ldr	r3, [r3, #0]
 80023dc:	4798      	blx	r3
	TIM1->SR = 0x0000;
 80023de:	4b04      	ldr	r3, [pc, #16]	; (80023f0 <TIM1_CC_IRQHandler+0x1c>)
 80023e0:	2200      	movs	r2, #0
 80023e2:	611a      	str	r2, [r3, #16]
}
 80023e4:	46c0      	nop			; (mov r8, r8)
 80023e6:	46bd      	mov	sp, r7
 80023e8:	bd80      	pop	{r7, pc}
 80023ea:	46c0      	nop			; (mov r8, r8)
 80023ec:	20000084 	.word	0x20000084
 80023f0:	40012c00 	.word	0x40012c00

080023f4 <TIM1_BRK_UP_TRG_COM_IRQHandler>:

void TIM1_BRK_UP_TRG_COM_IRQHandler() {
 80023f4:	b580      	push	{r7, lr}
 80023f6:	af00      	add	r7, sp, #0
	TIM1_int();
 80023f8:	4b04      	ldr	r3, [pc, #16]	; (800240c <TIM1_BRK_UP_TRG_COM_IRQHandler+0x18>)
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	4798      	blx	r3
	TIM1->SR = 0x0000;
 80023fe:	4b04      	ldr	r3, [pc, #16]	; (8002410 <TIM1_BRK_UP_TRG_COM_IRQHandler+0x1c>)
 8002400:	2200      	movs	r2, #0
 8002402:	611a      	str	r2, [r3, #16]
}
 8002404:	46c0      	nop			; (mov r8, r8)
 8002406:	46bd      	mov	sp, r7
 8002408:	bd80      	pop	{r7, pc}
 800240a:	46c0      	nop			; (mov r8, r8)
 800240c:	20000084 	.word	0x20000084
 8002410:	40012c00 	.word	0x40012c00

08002414 <TIM3_IRQHandler>:

void TIM3_IRQHandler() {
 8002414:	b580      	push	{r7, lr}
 8002416:	af00      	add	r7, sp, #0
	TIM3_int();
 8002418:	4b04      	ldr	r3, [pc, #16]	; (800242c <TIM3_IRQHandler+0x18>)
 800241a:	681b      	ldr	r3, [r3, #0]
 800241c:	4798      	blx	r3
	TIM3->SR = 0x0000;
 800241e:	4b04      	ldr	r3, [pc, #16]	; (8002430 <TIM3_IRQHandler+0x1c>)
 8002420:	2200      	movs	r2, #0
 8002422:	611a      	str	r2, [r3, #16]
}
 8002424:	46c0      	nop			; (mov r8, r8)
 8002426:	46bd      	mov	sp, r7
 8002428:	bd80      	pop	{r7, pc}
 800242a:	46c0      	nop			; (mov r8, r8)
 800242c:	20000088 	.word	0x20000088
 8002430:	40000400 	.word	0x40000400

08002434 <TIM14_IRQHandler>:

void TIM14_IRQHandler() {
 8002434:	b580      	push	{r7, lr}
 8002436:	af00      	add	r7, sp, #0
	TIM14_int();
 8002438:	4b04      	ldr	r3, [pc, #16]	; (800244c <TIM14_IRQHandler+0x18>)
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	4798      	blx	r3
	TIM14->SR = 0x0000;
 800243e:	4b04      	ldr	r3, [pc, #16]	; (8002450 <TIM14_IRQHandler+0x1c>)
 8002440:	2200      	movs	r2, #0
 8002442:	611a      	str	r2, [r3, #16]
}
 8002444:	46c0      	nop			; (mov r8, r8)
 8002446:	46bd      	mov	sp, r7
 8002448:	bd80      	pop	{r7, pc}
 800244a:	46c0      	nop			; (mov r8, r8)
 800244c:	2000008c 	.word	0x2000008c
 8002450:	40002000 	.word	0x40002000

08002454 <TIM16_IRQHandler>:

void TIM16_IRQHandler() {
 8002454:	b580      	push	{r7, lr}
 8002456:	af00      	add	r7, sp, #0
	TIM16_int();
 8002458:	4b04      	ldr	r3, [pc, #16]	; (800246c <TIM16_IRQHandler+0x18>)
 800245a:	681b      	ldr	r3, [r3, #0]
 800245c:	4798      	blx	r3
	TIM16->SR = 0x0000;
 800245e:	4b04      	ldr	r3, [pc, #16]	; (8002470 <TIM16_IRQHandler+0x1c>)
 8002460:	2200      	movs	r2, #0
 8002462:	611a      	str	r2, [r3, #16]
}
 8002464:	46c0      	nop			; (mov r8, r8)
 8002466:	46bd      	mov	sp, r7
 8002468:	bd80      	pop	{r7, pc}
 800246a:	46c0      	nop			; (mov r8, r8)
 800246c:	20000090 	.word	0x20000090
 8002470:	40014400 	.word	0x40014400

08002474 <TIM17_IRQHandler>:

void TIM17_IRQHandler() {
 8002474:	b580      	push	{r7, lr}
 8002476:	af00      	add	r7, sp, #0
	TIM17_int();
 8002478:	4b04      	ldr	r3, [pc, #16]	; (800248c <TIM17_IRQHandler+0x18>)
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	4798      	blx	r3
	TIM17->SR = 0x0000;
 800247e:	4b04      	ldr	r3, [pc, #16]	; (8002490 <TIM17_IRQHandler+0x1c>)
 8002480:	2200      	movs	r2, #0
 8002482:	611a      	str	r2, [r3, #16]
}
 8002484:	46c0      	nop			; (mov r8, r8)
 8002486:	46bd      	mov	sp, r7
 8002488:	bd80      	pop	{r7, pc}
 800248a:	46c0      	nop			; (mov r8, r8)
 800248c:	20000094 	.word	0x20000094
 8002490:	40014800 	.word	0x40014800

08002494 <TIM_wakeUp>:

/* FUNCTION FOR CONNECTING TIMERS TO CLOCK
 * Unfortunetly, every timer has it's special formula for this purpose,
 * so, there is a need for creating one function, that wakes up desired timer.
 * */
void TIM_wakeUp(TIM_TypeDef *timer) {
 8002494:	b580      	push	{r7, lr}
 8002496:	b082      	sub	sp, #8
 8002498:	af00      	add	r7, sp, #0
 800249a:	6078      	str	r0, [r7, #4]
	if     (timer == TIM1 ) RCC->APB2ENR |= RCC_APB2ENR_TIM1EN;
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	4a1e      	ldr	r2, [pc, #120]	; (8002518 <TIM_wakeUp+0x84>)
 80024a0:	4293      	cmp	r3, r2
 80024a2:	d107      	bne.n	80024b4 <TIM_wakeUp+0x20>
 80024a4:	4b1d      	ldr	r3, [pc, #116]	; (800251c <TIM_wakeUp+0x88>)
 80024a6:	699a      	ldr	r2, [r3, #24]
 80024a8:	4b1c      	ldr	r3, [pc, #112]	; (800251c <TIM_wakeUp+0x88>)
 80024aa:	2180      	movs	r1, #128	; 0x80
 80024ac:	0109      	lsls	r1, r1, #4
 80024ae:	430a      	orrs	r2, r1
 80024b0:	619a      	str	r2, [r3, #24]
	else if(timer == TIM3 ) RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
	else if(timer == TIM14) RCC->APB1ENR |= RCC_APB1ENR_TIM14EN;
	else if(timer == TIM16) RCC->APB2ENR |= RCC_APB2ENR_TIM16EN;
	else if(timer == TIM17) RCC->APB2ENR |= RCC_APB2ENR_TIM17EN;
}
 80024b2:	e02d      	b.n	8002510 <TIM_wakeUp+0x7c>
	else if(timer == TIM3 ) RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	4a1a      	ldr	r2, [pc, #104]	; (8002520 <TIM_wakeUp+0x8c>)
 80024b8:	4293      	cmp	r3, r2
 80024ba:	d106      	bne.n	80024ca <TIM_wakeUp+0x36>
 80024bc:	4b17      	ldr	r3, [pc, #92]	; (800251c <TIM_wakeUp+0x88>)
 80024be:	69da      	ldr	r2, [r3, #28]
 80024c0:	4b16      	ldr	r3, [pc, #88]	; (800251c <TIM_wakeUp+0x88>)
 80024c2:	2102      	movs	r1, #2
 80024c4:	430a      	orrs	r2, r1
 80024c6:	61da      	str	r2, [r3, #28]
}
 80024c8:	e022      	b.n	8002510 <TIM_wakeUp+0x7c>
	else if(timer == TIM14) RCC->APB1ENR |= RCC_APB1ENR_TIM14EN;
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	4a15      	ldr	r2, [pc, #84]	; (8002524 <TIM_wakeUp+0x90>)
 80024ce:	4293      	cmp	r3, r2
 80024d0:	d107      	bne.n	80024e2 <TIM_wakeUp+0x4e>
 80024d2:	4b12      	ldr	r3, [pc, #72]	; (800251c <TIM_wakeUp+0x88>)
 80024d4:	69da      	ldr	r2, [r3, #28]
 80024d6:	4b11      	ldr	r3, [pc, #68]	; (800251c <TIM_wakeUp+0x88>)
 80024d8:	2180      	movs	r1, #128	; 0x80
 80024da:	0049      	lsls	r1, r1, #1
 80024dc:	430a      	orrs	r2, r1
 80024de:	61da      	str	r2, [r3, #28]
}
 80024e0:	e016      	b.n	8002510 <TIM_wakeUp+0x7c>
	else if(timer == TIM16) RCC->APB2ENR |= RCC_APB2ENR_TIM16EN;
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	4a10      	ldr	r2, [pc, #64]	; (8002528 <TIM_wakeUp+0x94>)
 80024e6:	4293      	cmp	r3, r2
 80024e8:	d107      	bne.n	80024fa <TIM_wakeUp+0x66>
 80024ea:	4b0c      	ldr	r3, [pc, #48]	; (800251c <TIM_wakeUp+0x88>)
 80024ec:	699a      	ldr	r2, [r3, #24]
 80024ee:	4b0b      	ldr	r3, [pc, #44]	; (800251c <TIM_wakeUp+0x88>)
 80024f0:	2180      	movs	r1, #128	; 0x80
 80024f2:	0289      	lsls	r1, r1, #10
 80024f4:	430a      	orrs	r2, r1
 80024f6:	619a      	str	r2, [r3, #24]
}
 80024f8:	e00a      	b.n	8002510 <TIM_wakeUp+0x7c>
	else if(timer == TIM17) RCC->APB2ENR |= RCC_APB2ENR_TIM17EN;
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	4a0b      	ldr	r2, [pc, #44]	; (800252c <TIM_wakeUp+0x98>)
 80024fe:	4293      	cmp	r3, r2
 8002500:	d106      	bne.n	8002510 <TIM_wakeUp+0x7c>
 8002502:	4b06      	ldr	r3, [pc, #24]	; (800251c <TIM_wakeUp+0x88>)
 8002504:	699a      	ldr	r2, [r3, #24]
 8002506:	4b05      	ldr	r3, [pc, #20]	; (800251c <TIM_wakeUp+0x88>)
 8002508:	2180      	movs	r1, #128	; 0x80
 800250a:	02c9      	lsls	r1, r1, #11
 800250c:	430a      	orrs	r2, r1
 800250e:	619a      	str	r2, [r3, #24]
}
 8002510:	46c0      	nop			; (mov r8, r8)
 8002512:	46bd      	mov	sp, r7
 8002514:	b002      	add	sp, #8
 8002516:	bd80      	pop	{r7, pc}
 8002518:	40012c00 	.word	0x40012c00
 800251c:	40021000 	.word	0x40021000
 8002520:	40000400 	.word	0x40000400
 8002524:	40002000 	.word	0x40002000
 8002528:	40014400 	.word	0x40014400
 800252c:	40014800 	.word	0x40014800

08002530 <TIM_interruptEnable>:
 *
 * timer - timer, which interrupts have to be enabled, for example TIM1
 * priority - number from 0 to 3 (SysTick has 0, UART has 1)
 * function - name of function to be called on interrupt
 * */
void TIM_interruptEnable(TIM_TypeDef *timer, uint8_t priority, void (*function)()) {
 8002530:	b590      	push	{r4, r7, lr}
 8002532:	b085      	sub	sp, #20
 8002534:	af00      	add	r7, sp, #0
 8002536:	60f8      	str	r0, [r7, #12]
 8002538:	607a      	str	r2, [r7, #4]
 800253a:	230b      	movs	r3, #11
 800253c:	18fb      	adds	r3, r7, r3
 800253e:	1c0a      	adds	r2, r1, #0
 8002540:	701a      	strb	r2, [r3, #0]
	if(timer == TIM1) {
 8002542:	68fb      	ldr	r3, [r7, #12]
 8002544:	4a32      	ldr	r2, [pc, #200]	; (8002610 <TIM_interruptEnable+0xe0>)
 8002546:	4293      	cmp	r3, r2
 8002548:	d116      	bne.n	8002578 <TIM_interruptEnable+0x48>
		TIM1_int = function;
 800254a:	4b32      	ldr	r3, [pc, #200]	; (8002614 <TIM_interruptEnable+0xe4>)
 800254c:	687a      	ldr	r2, [r7, #4]
 800254e:	601a      	str	r2, [r3, #0]
		NVIC_EnableIRQ(TIM1_BRK_UP_TRG_COM_IRQn);
 8002550:	200d      	movs	r0, #13
 8002552:	f7ff fc61 	bl	8001e18 <NVIC_EnableIRQ>
		NVIC_SetPriority(TIM1_BRK_UP_TRG_COM_IRQn, priority);
 8002556:	240b      	movs	r4, #11
 8002558:	193b      	adds	r3, r7, r4
 800255a:	781b      	ldrb	r3, [r3, #0]
 800255c:	0019      	movs	r1, r3
 800255e:	200d      	movs	r0, #13
 8002560:	f7ff fc70 	bl	8001e44 <NVIC_SetPriority>
		NVIC_EnableIRQ(TIM1_CC_IRQn);
 8002564:	200e      	movs	r0, #14
 8002566:	f7ff fc57 	bl	8001e18 <NVIC_EnableIRQ>
		NVIC_SetPriority(TIM1_CC_IRQn, priority);
 800256a:	193b      	adds	r3, r7, r4
 800256c:	781b      	ldrb	r3, [r3, #0]
 800256e:	0019      	movs	r1, r3
 8002570:	200e      	movs	r0, #14
 8002572:	f7ff fc67 	bl	8001e44 <NVIC_SetPriority>
	else if(timer == TIM17) {
		TIM17_int = function;
		NVIC_EnableIRQ(TIM17_IRQn);
		NVIC_SetPriority(TIM17_IRQn, priority);
	}
}
 8002576:	e046      	b.n	8002606 <TIM_interruptEnable+0xd6>
	else if(timer == TIM3) {
 8002578:	68fb      	ldr	r3, [r7, #12]
 800257a:	4a27      	ldr	r2, [pc, #156]	; (8002618 <TIM_interruptEnable+0xe8>)
 800257c:	4293      	cmp	r3, r2
 800257e:	d10d      	bne.n	800259c <TIM_interruptEnable+0x6c>
		TIM3_int = function;
 8002580:	4b26      	ldr	r3, [pc, #152]	; (800261c <TIM_interruptEnable+0xec>)
 8002582:	687a      	ldr	r2, [r7, #4]
 8002584:	601a      	str	r2, [r3, #0]
		NVIC_EnableIRQ(TIM3_IRQn);
 8002586:	2010      	movs	r0, #16
 8002588:	f7ff fc46 	bl	8001e18 <NVIC_EnableIRQ>
		NVIC_SetPriority(TIM3_IRQn, priority);
 800258c:	230b      	movs	r3, #11
 800258e:	18fb      	adds	r3, r7, r3
 8002590:	781b      	ldrb	r3, [r3, #0]
 8002592:	0019      	movs	r1, r3
 8002594:	2010      	movs	r0, #16
 8002596:	f7ff fc55 	bl	8001e44 <NVIC_SetPriority>
}
 800259a:	e034      	b.n	8002606 <TIM_interruptEnable+0xd6>
	else if(timer == TIM14) {
 800259c:	68fb      	ldr	r3, [r7, #12]
 800259e:	4a20      	ldr	r2, [pc, #128]	; (8002620 <TIM_interruptEnable+0xf0>)
 80025a0:	4293      	cmp	r3, r2
 80025a2:	d10d      	bne.n	80025c0 <TIM_interruptEnable+0x90>
		TIM14_int = function;
 80025a4:	4b1f      	ldr	r3, [pc, #124]	; (8002624 <TIM_interruptEnable+0xf4>)
 80025a6:	687a      	ldr	r2, [r7, #4]
 80025a8:	601a      	str	r2, [r3, #0]
		NVIC_EnableIRQ(TIM14_IRQn);
 80025aa:	2013      	movs	r0, #19
 80025ac:	f7ff fc34 	bl	8001e18 <NVIC_EnableIRQ>
		NVIC_SetPriority(TIM14_IRQn, priority);
 80025b0:	230b      	movs	r3, #11
 80025b2:	18fb      	adds	r3, r7, r3
 80025b4:	781b      	ldrb	r3, [r3, #0]
 80025b6:	0019      	movs	r1, r3
 80025b8:	2013      	movs	r0, #19
 80025ba:	f7ff fc43 	bl	8001e44 <NVIC_SetPriority>
}
 80025be:	e022      	b.n	8002606 <TIM_interruptEnable+0xd6>
	else if(timer == TIM16) {
 80025c0:	68fb      	ldr	r3, [r7, #12]
 80025c2:	4a19      	ldr	r2, [pc, #100]	; (8002628 <TIM_interruptEnable+0xf8>)
 80025c4:	4293      	cmp	r3, r2
 80025c6:	d10d      	bne.n	80025e4 <TIM_interruptEnable+0xb4>
		TIM16_int = function;
 80025c8:	4b18      	ldr	r3, [pc, #96]	; (800262c <TIM_interruptEnable+0xfc>)
 80025ca:	687a      	ldr	r2, [r7, #4]
 80025cc:	601a      	str	r2, [r3, #0]
		NVIC_EnableIRQ(TIM16_IRQn);
 80025ce:	2015      	movs	r0, #21
 80025d0:	f7ff fc22 	bl	8001e18 <NVIC_EnableIRQ>
		NVIC_SetPriority(TIM16_IRQn, priority);
 80025d4:	230b      	movs	r3, #11
 80025d6:	18fb      	adds	r3, r7, r3
 80025d8:	781b      	ldrb	r3, [r3, #0]
 80025da:	0019      	movs	r1, r3
 80025dc:	2015      	movs	r0, #21
 80025de:	f7ff fc31 	bl	8001e44 <NVIC_SetPriority>
}
 80025e2:	e010      	b.n	8002606 <TIM_interruptEnable+0xd6>
	else if(timer == TIM17) {
 80025e4:	68fb      	ldr	r3, [r7, #12]
 80025e6:	4a12      	ldr	r2, [pc, #72]	; (8002630 <TIM_interruptEnable+0x100>)
 80025e8:	4293      	cmp	r3, r2
 80025ea:	d10c      	bne.n	8002606 <TIM_interruptEnable+0xd6>
		TIM17_int = function;
 80025ec:	4b11      	ldr	r3, [pc, #68]	; (8002634 <TIM_interruptEnable+0x104>)
 80025ee:	687a      	ldr	r2, [r7, #4]
 80025f0:	601a      	str	r2, [r3, #0]
		NVIC_EnableIRQ(TIM17_IRQn);
 80025f2:	2016      	movs	r0, #22
 80025f4:	f7ff fc10 	bl	8001e18 <NVIC_EnableIRQ>
		NVIC_SetPriority(TIM17_IRQn, priority);
 80025f8:	230b      	movs	r3, #11
 80025fa:	18fb      	adds	r3, r7, r3
 80025fc:	781b      	ldrb	r3, [r3, #0]
 80025fe:	0019      	movs	r1, r3
 8002600:	2016      	movs	r0, #22
 8002602:	f7ff fc1f 	bl	8001e44 <NVIC_SetPriority>
}
 8002606:	46c0      	nop			; (mov r8, r8)
 8002608:	46bd      	mov	sp, r7
 800260a:	b005      	add	sp, #20
 800260c:	bd90      	pop	{r4, r7, pc}
 800260e:	46c0      	nop			; (mov r8, r8)
 8002610:	40012c00 	.word	0x40012c00
 8002614:	20000084 	.word	0x20000084
 8002618:	40000400 	.word	0x40000400
 800261c:	20000088 	.word	0x20000088
 8002620:	40002000 	.word	0x40002000
 8002624:	2000008c 	.word	0x2000008c
 8002628:	40014400 	.word	0x40014400
 800262c:	20000090 	.word	0x20000090
 8002630:	40014800 	.word	0x40014800
 8002634:	20000094 	.word	0x20000094

08002638 <TIM_repeat>:
 * timer - timer given for this purpose (example: TIM1)
 * limit - limit to which the timer has to count (0 - 65535)
 * prescaler - timer will count with frequency of cpu divided by prescaler value (0 - 65535)
 * function - name of function to be called
 * */
void TIM_repeat(TIM_TypeDef *timer, uint16_t limit, uint16_t prescaler, void (*function)()) {
 8002638:	b5b0      	push	{r4, r5, r7, lr}
 800263a:	b084      	sub	sp, #16
 800263c:	af00      	add	r7, sp, #0
 800263e:	60f8      	str	r0, [r7, #12]
 8002640:	0008      	movs	r0, r1
 8002642:	0011      	movs	r1, r2
 8002644:	607b      	str	r3, [r7, #4]
 8002646:	240a      	movs	r4, #10
 8002648:	193b      	adds	r3, r7, r4
 800264a:	1c02      	adds	r2, r0, #0
 800264c:	801a      	strh	r2, [r3, #0]
 800264e:	2508      	movs	r5, #8
 8002650:	197b      	adds	r3, r7, r5
 8002652:	1c0a      	adds	r2, r1, #0
 8002654:	801a      	strh	r2, [r3, #0]
	TIM_wakeUp(timer);
 8002656:	68fb      	ldr	r3, [r7, #12]
 8002658:	0018      	movs	r0, r3
 800265a:	f7ff ff1b 	bl	8002494 <TIM_wakeUp>
	TIM_interruptEnable(timer, 1, function);
 800265e:	687a      	ldr	r2, [r7, #4]
 8002660:	68fb      	ldr	r3, [r7, #12]
 8002662:	2101      	movs	r1, #1
 8002664:	0018      	movs	r0, r3
 8002666:	f7ff ff63 	bl	8002530 <TIM_interruptEnable>
	timer->PSC = prescaler - 1;
 800266a:	197b      	adds	r3, r7, r5
 800266c:	881b      	ldrh	r3, [r3, #0]
 800266e:	3b01      	subs	r3, #1
 8002670:	001a      	movs	r2, r3
 8002672:	68fb      	ldr	r3, [r7, #12]
 8002674:	629a      	str	r2, [r3, #40]	; 0x28
	timer->ARR = limit;
 8002676:	193b      	adds	r3, r7, r4
 8002678:	881a      	ldrh	r2, [r3, #0]
 800267a:	68fb      	ldr	r3, [r7, #12]
 800267c:	62da      	str	r2, [r3, #44]	; 0x2c
	timer->DIER = TIM_DIER_UIE;
 800267e:	68fb      	ldr	r3, [r7, #12]
 8002680:	2201      	movs	r2, #1
 8002682:	60da      	str	r2, [r3, #12]
	timer->CNT = 0;
 8002684:	68fb      	ldr	r3, [r7, #12]
 8002686:	2200      	movs	r2, #0
 8002688:	625a      	str	r2, [r3, #36]	; 0x24
	timer->CR1 = TIM_CR1_CEN;
 800268a:	68fb      	ldr	r3, [r7, #12]
 800268c:	2201      	movs	r2, #1
 800268e:	601a      	str	r2, [r3, #0]
}
 8002690:	46c0      	nop			; (mov r8, r8)
 8002692:	46bd      	mov	sp, r7
 8002694:	b004      	add	sp, #16
 8002696:	bdb0      	pop	{r4, r5, r7, pc}

08002698 <__UART_defaultRXDFunction>:

//Functions for interrupts

/*Data received*/
//Function, that doesn't do anything
void __UART_defaultRXDFunction(char* data, int size) {}
 8002698:	b580      	push	{r7, lr}
 800269a:	b082      	sub	sp, #8
 800269c:	af00      	add	r7, sp, #0
 800269e:	6078      	str	r0, [r7, #4]
 80026a0:	6039      	str	r1, [r7, #0]
 80026a2:	46c0      	nop			; (mov r8, r8)
 80026a4:	46bd      	mov	sp, r7
 80026a6:	b002      	add	sp, #8
 80026a8:	bd80      	pop	{r7, pc}
	...

080026ac <USART1_IRQHandler>:
//extern "C" {} must be if code is compiled as C++, otherwise callbacks completely do not work :/
#ifdef __cplusplus
extern "C" {
#endif

void USART1_IRQHandler() {
 80026ac:	b5b0      	push	{r4, r5, r7, lr}
 80026ae:	af00      	add	r7, sp, #0
	if(USART1->ISR & USART_ISR_RXNE) {	//One byte received
 80026b0:	4b19      	ldr	r3, [pc, #100]	; (8002718 <USART1_IRQHandler+0x6c>)
 80026b2:	69db      	ldr	r3, [r3, #28]
 80026b4:	2220      	movs	r2, #32
 80026b6:	4013      	ands	r3, r2
 80026b8:	d017      	beq.n	80026ea <USART1_IRQHandler+0x3e>
		UART_buffer[UART_dataSize++] = USART1->RDR;
 80026ba:	4b17      	ldr	r3, [pc, #92]	; (8002718 <USART1_IRQHandler+0x6c>)
 80026bc:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80026be:	b298      	uxth	r0, r3
 80026c0:	4b16      	ldr	r3, [pc, #88]	; (800271c <USART1_IRQHandler+0x70>)
 80026c2:	681a      	ldr	r2, [r3, #0]
 80026c4:	4b16      	ldr	r3, [pc, #88]	; (8002720 <USART1_IRQHandler+0x74>)
 80026c6:	881b      	ldrh	r3, [r3, #0]
 80026c8:	1c59      	adds	r1, r3, #1
 80026ca:	b28c      	uxth	r4, r1
 80026cc:	4914      	ldr	r1, [pc, #80]	; (8002720 <USART1_IRQHandler+0x74>)
 80026ce:	800c      	strh	r4, [r1, #0]
 80026d0:	18d3      	adds	r3, r2, r3
 80026d2:	b2c2      	uxtb	r2, r0
 80026d4:	701a      	strb	r2, [r3, #0]
		UART_buffer[UART_dataSize] = 0;	//For easy strings read
 80026d6:	4b11      	ldr	r3, [pc, #68]	; (800271c <USART1_IRQHandler+0x70>)
 80026d8:	681b      	ldr	r3, [r3, #0]
 80026da:	4a11      	ldr	r2, [pc, #68]	; (8002720 <USART1_IRQHandler+0x74>)
 80026dc:	8812      	ldrh	r2, [r2, #0]
 80026de:	189b      	adds	r3, r3, r2
 80026e0:	2200      	movs	r2, #0
 80026e2:	701a      	strb	r2, [r3, #0]
		UART_dataReceived = 0;
 80026e4:	4b0f      	ldr	r3, [pc, #60]	; (8002724 <USART1_IRQHandler+0x78>)
 80026e6:	2200      	movs	r2, #0
 80026e8:	701a      	strb	r2, [r3, #0]
	}
	//Timeout happened, data stopped being received for a timeout time, so it must be an end of data block
	if(USART1->ISR & USART_ISR_RTOF) {UART_dataReceived = 1;__UART_RXDFunction(UART_buffer, UART_dataSize);}
 80026ea:	4b0b      	ldr	r3, [pc, #44]	; (8002718 <USART1_IRQHandler+0x6c>)
 80026ec:	69da      	ldr	r2, [r3, #28]
 80026ee:	2380      	movs	r3, #128	; 0x80
 80026f0:	011b      	lsls	r3, r3, #4
 80026f2:	4013      	ands	r3, r2
 80026f4:	d00a      	beq.n	800270c <USART1_IRQHandler+0x60>
 80026f6:	4b0b      	ldr	r3, [pc, #44]	; (8002724 <USART1_IRQHandler+0x78>)
 80026f8:	2201      	movs	r2, #1
 80026fa:	701a      	strb	r2, [r3, #0]
 80026fc:	4b0a      	ldr	r3, [pc, #40]	; (8002728 <USART1_IRQHandler+0x7c>)
 80026fe:	681a      	ldr	r2, [r3, #0]
 8002700:	4b06      	ldr	r3, [pc, #24]	; (800271c <USART1_IRQHandler+0x70>)
 8002702:	6818      	ldr	r0, [r3, #0]
 8002704:	4b06      	ldr	r3, [pc, #24]	; (8002720 <USART1_IRQHandler+0x74>)
 8002706:	881b      	ldrh	r3, [r3, #0]
 8002708:	0019      	movs	r1, r3
 800270a:	4790      	blx	r2
	USART1->ICR = 0xFFFFF;//clear flags to dispose interrupt
 800270c:	4b02      	ldr	r3, [pc, #8]	; (8002718 <USART1_IRQHandler+0x6c>)
 800270e:	4a07      	ldr	r2, [pc, #28]	; (800272c <USART1_IRQHandler+0x80>)
 8002710:	621a      	str	r2, [r3, #32]
}
 8002712:	46c0      	nop			; (mov r8, r8)
 8002714:	46bd      	mov	sp, r7
 8002716:	bdb0      	pop	{r4, r5, r7, pc}
 8002718:	40013800 	.word	0x40013800
 800271c:	20000120 	.word	0x20000120
 8002720:	20000124 	.word	0x20000124
 8002724:	20000126 	.word	0x20000126
 8002728:	20000098 	.word	0x20000098
 800272c:	000fffff 	.word	0x000fffff

08002730 <ADC_init>:


//========================================================================== ADC

//This function has implemented io_init for desired pin
void ADC_init(GPIO pin) {
 8002730:	b580      	push	{r7, lr}
 8002732:	b082      	sub	sp, #8
 8002734:	af00      	add	r7, sp, #0
 8002736:	003b      	movs	r3, r7
 8002738:	6018      	str	r0, [r3, #0]
 800273a:	6059      	str	r1, [r3, #4]
	RCC->APB2ENR |= RCC_APB2ENR_ADCEN;
 800273c:	4b22      	ldr	r3, [pc, #136]	; (80027c8 <ADC_init+0x98>)
 800273e:	699a      	ldr	r2, [r3, #24]
 8002740:	4b21      	ldr	r3, [pc, #132]	; (80027c8 <ADC_init+0x98>)
 8002742:	2180      	movs	r1, #128	; 0x80
 8002744:	0089      	lsls	r1, r1, #2
 8002746:	430a      	orrs	r2, r1
 8002748:	619a      	str	r2, [r3, #24]
	RCC->CR2 |= RCC_CR2_HSI14ON;
 800274a:	4b1f      	ldr	r3, [pc, #124]	; (80027c8 <ADC_init+0x98>)
 800274c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800274e:	4b1e      	ldr	r3, [pc, #120]	; (80027c8 <ADC_init+0x98>)
 8002750:	2101      	movs	r1, #1
 8002752:	430a      	orrs	r2, r1
 8002754:	635a      	str	r2, [r3, #52]	; 0x34
	while(!(RCC->CR2 & RCC_CR2_HSI14RDY));
 8002756:	46c0      	nop			; (mov r8, r8)
 8002758:	4b1b      	ldr	r3, [pc, #108]	; (80027c8 <ADC_init+0x98>)
 800275a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800275c:	2202      	movs	r2, #2
 800275e:	4013      	ands	r3, r2
 8002760:	d0fa      	beq.n	8002758 <ADC_init+0x28>
	ADC1->CFGR2 |= ADC_CFGR2_CKMODE;
 8002762:	4b1a      	ldr	r3, [pc, #104]	; (80027cc <ADC_init+0x9c>)
 8002764:	691a      	ldr	r2, [r3, #16]
 8002766:	4b19      	ldr	r3, [pc, #100]	; (80027cc <ADC_init+0x9c>)
 8002768:	21c0      	movs	r1, #192	; 0xc0
 800276a:	0609      	lsls	r1, r1, #24
 800276c:	430a      	orrs	r2, r1
 800276e:	611a      	str	r2, [r3, #16]
	ADC1->CR |= ADC_CR_ADEN;
 8002770:	4b16      	ldr	r3, [pc, #88]	; (80027cc <ADC_init+0x9c>)
 8002772:	689a      	ldr	r2, [r3, #8]
 8002774:	4b15      	ldr	r3, [pc, #84]	; (80027cc <ADC_init+0x9c>)
 8002776:	2101      	movs	r1, #1
 8002778:	430a      	orrs	r2, r1
 800277a:	609a      	str	r2, [r3, #8]
	while(!(ADC1->ISR & ADC_ISR_ADRDY));
 800277c:	46c0      	nop			; (mov r8, r8)
 800277e:	4b13      	ldr	r3, [pc, #76]	; (80027cc <ADC_init+0x9c>)
 8002780:	681b      	ldr	r3, [r3, #0]
 8002782:	2201      	movs	r2, #1
 8002784:	4013      	ands	r3, r2
 8002786:	d0fa      	beq.n	800277e <ADC_init+0x4e>
	ADC1->CHSELR = 1 << pin.pin;
 8002788:	003b      	movs	r3, r7
 800278a:	791b      	ldrb	r3, [r3, #4]
 800278c:	001a      	movs	r2, r3
 800278e:	2301      	movs	r3, #1
 8002790:	4093      	lsls	r3, r2
 8002792:	001a      	movs	r2, r3
 8002794:	4b0d      	ldr	r3, [pc, #52]	; (80027cc <ADC_init+0x9c>)
 8002796:	629a      	str	r2, [r3, #40]	; 0x28
	ADC->CCR = ADC_CCR_VREFEN;
 8002798:	4b0d      	ldr	r3, [pc, #52]	; (80027d0 <ADC_init+0xa0>)
 800279a:	2280      	movs	r2, #128	; 0x80
 800279c:	03d2      	lsls	r2, r2, #15
 800279e:	601a      	str	r2, [r3, #0]
	ADC1->SMPR |= 0x7;
 80027a0:	4b0a      	ldr	r3, [pc, #40]	; (80027cc <ADC_init+0x9c>)
 80027a2:	695a      	ldr	r2, [r3, #20]
 80027a4:	4b09      	ldr	r3, [pc, #36]	; (80027cc <ADC_init+0x9c>)
 80027a6:	2107      	movs	r1, #7
 80027a8:	430a      	orrs	r2, r1
 80027aa:	615a      	str	r2, [r3, #20]
	io_init(pin.port);
 80027ac:	003b      	movs	r3, r7
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	0018      	movs	r0, r3
 80027b2:	f7ff fc4f 	bl	8002054 <io_init>
	io_analogMode(pin);
 80027b6:	003b      	movs	r3, r7
 80027b8:	6818      	ldr	r0, [r3, #0]
 80027ba:	6859      	ldr	r1, [r3, #4]
 80027bc:	f7ff fd3c 	bl	8002238 <io_analogMode>
}
 80027c0:	46c0      	nop			; (mov r8, r8)
 80027c2:	46bd      	mov	sp, r7
 80027c4:	b002      	add	sp, #8
 80027c6:	bd80      	pop	{r7, pc}
 80027c8:	40021000 	.word	0x40021000
 80027cc:	40012400 	.word	0x40012400
 80027d0:	40012708 	.word	0x40012708

080027d4 <ADC_setPin>:
void ADC_disable() {
	ADC1->CR &=~ ADC_CR_ADEN;
}

void ADC_setPin(GPIO pin) {
 80027d4:	b580      	push	{r7, lr}
 80027d6:	b082      	sub	sp, #8
 80027d8:	af00      	add	r7, sp, #0
 80027da:	003b      	movs	r3, r7
 80027dc:	6018      	str	r0, [r3, #0]
 80027de:	6059      	str	r1, [r3, #4]
	ADC1->CHSELR = 1 << pin.pin;
 80027e0:	003b      	movs	r3, r7
 80027e2:	791b      	ldrb	r3, [r3, #4]
 80027e4:	001a      	movs	r2, r3
 80027e6:	2301      	movs	r3, #1
 80027e8:	4093      	lsls	r3, r2
 80027ea:	001a      	movs	r2, r3
 80027ec:	4b07      	ldr	r3, [pc, #28]	; (800280c <ADC_setPin+0x38>)
 80027ee:	629a      	str	r2, [r3, #40]	; 0x28
	io_init(pin.port);
 80027f0:	003b      	movs	r3, r7
 80027f2:	681b      	ldr	r3, [r3, #0]
 80027f4:	0018      	movs	r0, r3
 80027f6:	f7ff fc2d 	bl	8002054 <io_init>
	io_analogMode(pin);
 80027fa:	003b      	movs	r3, r7
 80027fc:	6818      	ldr	r0, [r3, #0]
 80027fe:	6859      	ldr	r1, [r3, #4]
 8002800:	f7ff fd1a 	bl	8002238 <io_analogMode>
}
 8002804:	46c0      	nop			; (mov r8, r8)
 8002806:	46bd      	mov	sp, r7
 8002808:	b002      	add	sp, #8
 800280a:	bd80      	pop	{r7, pc}
 800280c:	40012400 	.word	0x40012400

08002810 <ADC_sample>:

//max value returned is 4095
uint16_t ADC_sample() {
 8002810:	b580      	push	{r7, lr}
 8002812:	af00      	add	r7, sp, #0
	ADC1->CR |= ADC_CR_ADSTART;
 8002814:	4b08      	ldr	r3, [pc, #32]	; (8002838 <ADC_sample+0x28>)
 8002816:	689a      	ldr	r2, [r3, #8]
 8002818:	4b07      	ldr	r3, [pc, #28]	; (8002838 <ADC_sample+0x28>)
 800281a:	2104      	movs	r1, #4
 800281c:	430a      	orrs	r2, r1
 800281e:	609a      	str	r2, [r3, #8]
	while(!(ADC1->ISR & ADC_ISR_EOC));
 8002820:	46c0      	nop			; (mov r8, r8)
 8002822:	4b05      	ldr	r3, [pc, #20]	; (8002838 <ADC_sample+0x28>)
 8002824:	681b      	ldr	r3, [r3, #0]
 8002826:	2204      	movs	r2, #4
 8002828:	4013      	ands	r3, r2
 800282a:	d0fa      	beq.n	8002822 <ADC_sample+0x12>
	return ADC1->DR;
 800282c:	4b02      	ldr	r3, [pc, #8]	; (8002838 <ADC_sample+0x28>)
 800282e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002830:	b29b      	uxth	r3, r3
}
 8002832:	0018      	movs	r0, r3
 8002834:	46bd      	mov	sp, r7
 8002836:	bd80      	pop	{r7, pc}
 8002838:	40012400 	.word	0x40012400

0800283c <stepper_createMotor>:
int __steppersCount = 0;
uint32_t __stepper_frequency = 0;


//stepper_initMotor(TIMER, DIR_PIN, STEP_PIN, ENABLE_PIN)
stepper stepper_createMotor(GPIO step, GPIO dir, GPIO enable) {
 800283c:	b5b0      	push	{r4, r5, r7, lr}
 800283e:	b086      	sub	sp, #24
 8002840:	af00      	add	r7, sp, #0
 8002842:	2408      	movs	r4, #8
 8002844:	0025      	movs	r5, r4
 8002846:	193c      	adds	r4, r7, r4
 8002848:	6020      	str	r0, [r4, #0]
 800284a:	6061      	str	r1, [r4, #4]
 800284c:	0039      	movs	r1, r7
 800284e:	600a      	str	r2, [r1, #0]
 8002850:	604b      	str	r3, [r1, #4]
	io_init(step.port);
 8002852:	002c      	movs	r4, r5
 8002854:	193b      	adds	r3, r7, r4
 8002856:	681b      	ldr	r3, [r3, #0]
 8002858:	0018      	movs	r0, r3
 800285a:	f7ff fbfb 	bl	8002054 <io_init>
	io_init(dir.port);
 800285e:	003b      	movs	r3, r7
 8002860:	681b      	ldr	r3, [r3, #0]
 8002862:	0018      	movs	r0, r3
 8002864:	f7ff fbf6 	bl	8002054 <io_init>
	io_init(enable.port);
 8002868:	2528      	movs	r5, #40	; 0x28
 800286a:	197b      	adds	r3, r7, r5
 800286c:	681b      	ldr	r3, [r3, #0]
 800286e:	0018      	movs	r0, r3
 8002870:	f7ff fbf0 	bl	8002054 <io_init>
	io_out(step);
 8002874:	193b      	adds	r3, r7, r4
 8002876:	6818      	ldr	r0, [r3, #0]
 8002878:	6859      	ldr	r1, [r3, #4]
 800287a:	f7ff fcb6 	bl	80021ea <io_out>
	io_out(dir);
 800287e:	003b      	movs	r3, r7
 8002880:	6818      	ldr	r0, [r3, #0]
 8002882:	6859      	ldr	r1, [r3, #4]
 8002884:	f7ff fcb1 	bl	80021ea <io_out>
	io_out(enable);
 8002888:	197b      	adds	r3, r7, r5
 800288a:	6818      	ldr	r0, [r3, #0]
 800288c:	6859      	ldr	r1, [r3, #4]
 800288e:	f7ff fcac 	bl	80021ea <io_out>
	io_low(dir);
 8002892:	003b      	movs	r3, r7
 8002894:	6818      	ldr	r0, [r3, #0]
 8002896:	6859      	ldr	r1, [r3, #4]
 8002898:	f7ff fce6 	bl	8002268 <io_low>
	io_low(enable);
 800289c:	197b      	adds	r3, r7, r5
 800289e:	6818      	ldr	r0, [r3, #0]
 80028a0:	6859      	ldr	r1, [r3, #4]
 80028a2:	f7ff fce1 	bl	8002268 <io_low>
	io_speedHigh(step);
 80028a6:	193b      	adds	r3, r7, r4
 80028a8:	6818      	ldr	r0, [r3, #0]
 80028aa:	6859      	ldr	r1, [r3, #4]
 80028ac:	f7ff fd38 	bl	8002320 <io_speedHigh>
	io_speedHigh(dir);
 80028b0:	003b      	movs	r3, r7
 80028b2:	6818      	ldr	r0, [r3, #0]
 80028b4:	6859      	ldr	r1, [r3, #4]
 80028b6:	f7ff fd33 	bl	8002320 <io_speedHigh>
	io_speedHigh(enable);
 80028ba:	197b      	adds	r3, r7, r5
 80028bc:	6818      	ldr	r0, [r3, #0]
 80028be:	6859      	ldr	r1, [r3, #4]
 80028c0:	f7ff fd2e 	bl	8002320 <io_speedHigh>
	stepper s = malloc(sizeof(_stepper));
 80028c4:	2024      	movs	r0, #36	; 0x24
 80028c6:	f000 fc15 	bl	80030f4 <malloc>
 80028ca:	0003      	movs	r3, r0
 80028cc:	617b      	str	r3, [r7, #20]
	s->step = step;
 80028ce:	697b      	ldr	r3, [r7, #20]
 80028d0:	193a      	adds	r2, r7, r4
 80028d2:	ca03      	ldmia	r2!, {r0, r1}
 80028d4:	c303      	stmia	r3!, {r0, r1}
	s->dir = dir;
 80028d6:	697b      	ldr	r3, [r7, #20]
 80028d8:	003a      	movs	r2, r7
 80028da:	3308      	adds	r3, #8
 80028dc:	ca03      	ldmia	r2!, {r0, r1}
 80028de:	c303      	stmia	r3!, {r0, r1}
	s->enable = enable;
 80028e0:	697b      	ldr	r3, [r7, #20]
 80028e2:	197a      	adds	r2, r7, r5
 80028e4:	3310      	adds	r3, #16
 80028e6:	ca03      	ldmia	r2!, {r0, r1}
 80028e8:	c303      	stmia	r3!, {r0, r1}
	s->steps = 0;
 80028ea:	697b      	ldr	r3, [r7, #20]
 80028ec:	2200      	movs	r2, #0
 80028ee:	619a      	str	r2, [r3, #24]
	s->prescaler = 1;
 80028f0:	697b      	ldr	r3, [r7, #20]
 80028f2:	2201      	movs	r2, #1
 80028f4:	61da      	str	r2, [r3, #28]
	s->counter = 0;
 80028f6:	697b      	ldr	r3, [r7, #20]
 80028f8:	2200      	movs	r2, #0
 80028fa:	621a      	str	r2, [r3, #32]
	__steppers[__steppersCount++] = s;
 80028fc:	4b06      	ldr	r3, [pc, #24]	; (8002918 <stepper_createMotor+0xdc>)
 80028fe:	681b      	ldr	r3, [r3, #0]
 8002900:	1c59      	adds	r1, r3, #1
 8002902:	4a05      	ldr	r2, [pc, #20]	; (8002918 <stepper_createMotor+0xdc>)
 8002904:	6011      	str	r1, [r2, #0]
 8002906:	4a05      	ldr	r2, [pc, #20]	; (800291c <stepper_createMotor+0xe0>)
 8002908:	009b      	lsls	r3, r3, #2
 800290a:	6979      	ldr	r1, [r7, #20]
 800290c:	5099      	str	r1, [r3, r2]
	return s;
 800290e:	697b      	ldr	r3, [r7, #20]
}
 8002910:	0018      	movs	r0, r3
 8002912:	46bd      	mov	sp, r7
 8002914:	b006      	add	sp, #24
 8002916:	bdb0      	pop	{r4, r5, r7, pc}
 8002918:	20000128 	.word	0x20000128
 800291c:	20000140 	.word	0x20000140

08002920 <__stepper_stepMotors>:


void __stepper_stepMotors() {
 8002920:	b580      	push	{r7, lr}
 8002922:	b082      	sub	sp, #8
 8002924:	af00      	add	r7, sp, #0
	for(int x = 0;x < __steppersCount;x++) {
 8002926:	2300      	movs	r3, #0
 8002928:	607b      	str	r3, [r7, #4]
 800292a:	e027      	b.n	800297c <__stepper_stepMotors+0x5c>
		stepper s = __steppers[x];
 800292c:	4b18      	ldr	r3, [pc, #96]	; (8002990 <__stepper_stepMotors+0x70>)
 800292e:	687a      	ldr	r2, [r7, #4]
 8002930:	0092      	lsls	r2, r2, #2
 8002932:	58d3      	ldr	r3, [r2, r3]
 8002934:	603b      	str	r3, [r7, #0]
		if(s->steps == 0) continue;
 8002936:	683b      	ldr	r3, [r7, #0]
 8002938:	699b      	ldr	r3, [r3, #24]
 800293a:	2b00      	cmp	r3, #0
 800293c:	d01a      	beq.n	8002974 <__stepper_stepMotors+0x54>
		if(s->counter > 0) {
 800293e:	683b      	ldr	r3, [r7, #0]
 8002940:	6a1b      	ldr	r3, [r3, #32]
 8002942:	2b00      	cmp	r3, #0
 8002944:	d005      	beq.n	8002952 <__stepper_stepMotors+0x32>
			s->counter--;
 8002946:	683b      	ldr	r3, [r7, #0]
 8002948:	6a1b      	ldr	r3, [r3, #32]
 800294a:	1e5a      	subs	r2, r3, #1
 800294c:	683b      	ldr	r3, [r7, #0]
 800294e:	621a      	str	r2, [r3, #32]
			continue;
 8002950:	e011      	b.n	8002976 <__stepper_stepMotors+0x56>
		}
		s->counter = s->prescaler - 1;
 8002952:	683b      	ldr	r3, [r7, #0]
 8002954:	69db      	ldr	r3, [r3, #28]
 8002956:	3b01      	subs	r3, #1
 8002958:	001a      	movs	r2, r3
 800295a:	683b      	ldr	r3, [r7, #0]
 800295c:	621a      	str	r2, [r3, #32]
		s->steps--;
 800295e:	683b      	ldr	r3, [r7, #0]
 8002960:	699b      	ldr	r3, [r3, #24]
 8002962:	1e5a      	subs	r2, r3, #1
 8002964:	683b      	ldr	r3, [r7, #0]
 8002966:	619a      	str	r2, [r3, #24]
		io_toggle(s->step);
 8002968:	683b      	ldr	r3, [r7, #0]
 800296a:	6818      	ldr	r0, [r3, #0]
 800296c:	6859      	ldr	r1, [r3, #4]
 800296e:	f7ff fcaa 	bl	80022c6 <io_toggle>
 8002972:	e000      	b.n	8002976 <__stepper_stepMotors+0x56>
		if(s->steps == 0) continue;
 8002974:	46c0      	nop			; (mov r8, r8)
	for(int x = 0;x < __steppersCount;x++) {
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	3301      	adds	r3, #1
 800297a:	607b      	str	r3, [r7, #4]
 800297c:	4b05      	ldr	r3, [pc, #20]	; (8002994 <__stepper_stepMotors+0x74>)
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	687a      	ldr	r2, [r7, #4]
 8002982:	429a      	cmp	r2, r3
 8002984:	dbd2      	blt.n	800292c <__stepper_stepMotors+0xc>
	}
}
 8002986:	46c0      	nop			; (mov r8, r8)
 8002988:	46bd      	mov	sp, r7
 800298a:	b002      	add	sp, #8
 800298c:	bd80      	pop	{r7, pc}
 800298e:	46c0      	nop			; (mov r8, r8)
 8002990:	20000140 	.word	0x20000140
 8002994:	20000128 	.word	0x20000128

08002998 <stepper_initTimer>:


//Function called with frequency of 1MHz / second argument whose name is "prescaler"
//recommended value of second argument is 10
void stepper_initTimer(TIM_TypeDef *timer, uint16_t prescaler) {
 8002998:	b590      	push	{r4, r7, lr}
 800299a:	b083      	sub	sp, #12
 800299c:	af00      	add	r7, sp, #0
 800299e:	6078      	str	r0, [r7, #4]
 80029a0:	000a      	movs	r2, r1
 80029a2:	1cbb      	adds	r3, r7, #2
 80029a4:	801a      	strh	r2, [r3, #0]
	__stepper_frequency = (uint32_t)round(1000000.0 / prescaler);
 80029a6:	1cbb      	adds	r3, r7, #2
 80029a8:	881b      	ldrh	r3, [r3, #0]
 80029aa:	0018      	movs	r0, r3
 80029ac:	f7ff f864 	bl	8001a78 <__aeabi_i2d>
 80029b0:	0003      	movs	r3, r0
 80029b2:	000c      	movs	r4, r1
 80029b4:	001a      	movs	r2, r3
 80029b6:	0023      	movs	r3, r4
 80029b8:	2000      	movs	r0, #0
 80029ba:	4910      	ldr	r1, [pc, #64]	; (80029fc <stepper_initTimer+0x64>)
 80029bc:	f7fd ff6a 	bl	8000894 <__aeabi_ddiv>
 80029c0:	0003      	movs	r3, r0
 80029c2:	000c      	movs	r4, r1
 80029c4:	0018      	movs	r0, r3
 80029c6:	0021      	movs	r1, r4
 80029c8:	f000 fc10 	bl	80031ec <round>
 80029cc:	0003      	movs	r3, r0
 80029ce:	000c      	movs	r4, r1
 80029d0:	0018      	movs	r0, r3
 80029d2:	0021      	movs	r1, r4
 80029d4:	f7fd fc24 	bl	8000220 <__aeabi_d2uiz>
 80029d8:	0002      	movs	r2, r0
 80029da:	4b09      	ldr	r3, [pc, #36]	; (8002a00 <stepper_initTimer+0x68>)
 80029dc:	601a      	str	r2, [r3, #0]
	TIM_repeat(timer, __F_CPU_MHZ, prescaler, __stepper_stepMotors);
 80029de:	4b09      	ldr	r3, [pc, #36]	; (8002a04 <stepper_initTimer+0x6c>)
 80029e0:	781b      	ldrb	r3, [r3, #0]
 80029e2:	b2db      	uxtb	r3, r3
 80029e4:	b299      	uxth	r1, r3
 80029e6:	4c08      	ldr	r4, [pc, #32]	; (8002a08 <stepper_initTimer+0x70>)
 80029e8:	1cbb      	adds	r3, r7, #2
 80029ea:	881a      	ldrh	r2, [r3, #0]
 80029ec:	6878      	ldr	r0, [r7, #4]
 80029ee:	0023      	movs	r3, r4
 80029f0:	f7ff fe22 	bl	8002638 <TIM_repeat>
}
 80029f4:	46c0      	nop			; (mov r8, r8)
 80029f6:	46bd      	mov	sp, r7
 80029f8:	b003      	add	sp, #12
 80029fa:	bd90      	pop	{r4, r7, pc}
 80029fc:	412e8480 	.word	0x412e8480
 8002a00:	2000012c 	.word	0x2000012c
 8002a04:	2000007c 	.word	0x2000007c
 8002a08:	08002921 	.word	0x08002921

08002a0c <stepper_run>:


void stepper_run(stepper motor, int32_t steps, uint32_t stepsPerSecond) {
 8002a0c:	b5b0      	push	{r4, r5, r7, lr}
 8002a0e:	b084      	sub	sp, #16
 8002a10:	af00      	add	r7, sp, #0
 8002a12:	60f8      	str	r0, [r7, #12]
 8002a14:	60b9      	str	r1, [r7, #8]
 8002a16:	607a      	str	r2, [r7, #4]
	motor->prescaler = round(__stepper_frequency / (double)stepsPerSecond);
 8002a18:	4b1c      	ldr	r3, [pc, #112]	; (8002a8c <stepper_run+0x80>)
 8002a1a:	681b      	ldr	r3, [r3, #0]
 8002a1c:	0018      	movs	r0, r3
 8002a1e:	f7ff f865 	bl	8001aec <__aeabi_ui2d>
 8002a22:	0004      	movs	r4, r0
 8002a24:	000d      	movs	r5, r1
 8002a26:	6878      	ldr	r0, [r7, #4]
 8002a28:	f7ff f860 	bl	8001aec <__aeabi_ui2d>
 8002a2c:	0002      	movs	r2, r0
 8002a2e:	000b      	movs	r3, r1
 8002a30:	0020      	movs	r0, r4
 8002a32:	0029      	movs	r1, r5
 8002a34:	f7fd ff2e 	bl	8000894 <__aeabi_ddiv>
 8002a38:	0003      	movs	r3, r0
 8002a3a:	000c      	movs	r4, r1
 8002a3c:	0018      	movs	r0, r3
 8002a3e:	0021      	movs	r1, r4
 8002a40:	f000 fbd4 	bl	80031ec <round>
 8002a44:	0003      	movs	r3, r0
 8002a46:	000c      	movs	r4, r1
 8002a48:	0018      	movs	r0, r3
 8002a4a:	0021      	movs	r1, r4
 8002a4c:	f7fe ffde 	bl	8001a0c <__aeabi_d2iz>
 8002a50:	0002      	movs	r2, r0
 8002a52:	68fb      	ldr	r3, [r7, #12]
 8002a54:	61da      	str	r2, [r3, #28]
	steps < 0 ? io_high(motor->dir) : io_low(motor->dir);
 8002a56:	68bb      	ldr	r3, [r7, #8]
 8002a58:	2b00      	cmp	r3, #0
 8002a5a:	da05      	bge.n	8002a68 <stepper_run+0x5c>
 8002a5c:	68fb      	ldr	r3, [r7, #12]
 8002a5e:	6898      	ldr	r0, [r3, #8]
 8002a60:	68d9      	ldr	r1, [r3, #12]
 8002a62:	f7ff fc19 	bl	8002298 <io_high>
 8002a66:	e004      	b.n	8002a72 <stepper_run+0x66>
 8002a68:	68fb      	ldr	r3, [r7, #12]
 8002a6a:	6898      	ldr	r0, [r3, #8]
 8002a6c:	68d9      	ldr	r1, [r3, #12]
 8002a6e:	f7ff fbfb 	bl	8002268 <io_low>
	motor->counter = 0;
 8002a72:	68fb      	ldr	r3, [r7, #12]
 8002a74:	2200      	movs	r2, #0
 8002a76:	621a      	str	r2, [r3, #32]
	motor->steps = abs(steps);
 8002a78:	68bb      	ldr	r3, [r7, #8]
 8002a7a:	17d9      	asrs	r1, r3, #31
 8002a7c:	185a      	adds	r2, r3, r1
 8002a7e:	404a      	eors	r2, r1
 8002a80:	68fb      	ldr	r3, [r7, #12]
 8002a82:	619a      	str	r2, [r3, #24]
}
 8002a84:	46c0      	nop			; (mov r8, r8)
 8002a86:	46bd      	mov	sp, r7
 8002a88:	b004      	add	sp, #16
 8002a8a:	bdb0      	pop	{r4, r5, r7, pc}
 8002a8c:	2000012c 	.word	0x2000012c

08002a90 <stepper_setSpeed>:

void stepper_setSpeed(stepper motor, uint32_t stepsPerSecond) {
 8002a90:	b5b0      	push	{r4, r5, r7, lr}
 8002a92:	b082      	sub	sp, #8
 8002a94:	af00      	add	r7, sp, #0
 8002a96:	6078      	str	r0, [r7, #4]
 8002a98:	6039      	str	r1, [r7, #0]
	if(stepsPerSecond == 0) motor->prescaler = round(__stepper_frequency / (double)stepsPerSecond);
 8002a9a:	683b      	ldr	r3, [r7, #0]
 8002a9c:	2b00      	cmp	r3, #0
 8002a9e:	d11f      	bne.n	8002ae0 <stepper_setSpeed+0x50>
 8002aa0:	4b23      	ldr	r3, [pc, #140]	; (8002b30 <stepper_setSpeed+0xa0>)
 8002aa2:	681b      	ldr	r3, [r3, #0]
 8002aa4:	0018      	movs	r0, r3
 8002aa6:	f7ff f821 	bl	8001aec <__aeabi_ui2d>
 8002aaa:	0004      	movs	r4, r0
 8002aac:	000d      	movs	r5, r1
 8002aae:	6838      	ldr	r0, [r7, #0]
 8002ab0:	f7ff f81c 	bl	8001aec <__aeabi_ui2d>
 8002ab4:	0002      	movs	r2, r0
 8002ab6:	000b      	movs	r3, r1
 8002ab8:	0020      	movs	r0, r4
 8002aba:	0029      	movs	r1, r5
 8002abc:	f7fd feea 	bl	8000894 <__aeabi_ddiv>
 8002ac0:	0003      	movs	r3, r0
 8002ac2:	000c      	movs	r4, r1
 8002ac4:	0018      	movs	r0, r3
 8002ac6:	0021      	movs	r1, r4
 8002ac8:	f000 fb90 	bl	80031ec <round>
 8002acc:	0003      	movs	r3, r0
 8002ace:	000c      	movs	r4, r1
 8002ad0:	0018      	movs	r0, r3
 8002ad2:	0021      	movs	r1, r4
 8002ad4:	f7fe ff9a 	bl	8001a0c <__aeabi_d2iz>
 8002ad8:	0002      	movs	r2, r0
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	61da      	str	r2, [r3, #28]
 8002ade:	e01e      	b.n	8002b1e <stepper_setSpeed+0x8e>
	else motor->prescaler = round(__stepper_frequency / (double)stepsPerSecond);
 8002ae0:	4b13      	ldr	r3, [pc, #76]	; (8002b30 <stepper_setSpeed+0xa0>)
 8002ae2:	681b      	ldr	r3, [r3, #0]
 8002ae4:	0018      	movs	r0, r3
 8002ae6:	f7ff f801 	bl	8001aec <__aeabi_ui2d>
 8002aea:	0004      	movs	r4, r0
 8002aec:	000d      	movs	r5, r1
 8002aee:	6838      	ldr	r0, [r7, #0]
 8002af0:	f7fe fffc 	bl	8001aec <__aeabi_ui2d>
 8002af4:	0002      	movs	r2, r0
 8002af6:	000b      	movs	r3, r1
 8002af8:	0020      	movs	r0, r4
 8002afa:	0029      	movs	r1, r5
 8002afc:	f7fd feca 	bl	8000894 <__aeabi_ddiv>
 8002b00:	0003      	movs	r3, r0
 8002b02:	000c      	movs	r4, r1
 8002b04:	0018      	movs	r0, r3
 8002b06:	0021      	movs	r1, r4
 8002b08:	f000 fb70 	bl	80031ec <round>
 8002b0c:	0003      	movs	r3, r0
 8002b0e:	000c      	movs	r4, r1
 8002b10:	0018      	movs	r0, r3
 8002b12:	0021      	movs	r1, r4
 8002b14:	f7fe ff7a 	bl	8001a0c <__aeabi_d2iz>
 8002b18:	0002      	movs	r2, r0
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	61da      	str	r2, [r3, #28]
	motor->counter = motor->prescaler;
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	69db      	ldr	r3, [r3, #28]
 8002b22:	001a      	movs	r2, r3
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	621a      	str	r2, [r3, #32]
}
 8002b28:	46c0      	nop			; (mov r8, r8)
 8002b2a:	46bd      	mov	sp, r7
 8002b2c:	b002      	add	sp, #8
 8002b2e:	bdb0      	pop	{r4, r5, r7, pc}
 8002b30:	2000012c 	.word	0x2000012c

08002b34 <stepper_hold>:

void stepper_hold(stepper motor) {
 8002b34:	b580      	push	{r7, lr}
 8002b36:	b082      	sub	sp, #8
 8002b38:	af00      	add	r7, sp, #0
 8002b3a:	6078      	str	r0, [r7, #4]
	io_low(motor->enable);
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	6918      	ldr	r0, [r3, #16]
 8002b40:	6959      	ldr	r1, [r3, #20]
 8002b42:	f7ff fb91 	bl	8002268 <io_low>
}
 8002b46:	46c0      	nop			; (mov r8, r8)
 8002b48:	46bd      	mov	sp, r7
 8002b4a:	b002      	add	sp, #8
 8002b4c:	bd80      	pop	{r7, pc}

08002b4e <stepper_release>:

void stepper_release(stepper motor) {
 8002b4e:	b580      	push	{r7, lr}
 8002b50:	b082      	sub	sp, #8
 8002b52:	af00      	add	r7, sp, #0
 8002b54:	6078      	str	r0, [r7, #4]
	io_high(motor->enable);
 8002b56:	687b      	ldr	r3, [r7, #4]
 8002b58:	6918      	ldr	r0, [r3, #16]
 8002b5a:	6959      	ldr	r1, [r3, #20]
 8002b5c:	f7ff fb9c 	bl	8002298 <io_high>
}
 8002b60:	46c0      	nop			; (mov r8, r8)
 8002b62:	46bd      	mov	sp, r7
 8002b64:	b002      	add	sp, #8
 8002b66:	bd80      	pop	{r7, pc}

08002b68 <updateSpeed>:


uint16_t speed = 3398;


void updateSpeed() {
 8002b68:	b5b0      	push	{r4, r5, r7, lr}
 8002b6a:	af00      	add	r7, sp, #0
	ADC_setPin(potSpeed);
 8002b6c:	4b25      	ldr	r3, [pc, #148]	; (8002c04 <updateSpeed+0x9c>)
 8002b6e:	6818      	ldr	r0, [r3, #0]
 8002b70:	6859      	ldr	r1, [r3, #4]
 8002b72:	f7ff fe2f 	bl	80027d4 <ADC_setPin>
	speed = ADC_sample() / 4095.0 * turn * 10;
 8002b76:	f7ff fe4b 	bl	8002810 <ADC_sample>
 8002b7a:	0003      	movs	r3, r0
 8002b7c:	0018      	movs	r0, r3
 8002b7e:	f7fe ff7b 	bl	8001a78 <__aeabi_i2d>
 8002b82:	2200      	movs	r2, #0
 8002b84:	4b20      	ldr	r3, [pc, #128]	; (8002c08 <updateSpeed+0xa0>)
 8002b86:	f7fd fe85 	bl	8000894 <__aeabi_ddiv>
 8002b8a:	0003      	movs	r3, r0
 8002b8c:	000c      	movs	r4, r1
 8002b8e:	0018      	movs	r0, r3
 8002b90:	0021      	movs	r1, r4
 8002b92:	0002      	movs	r2, r0
 8002b94:	000b      	movs	r3, r1
 8002b96:	f7fd fb61 	bl	800025c <__aeabi_dadd>
 8002b9a:	0003      	movs	r3, r0
 8002b9c:	000c      	movs	r4, r1
 8002b9e:	0018      	movs	r0, r3
 8002ba0:	0021      	movs	r1, r4
 8002ba2:	2200      	movs	r2, #0
 8002ba4:	4b19      	ldr	r3, [pc, #100]	; (8002c0c <updateSpeed+0xa4>)
 8002ba6:	f7fe f977 	bl	8000e98 <__aeabi_dmul>
 8002baa:	0003      	movs	r3, r0
 8002bac:	000c      	movs	r4, r1
 8002bae:	0018      	movs	r0, r3
 8002bb0:	0021      	movs	r1, r4
 8002bb2:	2200      	movs	r2, #0
 8002bb4:	4b16      	ldr	r3, [pc, #88]	; (8002c10 <updateSpeed+0xa8>)
 8002bb6:	f7fe f96f 	bl	8000e98 <__aeabi_dmul>
 8002bba:	0003      	movs	r3, r0
 8002bbc:	000c      	movs	r4, r1
 8002bbe:	0018      	movs	r0, r3
 8002bc0:	0021      	movs	r1, r4
 8002bc2:	2200      	movs	r2, #0
 8002bc4:	4b13      	ldr	r3, [pc, #76]	; (8002c14 <updateSpeed+0xac>)
 8002bc6:	f7fe f967 	bl	8000e98 <__aeabi_dmul>
 8002bca:	0003      	movs	r3, r0
 8002bcc:	000c      	movs	r4, r1
 8002bce:	0018      	movs	r0, r3
 8002bd0:	0021      	movs	r1, r4
 8002bd2:	f7fd fb25 	bl	8000220 <__aeabi_d2uiz>
 8002bd6:	0003      	movs	r3, r0
 8002bd8:	b29a      	uxth	r2, r3
 8002bda:	4b0f      	ldr	r3, [pc, #60]	; (8002c18 <updateSpeed+0xb0>)
 8002bdc:	801a      	strh	r2, [r3, #0]
	stepper_setSpeed(m1, speed);
 8002bde:	4b0f      	ldr	r3, [pc, #60]	; (8002c1c <updateSpeed+0xb4>)
 8002be0:	681a      	ldr	r2, [r3, #0]
 8002be2:	4b0d      	ldr	r3, [pc, #52]	; (8002c18 <updateSpeed+0xb0>)
 8002be4:	881b      	ldrh	r3, [r3, #0]
 8002be6:	0019      	movs	r1, r3
 8002be8:	0010      	movs	r0, r2
 8002bea:	f7ff ff51 	bl	8002a90 <stepper_setSpeed>
	stepper_setSpeed(m2, speed);
 8002bee:	4b0c      	ldr	r3, [pc, #48]	; (8002c20 <updateSpeed+0xb8>)
 8002bf0:	681a      	ldr	r2, [r3, #0]
 8002bf2:	4b09      	ldr	r3, [pc, #36]	; (8002c18 <updateSpeed+0xb0>)
 8002bf4:	881b      	ldrh	r3, [r3, #0]
 8002bf6:	0019      	movs	r1, r3
 8002bf8:	0010      	movs	r0, r2
 8002bfa:	f7ff ff49 	bl	8002a90 <stepper_setSpeed>
}
 8002bfe:	46c0      	nop			; (mov r8, r8)
 8002c00:	46bd      	mov	sp, r7
 8002c02:	bdb0      	pop	{r4, r5, r7, pc}
 8002c04:	2000006c 	.word	0x2000006c
 8002c08:	40affe00 	.word	0x40affe00
 8002c0c:	40300000 	.word	0x40300000
 8002c10:	40580000 	.word	0x40580000
 8002c14:	40240000 	.word	0x40240000
 8002c18:	2000009c 	.word	0x2000009c
 8002c1c:	20000168 	.word	0x20000168
 8002c20:	2000013c 	.word	0x2000013c

08002c24 <main>:





int main() {
 8002c24:	b580      	push	{r7, lr}
 8002c26:	b082      	sub	sp, #8
 8002c28:	af00      	add	r7, sp, #0
	CLOCK_internal48mhz();
 8002c2a:	f7ff f9dd 	bl	8001fe8 <CLOCK_internal48mhz>


	initControls();
 8002c2e:	f000 f907 	bl	8002e40 <initControls>

	zatrzymajSciane();
 8002c32:	4b79      	ldr	r3, [pc, #484]	; (8002e18 <main+0x1f4>)
 8002c34:	681b      	ldr	r3, [r3, #0]
 8002c36:	2200      	movs	r2, #0
 8002c38:	2100      	movs	r1, #0
 8002c3a:	0018      	movs	r0, r3
 8002c3c:	f7ff fee6 	bl	8002a0c <stepper_run>
 8002c40:	4b75      	ldr	r3, [pc, #468]	; (8002e18 <main+0x1f4>)
 8002c42:	681b      	ldr	r3, [r3, #0]
 8002c44:	0018      	movs	r0, r3
 8002c46:	f7ff ff82 	bl	8002b4e <stepper_release>
	zatrzymajGniazdo();
 8002c4a:	4b74      	ldr	r3, [pc, #464]	; (8002e1c <main+0x1f8>)
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	2200      	movs	r2, #0
 8002c50:	2100      	movs	r1, #0
 8002c52:	0018      	movs	r0, r3
 8002c54:	f7ff feda 	bl	8002a0c <stepper_run>
 8002c58:	4b70      	ldr	r3, [pc, #448]	; (8002e1c <main+0x1f8>)
 8002c5a:	681b      	ldr	r3, [r3, #0]
 8002c5c:	0018      	movs	r0, r3
 8002c5e:	f7ff ff76 	bl	8002b4e <stepper_release>


	uint16_t lim = 30;
 8002c62:	1d3b      	adds	r3, r7, #4
 8002c64:	221e      	movs	r2, #30
 8002c66:	801a      	strh	r2, [r3, #0]
	uint16_t bt = lim;
 8002c68:	1dbb      	adds	r3, r7, #6
 8002c6a:	1d3a      	adds	r2, r7, #4
 8002c6c:	8812      	ldrh	r2, [r2, #0]
 8002c6e:	801a      	strh	r2, [r3, #0]
	while(1) {

		if(io_isLow(button) && k12 && k21) {
 8002c70:	4b6b      	ldr	r3, [pc, #428]	; (8002e20 <main+0x1fc>)
 8002c72:	6818      	ldr	r0, [r3, #0]
 8002c74:	6859      	ldr	r1, [r3, #4]
 8002c76:	f7ff fb3d 	bl	80022f4 <io_isLow>
 8002c7a:	1e03      	subs	r3, r0, #0
 8002c7c:	d05a      	beq.n	8002d34 <main+0x110>
 8002c7e:	4b69      	ldr	r3, [pc, #420]	; (8002e24 <main+0x200>)
 8002c80:	6818      	ldr	r0, [r3, #0]
 8002c82:	6859      	ldr	r1, [r3, #4]
 8002c84:	f7ff fb36 	bl	80022f4 <io_isLow>
 8002c88:	1e03      	subs	r3, r0, #0
 8002c8a:	d053      	beq.n	8002d34 <main+0x110>
 8002c8c:	4b66      	ldr	r3, [pc, #408]	; (8002e28 <main+0x204>)
 8002c8e:	6818      	ldr	r0, [r3, #0]
 8002c90:	6859      	ldr	r1, [r3, #4]
 8002c92:	f7ff fb2f 	bl	80022f4 <io_isLow>
 8002c96:	1e03      	subs	r3, r0, #0
 8002c98:	d04c      	beq.n	8002d34 <main+0x110>
			if(bt == lim) {
 8002c9a:	1dba      	adds	r2, r7, #6
 8002c9c:	1d3b      	adds	r3, r7, #4
 8002c9e:	8812      	ldrh	r2, [r2, #0]
 8002ca0:	881b      	ldrh	r3, [r3, #0]
 8002ca2:	429a      	cmp	r2, r3
 8002ca4:	d143      	bne.n	8002d2e <main+0x10a>
				chowajSciane();
 8002ca6:	4b5c      	ldr	r3, [pc, #368]	; (8002e18 <main+0x1f4>)
 8002ca8:	681b      	ldr	r3, [r3, #0]
 8002caa:	0018      	movs	r0, r3
 8002cac:	f7ff ff42 	bl	8002b34 <stepper_hold>
 8002cb0:	4b59      	ldr	r3, [pc, #356]	; (8002e18 <main+0x1f4>)
 8002cb2:	6818      	ldr	r0, [r3, #0]
 8002cb4:	4b5d      	ldr	r3, [pc, #372]	; (8002e2c <main+0x208>)
 8002cb6:	881b      	ldrh	r3, [r3, #0]
 8002cb8:	001a      	movs	r2, r3
 8002cba:	4b5d      	ldr	r3, [pc, #372]	; (8002e30 <main+0x20c>)
 8002cbc:	0019      	movs	r1, r3
 8002cbe:	f7ff fea5 	bl	8002a0c <stepper_run>
				while(!k11);             //poczekaj aż ściana się schowa
 8002cc2:	46c0      	nop			; (mov r8, r8)
 8002cc4:	4b5b      	ldr	r3, [pc, #364]	; (8002e34 <main+0x210>)
 8002cc6:	6818      	ldr	r0, [r3, #0]
 8002cc8:	6859      	ldr	r1, [r3, #4]
 8002cca:	f7ff fb13 	bl	80022f4 <io_isLow>
 8002cce:	1e03      	subs	r3, r0, #0
 8002cd0:	d0f8      	beq.n	8002cc4 <main+0xa0>
				zatrzymajSciane();
 8002cd2:	4b51      	ldr	r3, [pc, #324]	; (8002e18 <main+0x1f4>)
 8002cd4:	681b      	ldr	r3, [r3, #0]
 8002cd6:	2200      	movs	r2, #0
 8002cd8:	2100      	movs	r1, #0
 8002cda:	0018      	movs	r0, r3
 8002cdc:	f7ff fe96 	bl	8002a0c <stepper_run>
 8002ce0:	4b4d      	ldr	r3, [pc, #308]	; (8002e18 <main+0x1f4>)
 8002ce2:	681b      	ldr	r3, [r3, #0]
 8002ce4:	0018      	movs	r0, r3
 8002ce6:	f7ff ff32 	bl	8002b4e <stepper_release>
				pokazGniazdo();
 8002cea:	4b4c      	ldr	r3, [pc, #304]	; (8002e1c <main+0x1f8>)
 8002cec:	681b      	ldr	r3, [r3, #0]
 8002cee:	0018      	movs	r0, r3
 8002cf0:	f7ff ff20 	bl	8002b34 <stepper_hold>
 8002cf4:	4b49      	ldr	r3, [pc, #292]	; (8002e1c <main+0x1f8>)
 8002cf6:	6818      	ldr	r0, [r3, #0]
 8002cf8:	4b4c      	ldr	r3, [pc, #304]	; (8002e2c <main+0x208>)
 8002cfa:	881b      	ldrh	r3, [r3, #0]
 8002cfc:	001a      	movs	r2, r3
 8002cfe:	4b4e      	ldr	r3, [pc, #312]	; (8002e38 <main+0x214>)
 8002d00:	0019      	movs	r1, r3
 8002d02:	f7ff fe83 	bl	8002a0c <stepper_run>
				while(!k22);             //poczekaj aż gniazdo się wysunie
 8002d06:	46c0      	nop			; (mov r8, r8)
 8002d08:	4b4c      	ldr	r3, [pc, #304]	; (8002e3c <main+0x218>)
 8002d0a:	6818      	ldr	r0, [r3, #0]
 8002d0c:	6859      	ldr	r1, [r3, #4]
 8002d0e:	f7ff faf1 	bl	80022f4 <io_isLow>
 8002d12:	1e03      	subs	r3, r0, #0
 8002d14:	d0f8      	beq.n	8002d08 <main+0xe4>
				zatrzymajGniazdo();
 8002d16:	4b41      	ldr	r3, [pc, #260]	; (8002e1c <main+0x1f8>)
 8002d18:	681b      	ldr	r3, [r3, #0]
 8002d1a:	2200      	movs	r2, #0
 8002d1c:	2100      	movs	r1, #0
 8002d1e:	0018      	movs	r0, r3
 8002d20:	f7ff fe74 	bl	8002a0c <stepper_run>
 8002d24:	4b3d      	ldr	r3, [pc, #244]	; (8002e1c <main+0x1f8>)
 8002d26:	681b      	ldr	r3, [r3, #0]
 8002d28:	0018      	movs	r0, r3
 8002d2a:	f7ff ff10 	bl	8002b4e <stepper_release>
			}
			bt = 0;
 8002d2e:	1dbb      	adds	r3, r7, #6
 8002d30:	2200      	movs	r2, #0
 8002d32:	801a      	strh	r2, [r3, #0]
		}

		if(io_isLow(button) && k11 && k22){
 8002d34:	4b3a      	ldr	r3, [pc, #232]	; (8002e20 <main+0x1fc>)
 8002d36:	6818      	ldr	r0, [r3, #0]
 8002d38:	6859      	ldr	r1, [r3, #4]
 8002d3a:	f7ff fadb 	bl	80022f4 <io_isLow>
 8002d3e:	1e03      	subs	r3, r0, #0
 8002d40:	d05a      	beq.n	8002df8 <main+0x1d4>
 8002d42:	4b3c      	ldr	r3, [pc, #240]	; (8002e34 <main+0x210>)
 8002d44:	6818      	ldr	r0, [r3, #0]
 8002d46:	6859      	ldr	r1, [r3, #4]
 8002d48:	f7ff fad4 	bl	80022f4 <io_isLow>
 8002d4c:	1e03      	subs	r3, r0, #0
 8002d4e:	d053      	beq.n	8002df8 <main+0x1d4>
 8002d50:	4b3a      	ldr	r3, [pc, #232]	; (8002e3c <main+0x218>)
 8002d52:	6818      	ldr	r0, [r3, #0]
 8002d54:	6859      	ldr	r1, [r3, #4]
 8002d56:	f7ff facd 	bl	80022f4 <io_isLow>
 8002d5a:	1e03      	subs	r3, r0, #0
 8002d5c:	d04c      	beq.n	8002df8 <main+0x1d4>
			if(bt == lim) {
 8002d5e:	1dba      	adds	r2, r7, #6
 8002d60:	1d3b      	adds	r3, r7, #4
 8002d62:	8812      	ldrh	r2, [r2, #0]
 8002d64:	881b      	ldrh	r3, [r3, #0]
 8002d66:	429a      	cmp	r2, r3
 8002d68:	d143      	bne.n	8002df2 <main+0x1ce>
				chowajGniazdo();
 8002d6a:	4b2c      	ldr	r3, [pc, #176]	; (8002e1c <main+0x1f8>)
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	0018      	movs	r0, r3
 8002d70:	f7ff fee0 	bl	8002b34 <stepper_hold>
 8002d74:	4b29      	ldr	r3, [pc, #164]	; (8002e1c <main+0x1f8>)
 8002d76:	6818      	ldr	r0, [r3, #0]
 8002d78:	4b2c      	ldr	r3, [pc, #176]	; (8002e2c <main+0x208>)
 8002d7a:	881b      	ldrh	r3, [r3, #0]
 8002d7c:	001a      	movs	r2, r3
 8002d7e:	4b2c      	ldr	r3, [pc, #176]	; (8002e30 <main+0x20c>)
 8002d80:	0019      	movs	r1, r3
 8002d82:	f7ff fe43 	bl	8002a0c <stepper_run>
				while(!k21);             //poczekaj aż gniazdo się schowa
 8002d86:	46c0      	nop			; (mov r8, r8)
 8002d88:	4b27      	ldr	r3, [pc, #156]	; (8002e28 <main+0x204>)
 8002d8a:	6818      	ldr	r0, [r3, #0]
 8002d8c:	6859      	ldr	r1, [r3, #4]
 8002d8e:	f7ff fab1 	bl	80022f4 <io_isLow>
 8002d92:	1e03      	subs	r3, r0, #0
 8002d94:	d0f8      	beq.n	8002d88 <main+0x164>
				zatrzymajGniazdo();
 8002d96:	4b21      	ldr	r3, [pc, #132]	; (8002e1c <main+0x1f8>)
 8002d98:	681b      	ldr	r3, [r3, #0]
 8002d9a:	2200      	movs	r2, #0
 8002d9c:	2100      	movs	r1, #0
 8002d9e:	0018      	movs	r0, r3
 8002da0:	f7ff fe34 	bl	8002a0c <stepper_run>
 8002da4:	4b1d      	ldr	r3, [pc, #116]	; (8002e1c <main+0x1f8>)
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	0018      	movs	r0, r3
 8002daa:	f7ff fed0 	bl	8002b4e <stepper_release>
				pokazSciane();
 8002dae:	4b1a      	ldr	r3, [pc, #104]	; (8002e18 <main+0x1f4>)
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	0018      	movs	r0, r3
 8002db4:	f7ff febe 	bl	8002b34 <stepper_hold>
 8002db8:	4b17      	ldr	r3, [pc, #92]	; (8002e18 <main+0x1f4>)
 8002dba:	6818      	ldr	r0, [r3, #0]
 8002dbc:	4b1b      	ldr	r3, [pc, #108]	; (8002e2c <main+0x208>)
 8002dbe:	881b      	ldrh	r3, [r3, #0]
 8002dc0:	001a      	movs	r2, r3
 8002dc2:	4b1d      	ldr	r3, [pc, #116]	; (8002e38 <main+0x214>)
 8002dc4:	0019      	movs	r1, r3
 8002dc6:	f7ff fe21 	bl	8002a0c <stepper_run>
				while(!k12);             //poczekaj aż ściana się wysunie
 8002dca:	46c0      	nop			; (mov r8, r8)
 8002dcc:	4b15      	ldr	r3, [pc, #84]	; (8002e24 <main+0x200>)
 8002dce:	6818      	ldr	r0, [r3, #0]
 8002dd0:	6859      	ldr	r1, [r3, #4]
 8002dd2:	f7ff fa8f 	bl	80022f4 <io_isLow>
 8002dd6:	1e03      	subs	r3, r0, #0
 8002dd8:	d0f8      	beq.n	8002dcc <main+0x1a8>
				zatrzymajSciane();
 8002dda:	4b0f      	ldr	r3, [pc, #60]	; (8002e18 <main+0x1f4>)
 8002ddc:	681b      	ldr	r3, [r3, #0]
 8002dde:	2200      	movs	r2, #0
 8002de0:	2100      	movs	r1, #0
 8002de2:	0018      	movs	r0, r3
 8002de4:	f7ff fe12 	bl	8002a0c <stepper_run>
 8002de8:	4b0b      	ldr	r3, [pc, #44]	; (8002e18 <main+0x1f4>)
 8002dea:	681b      	ldr	r3, [r3, #0]
 8002dec:	0018      	movs	r0, r3
 8002dee:	f7ff feae 	bl	8002b4e <stepper_release>
			}
			bt = 0;
 8002df2:	1dbb      	adds	r3, r7, #6
 8002df4:	2200      	movs	r2, #0
 8002df6:	801a      	strh	r2, [r3, #0]
		}

		if(bt < lim) bt++;
 8002df8:	1dba      	adds	r2, r7, #6
 8002dfa:	1d3b      	adds	r3, r7, #4
 8002dfc:	8812      	ldrh	r2, [r2, #0]
 8002dfe:	881b      	ldrh	r3, [r3, #0]
 8002e00:	429a      	cmp	r2, r3
 8002e02:	d204      	bcs.n	8002e0e <main+0x1ea>
 8002e04:	1dbb      	adds	r3, r7, #6
 8002e06:	881a      	ldrh	r2, [r3, #0]
 8002e08:	1dbb      	adds	r3, r7, #6
 8002e0a:	3201      	adds	r2, #1
 8002e0c:	801a      	strh	r2, [r3, #0]
		delay_ms(10);
 8002e0e:	200a      	movs	r0, #10
 8002e10:	f7ff f8b8 	bl	8001f84 <delay_ms>
		if(io_isLow(button) && k12 && k21) {
 8002e14:	e72c      	b.n	8002c70 <main+0x4c>
 8002e16:	46c0      	nop			; (mov r8, r8)
 8002e18:	20000168 	.word	0x20000168
 8002e1c:	2000013c 	.word	0x2000013c
 8002e20:	20000034 	.word	0x20000034
 8002e24:	20000064 	.word	0x20000064
 8002e28:	20000054 	.word	0x20000054
 8002e2c:	2000009c 	.word	0x2000009c
 8002e30:	ff15a000 	.word	0xff15a000
 8002e34:	20000074 	.word	0x20000074
 8002e38:	00ea6000 	.word	0x00ea6000
 8002e3c:	20000044 	.word	0x20000044

08002e40 <initControls>:
}




void initControls() {
 8002e40:	b5b0      	push	{r4, r5, r7, lr}
 8002e42:	b082      	sub	sp, #8
 8002e44:	af02      	add	r7, sp, #8

	//POT_SPEED
	ADC_init(potSpeed);
 8002e46:	4b36      	ldr	r3, [pc, #216]	; (8002f20 <initControls+0xe0>)
 8002e48:	6818      	ldr	r0, [r3, #0]
 8002e4a:	6859      	ldr	r1, [r3, #4]
 8002e4c:	f7ff fc70 	bl	8002730 <ADC_init>

	//POT_TIME
	ADC_init(potTime);
 8002e50:	4b34      	ldr	r3, [pc, #208]	; (8002f24 <initControls+0xe4>)
 8002e52:	6818      	ldr	r0, [r3, #0]
 8002e54:	6859      	ldr	r1, [r3, #4]
 8002e56:	f7ff fc6b 	bl	8002730 <ADC_init>

	//BUTTON
	io_init(button.port);
 8002e5a:	4b33      	ldr	r3, [pc, #204]	; (8002f28 <initControls+0xe8>)
 8002e5c:	681b      	ldr	r3, [r3, #0]
 8002e5e:	0018      	movs	r0, r3
 8002e60:	f7ff f8f8 	bl	8002054 <io_init>
	io_in(button, pullUp);
 8002e64:	4b30      	ldr	r3, [pc, #192]	; (8002f28 <initControls+0xe8>)
 8002e66:	2201      	movs	r2, #1
 8002e68:	6818      	ldr	r0, [r3, #0]
 8002e6a:	6859      	ldr	r1, [r3, #4]
 8002e6c:	f7ff f946 	bl	80020fc <io_in>

	//LS11
	io_init(ls11.port);
 8002e70:	4b2e      	ldr	r3, [pc, #184]	; (8002f2c <initControls+0xec>)
 8002e72:	681b      	ldr	r3, [r3, #0]
 8002e74:	0018      	movs	r0, r3
 8002e76:	f7ff f8ed 	bl	8002054 <io_init>
	io_in(ls11, pullUp);
 8002e7a:	4b2c      	ldr	r3, [pc, #176]	; (8002f2c <initControls+0xec>)
 8002e7c:	2201      	movs	r2, #1
 8002e7e:	6818      	ldr	r0, [r3, #0]
 8002e80:	6859      	ldr	r1, [r3, #4]
 8002e82:	f7ff f93b 	bl	80020fc <io_in>

	//LS12
	io_init(ls12.port);
 8002e86:	4b2a      	ldr	r3, [pc, #168]	; (8002f30 <initControls+0xf0>)
 8002e88:	681b      	ldr	r3, [r3, #0]
 8002e8a:	0018      	movs	r0, r3
 8002e8c:	f7ff f8e2 	bl	8002054 <io_init>
	io_in(ls12, pullUp);
 8002e90:	4b27      	ldr	r3, [pc, #156]	; (8002f30 <initControls+0xf0>)
 8002e92:	2201      	movs	r2, #1
 8002e94:	6818      	ldr	r0, [r3, #0]
 8002e96:	6859      	ldr	r1, [r3, #4]
 8002e98:	f7ff f930 	bl	80020fc <io_in>

	//LS21
	io_init(ls21.port);
 8002e9c:	4b25      	ldr	r3, [pc, #148]	; (8002f34 <initControls+0xf4>)
 8002e9e:	681b      	ldr	r3, [r3, #0]
 8002ea0:	0018      	movs	r0, r3
 8002ea2:	f7ff f8d7 	bl	8002054 <io_init>
	io_in(ls21, pullUp);
 8002ea6:	4b23      	ldr	r3, [pc, #140]	; (8002f34 <initControls+0xf4>)
 8002ea8:	2201      	movs	r2, #1
 8002eaa:	6818      	ldr	r0, [r3, #0]
 8002eac:	6859      	ldr	r1, [r3, #4]
 8002eae:	f7ff f925 	bl	80020fc <io_in>

	//LS22
	io_init(ls22.port);
 8002eb2:	4b21      	ldr	r3, [pc, #132]	; (8002f38 <initControls+0xf8>)
 8002eb4:	681b      	ldr	r3, [r3, #0]
 8002eb6:	0018      	movs	r0, r3
 8002eb8:	f7ff f8cc 	bl	8002054 <io_init>
	io_in(ls22, pullUp);
 8002ebc:	4b1e      	ldr	r3, [pc, #120]	; (8002f38 <initControls+0xf8>)
 8002ebe:	2201      	movs	r2, #1
 8002ec0:	6818      	ldr	r0, [r3, #0]
 8002ec2:	6859      	ldr	r1, [r3, #4]
 8002ec4:	f7ff f91a 	bl	80020fc <io_in>

	//STEPPER MOTOR LIBRARY
	stepper_initTimer(TIM1, 20);
 8002ec8:	4b1c      	ldr	r3, [pc, #112]	; (8002f3c <initControls+0xfc>)
 8002eca:	2114      	movs	r1, #20
 8002ecc:	0018      	movs	r0, r3
 8002ece:	f7ff fd63 	bl	8002998 <stepper_initTimer>


	//STEPPER MOTORS
	m1 = stepper_createMotor(m1_s, m1_d, m1_e);
 8002ed2:	4b1b      	ldr	r3, [pc, #108]	; (8002f40 <initControls+0x100>)
 8002ed4:	491b      	ldr	r1, [pc, #108]	; (8002f44 <initControls+0x104>)
 8002ed6:	481c      	ldr	r0, [pc, #112]	; (8002f48 <initControls+0x108>)
 8002ed8:	466a      	mov	r2, sp
 8002eda:	c830      	ldmia	r0!, {r4, r5}
 8002edc:	c230      	stmia	r2!, {r4, r5}
 8002ede:	681a      	ldr	r2, [r3, #0]
 8002ee0:	685b      	ldr	r3, [r3, #4]
 8002ee2:	6808      	ldr	r0, [r1, #0]
 8002ee4:	6849      	ldr	r1, [r1, #4]
 8002ee6:	f7ff fca9 	bl	800283c <stepper_createMotor>
 8002eea:	0002      	movs	r2, r0
 8002eec:	4b17      	ldr	r3, [pc, #92]	; (8002f4c <initControls+0x10c>)
 8002eee:	601a      	str	r2, [r3, #0]
	m2 = stepper_createMotor(m2_s, m2_d, m2_e);
 8002ef0:	4b17      	ldr	r3, [pc, #92]	; (8002f50 <initControls+0x110>)
 8002ef2:	4918      	ldr	r1, [pc, #96]	; (8002f54 <initControls+0x114>)
 8002ef4:	4818      	ldr	r0, [pc, #96]	; (8002f58 <initControls+0x118>)
 8002ef6:	466a      	mov	r2, sp
 8002ef8:	c830      	ldmia	r0!, {r4, r5}
 8002efa:	c230      	stmia	r2!, {r4, r5}
 8002efc:	681a      	ldr	r2, [r3, #0]
 8002efe:	685b      	ldr	r3, [r3, #4]
 8002f00:	6808      	ldr	r0, [r1, #0]
 8002f02:	6849      	ldr	r1, [r1, #4]
 8002f04:	f7ff fc9a 	bl	800283c <stepper_createMotor>
 8002f08:	0002      	movs	r2, r0
 8002f0a:	4b14      	ldr	r3, [pc, #80]	; (8002f5c <initControls+0x11c>)
 8002f0c:	601a      	str	r2, [r3, #0]


	TIM_repeat(TIM3, 48000, 50, updateSpeed);
 8002f0e:	4b14      	ldr	r3, [pc, #80]	; (8002f60 <initControls+0x120>)
 8002f10:	4914      	ldr	r1, [pc, #80]	; (8002f64 <initControls+0x124>)
 8002f12:	4815      	ldr	r0, [pc, #84]	; (8002f68 <initControls+0x128>)
 8002f14:	2232      	movs	r2, #50	; 0x32
 8002f16:	f7ff fb8f 	bl	8002638 <TIM_repeat>


}
 8002f1a:	46c0      	nop			; (mov r8, r8)
 8002f1c:	46bd      	mov	sp, r7
 8002f1e:	bdb0      	pop	{r4, r5, r7, pc}
 8002f20:	2000006c 	.word	0x2000006c
 8002f24:	2000005c 	.word	0x2000005c
 8002f28:	20000034 	.word	0x20000034
 8002f2c:	20000074 	.word	0x20000074
 8002f30:	20000064 	.word	0x20000064
 8002f34:	20000054 	.word	0x20000054
 8002f38:	20000044 	.word	0x20000044
 8002f3c:	40012c00 	.word	0x40012c00
 8002f40:	2000004c 	.word	0x2000004c
 8002f44:	2000003c 	.word	0x2000003c
 8002f48:	2000002c 	.word	0x2000002c
 8002f4c:	20000168 	.word	0x20000168
 8002f50:	20000024 	.word	0x20000024
 8002f54:	2000001c 	.word	0x2000001c
 8002f58:	20000014 	.word	0x20000014
 8002f5c:	2000013c 	.word	0x2000013c
 8002f60:	08002b69 	.word	0x08002b69
 8002f64:	0000bb80 	.word	0x0000bb80
 8002f68:	40000400 	.word	0x40000400

08002f6c <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8002f6c:	b580      	push	{r7, lr}
 8002f6e:	b084      	sub	sp, #16
 8002f70:	af00      	add	r7, sp, #0
 8002f72:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002f74:	4b11      	ldr	r3, [pc, #68]	; (8002fbc <_sbrk+0x50>)
 8002f76:	681b      	ldr	r3, [r3, #0]
 8002f78:	2b00      	cmp	r3, #0
 8002f7a:	d102      	bne.n	8002f82 <_sbrk+0x16>
		heap_end = &end;
 8002f7c:	4b0f      	ldr	r3, [pc, #60]	; (8002fbc <_sbrk+0x50>)
 8002f7e:	4a10      	ldr	r2, [pc, #64]	; (8002fc0 <_sbrk+0x54>)
 8002f80:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 8002f82:	4b0e      	ldr	r3, [pc, #56]	; (8002fbc <_sbrk+0x50>)
 8002f84:	681b      	ldr	r3, [r3, #0]
 8002f86:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8002f88:	4b0c      	ldr	r3, [pc, #48]	; (8002fbc <_sbrk+0x50>)
 8002f8a:	681a      	ldr	r2, [r3, #0]
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	18d3      	adds	r3, r2, r3
 8002f90:	466a      	mov	r2, sp
 8002f92:	4293      	cmp	r3, r2
 8002f94:	d907      	bls.n	8002fa6 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8002f96:	f000 f883 	bl	80030a0 <__errno>
 8002f9a:	0003      	movs	r3, r0
 8002f9c:	220c      	movs	r2, #12
 8002f9e:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 8002fa0:	2301      	movs	r3, #1
 8002fa2:	425b      	negs	r3, r3
 8002fa4:	e006      	b.n	8002fb4 <_sbrk+0x48>
	}

	heap_end += incr;
 8002fa6:	4b05      	ldr	r3, [pc, #20]	; (8002fbc <_sbrk+0x50>)
 8002fa8:	681a      	ldr	r2, [r3, #0]
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	18d2      	adds	r2, r2, r3
 8002fae:	4b03      	ldr	r3, [pc, #12]	; (8002fbc <_sbrk+0x50>)
 8002fb0:	601a      	str	r2, [r3, #0]

	return (caddr_t) prev_heap_end;
 8002fb2:	68fb      	ldr	r3, [r7, #12]
}
 8002fb4:	0018      	movs	r0, r3
 8002fb6:	46bd      	mov	sp, r7
 8002fb8:	b004      	add	sp, #16
 8002fba:	bd80      	pop	{r7, pc}
 8002fbc:	20000130 	.word	0x20000130
 8002fc0:	20000170 	.word	0x20000170

08002fc4 <SystemInit>:
  *         Initialize the default HSI clock source, vector table location and the PLL configuration is reset.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002fc4:	b580      	push	{r7, lr}
 8002fc6:	af00      	add	r7, sp, #0
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001U;
 8002fc8:	4b1a      	ldr	r3, [pc, #104]	; (8003034 <SystemInit+0x70>)
 8002fca:	681a      	ldr	r2, [r3, #0]
 8002fcc:	4b19      	ldr	r3, [pc, #100]	; (8003034 <SystemInit+0x70>)
 8002fce:	2101      	movs	r1, #1
 8002fd0:	430a      	orrs	r2, r1
 8002fd2:	601a      	str	r2, [r3, #0]
#if defined (STM32F051x8) || defined (STM32F058x8)
  /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
  RCC->CFGR &= (uint32_t)0xF8FFB80CU;
#else
  /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE, MCOSEL[2:0], MCOPRE[2:0] and PLLNODIV bits */
  RCC->CFGR &= (uint32_t)0x08FFB80CU;
 8002fd4:	4b17      	ldr	r3, [pc, #92]	; (8003034 <SystemInit+0x70>)
 8002fd6:	685a      	ldr	r2, [r3, #4]
 8002fd8:	4b16      	ldr	r3, [pc, #88]	; (8003034 <SystemInit+0x70>)
 8002fda:	4917      	ldr	r1, [pc, #92]	; (8003038 <SystemInit+0x74>)
 8002fdc:	400a      	ands	r2, r1
 8002fde:	605a      	str	r2, [r3, #4]
#endif /* STM32F051x8 or STM32F058x8 */
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFFU;
 8002fe0:	4b14      	ldr	r3, [pc, #80]	; (8003034 <SystemInit+0x70>)
 8002fe2:	681a      	ldr	r2, [r3, #0]
 8002fe4:	4b13      	ldr	r3, [pc, #76]	; (8003034 <SystemInit+0x70>)
 8002fe6:	4915      	ldr	r1, [pc, #84]	; (800303c <SystemInit+0x78>)
 8002fe8:	400a      	ands	r2, r1
 8002fea:	601a      	str	r2, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFFU;
 8002fec:	4b11      	ldr	r3, [pc, #68]	; (8003034 <SystemInit+0x70>)
 8002fee:	681a      	ldr	r2, [r3, #0]
 8002ff0:	4b10      	ldr	r3, [pc, #64]	; (8003034 <SystemInit+0x70>)
 8002ff2:	4913      	ldr	r1, [pc, #76]	; (8003040 <SystemInit+0x7c>)
 8002ff4:	400a      	ands	r2, r1
 8002ff6:	601a      	str	r2, [r3, #0]

  /* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
  RCC->CFGR &= (uint32_t)0xFFC0FFFFU;
 8002ff8:	4b0e      	ldr	r3, [pc, #56]	; (8003034 <SystemInit+0x70>)
 8002ffa:	685a      	ldr	r2, [r3, #4]
 8002ffc:	4b0d      	ldr	r3, [pc, #52]	; (8003034 <SystemInit+0x70>)
 8002ffe:	4911      	ldr	r1, [pc, #68]	; (8003044 <SystemInit+0x80>)
 8003000:	400a      	ands	r2, r1
 8003002:	605a      	str	r2, [r3, #4]

  /* Reset PREDIV[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0U;
 8003004:	4b0b      	ldr	r3, [pc, #44]	; (8003034 <SystemInit+0x70>)
 8003006:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003008:	4b0a      	ldr	r3, [pc, #40]	; (8003034 <SystemInit+0x70>)
 800300a:	210f      	movs	r1, #15
 800300c:	438a      	bics	r2, r1
 800300e:	62da      	str	r2, [r3, #44]	; 0x2c
#elif defined (STM32F091xC) || defined (STM32F098xx)
  /* Reset USART3SW[1:0], USART2SW[1:0], USART1SW[1:0], I2C1SW, CECSW and ADCSW bits */
  RCC->CFGR3 &= (uint32_t)0xFFF0FEACU;
#elif defined (STM32F030x6) || defined (STM32F030x8) || defined (STM32F031x6) || defined (STM32F038xx) || defined (STM32F030xC)
  /* Reset USART1SW[1:0], I2C1SW and ADCSW bits */
  RCC->CFGR3 &= (uint32_t)0xFFFFFEECU;
 8003010:	4b08      	ldr	r3, [pc, #32]	; (8003034 <SystemInit+0x70>)
 8003012:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003014:	4b07      	ldr	r3, [pc, #28]	; (8003034 <SystemInit+0x70>)
 8003016:	490c      	ldr	r1, [pc, #48]	; (8003048 <SystemInit+0x84>)
 8003018:	400a      	ands	r2, r1
 800301a:	631a      	str	r2, [r3, #48]	; 0x30
#else
 #warning "No target selected"
#endif

  /* Reset HSI14 bit */
  RCC->CR2 &= (uint32_t)0xFFFFFFFEU;
 800301c:	4b05      	ldr	r3, [pc, #20]	; (8003034 <SystemInit+0x70>)
 800301e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003020:	4b04      	ldr	r3, [pc, #16]	; (8003034 <SystemInit+0x70>)
 8003022:	2101      	movs	r1, #1
 8003024:	438a      	bics	r2, r1
 8003026:	635a      	str	r2, [r3, #52]	; 0x34

  /* Disable all interrupts */
  RCC->CIR = 0x00000000U;
 8003028:	4b02      	ldr	r3, [pc, #8]	; (8003034 <SystemInit+0x70>)
 800302a:	2200      	movs	r2, #0
 800302c:	609a      	str	r2, [r3, #8]

}
 800302e:	46c0      	nop			; (mov r8, r8)
 8003030:	46bd      	mov	sp, r7
 8003032:	bd80      	pop	{r7, pc}
 8003034:	40021000 	.word	0x40021000
 8003038:	08ffb80c 	.word	0x08ffb80c
 800303c:	fef6ffff 	.word	0xfef6ffff
 8003040:	fffbffff 	.word	0xfffbffff
 8003044:	ffc0ffff 	.word	0xffc0ffff
 8003048:	fffffeec 	.word	0xfffffeec

0800304c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800304c:	480d      	ldr	r0, [pc, #52]	; (8003084 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800304e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003050:	480d      	ldr	r0, [pc, #52]	; (8003088 <LoopForever+0x6>)
  ldr r1, =_edata
 8003052:	490e      	ldr	r1, [pc, #56]	; (800308c <LoopForever+0xa>)
  ldr r2, =_sidata
 8003054:	4a0e      	ldr	r2, [pc, #56]	; (8003090 <LoopForever+0xe>)
  movs r3, #0
 8003056:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003058:	e002      	b.n	8003060 <LoopCopyDataInit>

0800305a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800305a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800305c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800305e:	3304      	adds	r3, #4

08003060 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003060:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8003062:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003064:	d3f9      	bcc.n	800305a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8003066:	4a0b      	ldr	r2, [pc, #44]	; (8003094 <LoopForever+0x12>)
  ldr r4, =_ebss
 8003068:	4c0b      	ldr	r4, [pc, #44]	; (8003098 <LoopForever+0x16>)
  movs r3, #0
 800306a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800306c:	e001      	b.n	8003072 <LoopFillZerobss>

0800306e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800306e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003070:	3204      	adds	r2, #4

08003072 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8003072:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003074:	d3fb      	bcc.n	800306e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8003076:	f7ff ffa5 	bl	8002fc4 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 800307a:	f000 f817 	bl	80030ac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800307e:	f7ff fdd1 	bl	8002c24 <main>

08003082 <LoopForever>:

LoopForever:
    b LoopForever
 8003082:	e7fe      	b.n	8003082 <LoopForever>
  ldr   r0, =_estack
 8003084:	20001000 	.word	0x20001000
  ldr r0, =_sdata
 8003088:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800308c:	20000104 	.word	0x20000104
  ldr r2, =_sidata
 8003090:	08003320 	.word	0x08003320
  ldr r2, =_sbss
 8003094:	20000104 	.word	0x20000104
  ldr r4, =_ebss
 8003098:	20000170 	.word	0x20000170

0800309c <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800309c:	e7fe      	b.n	800309c <ADC1_IRQHandler>
	...

080030a0 <__errno>:
 80030a0:	4b01      	ldr	r3, [pc, #4]	; (80030a8 <__errno+0x8>)
 80030a2:	6818      	ldr	r0, [r3, #0]
 80030a4:	4770      	bx	lr
 80030a6:	46c0      	nop			; (mov r8, r8)
 80030a8:	200000a0 	.word	0x200000a0

080030ac <__libc_init_array>:
 80030ac:	b570      	push	{r4, r5, r6, lr}
 80030ae:	2600      	movs	r6, #0
 80030b0:	4d0c      	ldr	r5, [pc, #48]	; (80030e4 <__libc_init_array+0x38>)
 80030b2:	4c0d      	ldr	r4, [pc, #52]	; (80030e8 <__libc_init_array+0x3c>)
 80030b4:	1b64      	subs	r4, r4, r5
 80030b6:	10a4      	asrs	r4, r4, #2
 80030b8:	42a6      	cmp	r6, r4
 80030ba:	d109      	bne.n	80030d0 <__libc_init_array+0x24>
 80030bc:	2600      	movs	r6, #0
 80030be:	f000 f8df 	bl	8003280 <_init>
 80030c2:	4d0a      	ldr	r5, [pc, #40]	; (80030ec <__libc_init_array+0x40>)
 80030c4:	4c0a      	ldr	r4, [pc, #40]	; (80030f0 <__libc_init_array+0x44>)
 80030c6:	1b64      	subs	r4, r4, r5
 80030c8:	10a4      	asrs	r4, r4, #2
 80030ca:	42a6      	cmp	r6, r4
 80030cc:	d105      	bne.n	80030da <__libc_init_array+0x2e>
 80030ce:	bd70      	pop	{r4, r5, r6, pc}
 80030d0:	00b3      	lsls	r3, r6, #2
 80030d2:	58eb      	ldr	r3, [r5, r3]
 80030d4:	4798      	blx	r3
 80030d6:	3601      	adds	r6, #1
 80030d8:	e7ee      	b.n	80030b8 <__libc_init_array+0xc>
 80030da:	00b3      	lsls	r3, r6, #2
 80030dc:	58eb      	ldr	r3, [r5, r3]
 80030de:	4798      	blx	r3
 80030e0:	3601      	adds	r6, #1
 80030e2:	e7f2      	b.n	80030ca <__libc_init_array+0x1e>
 80030e4:	08003318 	.word	0x08003318
 80030e8:	08003318 	.word	0x08003318
 80030ec:	08003318 	.word	0x08003318
 80030f0:	0800331c 	.word	0x0800331c

080030f4 <malloc>:
 80030f4:	b510      	push	{r4, lr}
 80030f6:	4b03      	ldr	r3, [pc, #12]	; (8003104 <malloc+0x10>)
 80030f8:	0001      	movs	r1, r0
 80030fa:	6818      	ldr	r0, [r3, #0]
 80030fc:	f000 f804 	bl	8003108 <_malloc_r>
 8003100:	bd10      	pop	{r4, pc}
 8003102:	46c0      	nop			; (mov r8, r8)
 8003104:	200000a0 	.word	0x200000a0

08003108 <_malloc_r>:
 8003108:	2303      	movs	r3, #3
 800310a:	b570      	push	{r4, r5, r6, lr}
 800310c:	1ccd      	adds	r5, r1, #3
 800310e:	439d      	bics	r5, r3
 8003110:	3508      	adds	r5, #8
 8003112:	0006      	movs	r6, r0
 8003114:	2d0c      	cmp	r5, #12
 8003116:	d21e      	bcs.n	8003156 <_malloc_r+0x4e>
 8003118:	250c      	movs	r5, #12
 800311a:	42a9      	cmp	r1, r5
 800311c:	d81d      	bhi.n	800315a <_malloc_r+0x52>
 800311e:	0030      	movs	r0, r6
 8003120:	f000 f862 	bl	80031e8 <__malloc_lock>
 8003124:	4a25      	ldr	r2, [pc, #148]	; (80031bc <_malloc_r+0xb4>)
 8003126:	6814      	ldr	r4, [r2, #0]
 8003128:	0021      	movs	r1, r4
 800312a:	2900      	cmp	r1, #0
 800312c:	d119      	bne.n	8003162 <_malloc_r+0x5a>
 800312e:	4c24      	ldr	r4, [pc, #144]	; (80031c0 <_malloc_r+0xb8>)
 8003130:	6823      	ldr	r3, [r4, #0]
 8003132:	2b00      	cmp	r3, #0
 8003134:	d103      	bne.n	800313e <_malloc_r+0x36>
 8003136:	0030      	movs	r0, r6
 8003138:	f000 f844 	bl	80031c4 <_sbrk_r>
 800313c:	6020      	str	r0, [r4, #0]
 800313e:	0029      	movs	r1, r5
 8003140:	0030      	movs	r0, r6
 8003142:	f000 f83f 	bl	80031c4 <_sbrk_r>
 8003146:	1c43      	adds	r3, r0, #1
 8003148:	d12b      	bne.n	80031a2 <_malloc_r+0x9a>
 800314a:	230c      	movs	r3, #12
 800314c:	0030      	movs	r0, r6
 800314e:	6033      	str	r3, [r6, #0]
 8003150:	f000 f84b 	bl	80031ea <__malloc_unlock>
 8003154:	e003      	b.n	800315e <_malloc_r+0x56>
 8003156:	2d00      	cmp	r5, #0
 8003158:	dadf      	bge.n	800311a <_malloc_r+0x12>
 800315a:	230c      	movs	r3, #12
 800315c:	6033      	str	r3, [r6, #0]
 800315e:	2000      	movs	r0, #0
 8003160:	bd70      	pop	{r4, r5, r6, pc}
 8003162:	680b      	ldr	r3, [r1, #0]
 8003164:	1b5b      	subs	r3, r3, r5
 8003166:	d419      	bmi.n	800319c <_malloc_r+0x94>
 8003168:	2b0b      	cmp	r3, #11
 800316a:	d903      	bls.n	8003174 <_malloc_r+0x6c>
 800316c:	600b      	str	r3, [r1, #0]
 800316e:	18cc      	adds	r4, r1, r3
 8003170:	6025      	str	r5, [r4, #0]
 8003172:	e003      	b.n	800317c <_malloc_r+0x74>
 8003174:	684b      	ldr	r3, [r1, #4]
 8003176:	428c      	cmp	r4, r1
 8003178:	d10d      	bne.n	8003196 <_malloc_r+0x8e>
 800317a:	6013      	str	r3, [r2, #0]
 800317c:	0030      	movs	r0, r6
 800317e:	f000 f834 	bl	80031ea <__malloc_unlock>
 8003182:	0020      	movs	r0, r4
 8003184:	2207      	movs	r2, #7
 8003186:	300b      	adds	r0, #11
 8003188:	1d23      	adds	r3, r4, #4
 800318a:	4390      	bics	r0, r2
 800318c:	1ac3      	subs	r3, r0, r3
 800318e:	d0e7      	beq.n	8003160 <_malloc_r+0x58>
 8003190:	425a      	negs	r2, r3
 8003192:	50e2      	str	r2, [r4, r3]
 8003194:	e7e4      	b.n	8003160 <_malloc_r+0x58>
 8003196:	6063      	str	r3, [r4, #4]
 8003198:	000c      	movs	r4, r1
 800319a:	e7ef      	b.n	800317c <_malloc_r+0x74>
 800319c:	000c      	movs	r4, r1
 800319e:	6849      	ldr	r1, [r1, #4]
 80031a0:	e7c3      	b.n	800312a <_malloc_r+0x22>
 80031a2:	2303      	movs	r3, #3
 80031a4:	1cc4      	adds	r4, r0, #3
 80031a6:	439c      	bics	r4, r3
 80031a8:	42a0      	cmp	r0, r4
 80031aa:	d0e1      	beq.n	8003170 <_malloc_r+0x68>
 80031ac:	1a21      	subs	r1, r4, r0
 80031ae:	0030      	movs	r0, r6
 80031b0:	f000 f808 	bl	80031c4 <_sbrk_r>
 80031b4:	1c43      	adds	r3, r0, #1
 80031b6:	d1db      	bne.n	8003170 <_malloc_r+0x68>
 80031b8:	e7c7      	b.n	800314a <_malloc_r+0x42>
 80031ba:	46c0      	nop			; (mov r8, r8)
 80031bc:	20000134 	.word	0x20000134
 80031c0:	20000138 	.word	0x20000138

080031c4 <_sbrk_r>:
 80031c4:	2300      	movs	r3, #0
 80031c6:	b570      	push	{r4, r5, r6, lr}
 80031c8:	4c06      	ldr	r4, [pc, #24]	; (80031e4 <_sbrk_r+0x20>)
 80031ca:	0005      	movs	r5, r0
 80031cc:	0008      	movs	r0, r1
 80031ce:	6023      	str	r3, [r4, #0]
 80031d0:	f7ff fecc 	bl	8002f6c <_sbrk>
 80031d4:	1c43      	adds	r3, r0, #1
 80031d6:	d103      	bne.n	80031e0 <_sbrk_r+0x1c>
 80031d8:	6823      	ldr	r3, [r4, #0]
 80031da:	2b00      	cmp	r3, #0
 80031dc:	d000      	beq.n	80031e0 <_sbrk_r+0x1c>
 80031de:	602b      	str	r3, [r5, #0]
 80031e0:	bd70      	pop	{r4, r5, r6, pc}
 80031e2:	46c0      	nop			; (mov r8, r8)
 80031e4:	2000016c 	.word	0x2000016c

080031e8 <__malloc_lock>:
 80031e8:	4770      	bx	lr

080031ea <__malloc_unlock>:
 80031ea:	4770      	bx	lr

080031ec <round>:
 80031ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80031ee:	004a      	lsls	r2, r1, #1
 80031f0:	0007      	movs	r7, r0
 80031f2:	481f      	ldr	r0, [pc, #124]	; (8003270 <round+0x84>)
 80031f4:	0d52      	lsrs	r2, r2, #21
 80031f6:	1815      	adds	r5, r2, r0
 80031f8:	000e      	movs	r6, r1
 80031fa:	2d13      	cmp	r5, #19
 80031fc:	dc18      	bgt.n	8003230 <round+0x44>
 80031fe:	2d00      	cmp	r5, #0
 8003200:	da09      	bge.n	8003216 <round+0x2a>
 8003202:	0fcb      	lsrs	r3, r1, #31
 8003204:	07db      	lsls	r3, r3, #31
 8003206:	2200      	movs	r2, #0
 8003208:	1c69      	adds	r1, r5, #1
 800320a:	d101      	bne.n	8003210 <round+0x24>
 800320c:	4919      	ldr	r1, [pc, #100]	; (8003274 <round+0x88>)
 800320e:	430b      	orrs	r3, r1
 8003210:	0019      	movs	r1, r3
 8003212:	0010      	movs	r0, r2
 8003214:	e017      	b.n	8003246 <round+0x5a>
 8003216:	4a18      	ldr	r2, [pc, #96]	; (8003278 <round+0x8c>)
 8003218:	412a      	asrs	r2, r5
 800321a:	420a      	tst	r2, r1
 800321c:	d101      	bne.n	8003222 <round+0x36>
 800321e:	2f00      	cmp	r7, #0
 8003220:	d012      	beq.n	8003248 <round+0x5c>
 8003222:	2380      	movs	r3, #128	; 0x80
 8003224:	031b      	lsls	r3, r3, #12
 8003226:	412b      	asrs	r3, r5
 8003228:	199b      	adds	r3, r3, r6
 800322a:	4393      	bics	r3, r2
 800322c:	2200      	movs	r2, #0
 800322e:	e7ef      	b.n	8003210 <round+0x24>
 8003230:	2d33      	cmp	r5, #51	; 0x33
 8003232:	dd0b      	ble.n	800324c <round+0x60>
 8003234:	2380      	movs	r3, #128	; 0x80
 8003236:	00db      	lsls	r3, r3, #3
 8003238:	429d      	cmp	r5, r3
 800323a:	d105      	bne.n	8003248 <round+0x5c>
 800323c:	003a      	movs	r2, r7
 800323e:	000b      	movs	r3, r1
 8003240:	0038      	movs	r0, r7
 8003242:	f7fd f80b 	bl	800025c <__aeabi_dadd>
 8003246:	0007      	movs	r7, r0
 8003248:	0038      	movs	r0, r7
 800324a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800324c:	2601      	movs	r6, #1
 800324e:	480b      	ldr	r0, [pc, #44]	; (800327c <round+0x90>)
 8003250:	4276      	negs	r6, r6
 8003252:	1812      	adds	r2, r2, r0
 8003254:	40d6      	lsrs	r6, r2
 8003256:	423e      	tst	r6, r7
 8003258:	d0f6      	beq.n	8003248 <round+0x5c>
 800325a:	2233      	movs	r2, #51	; 0x33
 800325c:	1b55      	subs	r5, r2, r5
 800325e:	3a32      	subs	r2, #50	; 0x32
 8003260:	40aa      	lsls	r2, r5
 8003262:	19d2      	adds	r2, r2, r7
 8003264:	42ba      	cmp	r2, r7
 8003266:	41a4      	sbcs	r4, r4
 8003268:	4264      	negs	r4, r4
 800326a:	190b      	adds	r3, r1, r4
 800326c:	43b2      	bics	r2, r6
 800326e:	e7cf      	b.n	8003210 <round+0x24>
 8003270:	fffffc01 	.word	0xfffffc01
 8003274:	3ff00000 	.word	0x3ff00000
 8003278:	000fffff 	.word	0x000fffff
 800327c:	fffffbed 	.word	0xfffffbed

08003280 <_init>:
 8003280:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003282:	46c0      	nop			; (mov r8, r8)
 8003284:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003286:	bc08      	pop	{r3}
 8003288:	469e      	mov	lr, r3
 800328a:	4770      	bx	lr

0800328c <_fini>:
 800328c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800328e:	46c0      	nop			; (mov r8, r8)
 8003290:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003292:	bc08      	pop	{r3}
 8003294:	469e      	mov	lr, r3
 8003296:	4770      	bx	lr
